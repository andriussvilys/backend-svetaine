{"version":3,"sources":["components/Auth.js","components/PrivateRoute.js","components/FrontEnd/FrontEndProvider.js","components/FrontEnd/components/TagsMenu/Checkbox.js","components/FrontEnd/components/TagsMenu/Category.js","components/FrontEnd/components/YearLocation/Year.js","components/FrontEnd/components/YearLocation/Location.js","components/FrontEnd/components/Themes/Themes.js","components/FrontEnd/components/ClearAll.js","components/FrontEnd/components/About/About.js","components/FrontEnd/components/FilePreview.js","components/FrontEnd/components/TagsMenu.js","components/FrontEnd/components/ImageSelect/ImageSelect.js","components/FrontEnd/components/ArtworkInfo/Tags.js","components/FrontEnd/components/ArtworkInfo/ArtworkInfo.js","components/FrontEnd/components/ArtworkInfo/PreviewBubble.js","components/FrontEnd/components/ArtworkInfo/Controls.js","components/FrontEnd/components/ArtworkInfo/Combined.js","components/FrontEnd/components/Enlarge/Enlarge.js","components/FrontEnd/components/Nav/Nav.js","components/FrontEnd/components/TagsMenu/v2/components/Accordion.js","components/FrontEnd/components/TagsMenu/v2/components/Title.js","components/FrontEnd/components/TagsMenu/v2/FilterTree.js","components/FrontEnd/components/TagsMenu/v2/Menu.js","components/FrontEnd/FrontEndIndex.js","components/FrontEnd/FrontEndContext.js","components/Admin/components/BootstrapModal.js","components/Provider.js","components/Admin/components/Filters/subcomponents/Categories.js","components/Admin/components/Filters/subcomponents/DisplayTriggers/DisplayTriggerList.js","components/Admin/components/Filters/subcomponents/DisplayTriggers/DisplayTriggers.js","components/Admin/components/Filters/subcomponents/YearLocation.js","components/Admin/components/AddNew.js","components/Admin/components/DropDownList.js","components/Admin/components/Filters/subcomponents/Themes.js","components/Admin/components/Filters/Filters.js","components/Admin/components/FamilyInfo/subcomponents/FamilyDescription.js","components/Admin/components/ArtworkInfo/ArtworkInfo.js","components/Admin/components/FilePreview.js","components/Admin/components/ImageBox/ImageBox.js","components/Admin/components/ArrangeIndexes/subcomponents/FamilyListDraggable.js","components/Admin/components/ArrangeIndexes/subcomponents/FamilyListDroppable.js","components/Admin/components/ArrangeIndexes/ArrangeFamilyIndexes.js","components/Admin/components/SeeAlso/SeeAlso.js","components/Admin/components/FamilyInfo/subcomponents/SelectFamily.js","components/Admin/components/Accordion.js","components/Admin/components/SeeAlso/SeeAlsoContainer.js","components/Admin/components/FamilyInfo/EditFamilyInfo.js","components/Admin/components/EditArtwork/EditArtwork.js","components/Admin/components/ImageBox/optionalComponents/EditFileButtons.js","components/Admin/components/SeeAlso/SeeAlsoPicker.js","components/Admin/components/FileUpload/NewSingleFile.js","components/Admin/components/FileUpload/FamilyList.js","components/Admin/components/FileUpload/MainContainer.js","components/Admin/components/FamilyInfo/subcomponents/SubmitFamilyInfo.js","components/Admin/oldComponents/UpdateAllArtworkInfo.js","components/Admin/Create.js","components/Admin/components/EditPage/EditDetailContainer.js","components/Admin/components/EditPage/ServerFileUpdate.js","components/Admin/Edit.js","components/Admin/oldComponents/Delete.js","components/Admin/Admin.js","components/Login.js","App.js","index.js"],"names":["this","authenticated","guest","cb","props","PrivateRoute","Component","component","rest","render","auth","isAuthenticated","to","pathname","state","from","location","Context","React","createContext","Provider","enlarge","categoryChecked","category","onDisplay","Object","keys","artworkOnDisplay","forEach","fileName","file","includes","filterByCategory","e","hideAll","stopPropagation","Promise","res","rej","newDisplay","zeroDisplay","visibleArtwork","setState","id","document","getElementById","classList","add","setTimeout","artworkInfoData","displayTriggers","remove","filterBySubcategory","subcategory","console","log","target","subcategoryChecked","listitemChecked","listitem","filterByListitem","listitems","filterByTheme","theme","newState","toggleArtwork","themesOnDisplay","visibleThemesList","themes","map","Array","Set","all","allNames","name","DOMitem","src","getAttribute","themeChecked","item","filterAllThemes","hide","filterByYear","year","yearLocation","years","yearChecked","visible","filter","length","filterByLocation","locations","locationChecked","showMenu","mobile","delay","contains","getElementsByClassName","open","animateEnlarge","background","style","width","toggle","hideArtworkInfo","ArtworkInfo","closeEnlarge","clearAll","enlargeContainer","viewNext","direction","options","createFamilySequence","familyName","familySequence","familyIndex","commonSequence","commonIndex","sequence","nextIndex","nextPicName","find","artworkFamily","indexOf","nextPic","prevPicName","prevPic","lastOfFamilyFile","relatedArtwork","column","fileIds","reverse","findNextIndex","scroll","countWidth","containerHeight","naturalHeight","naturalWidth","tagsMenuWidth","offsetWidth","imageNavWidth","querySelector","tagsMenuClosed","maxWidth","parentNode","naturalRatio","clientWidth","maxHeight","clientHeight","futureWidth","futureHeight","Math","round","height","sizeRatio","loaded","fgLoaded","foreground","container","imageSelect","images","previous","bgSrc","fgSrc","thumbnailPath","mobilePath","desktopPath","addEventListener","then","futureSize","naturalSize","scrollToDelay","currentWidth","momentum","toFixed","scrollToId","scrollToHorizontal","currentHeight","catch","increment","parent_id","scrollTo","behavior","left","scrollDelay","scrollLeft","scrollIncrement","getBoundingClientRect","x","allVisible","querySelectorAll","childNodes","currentImage","currentSequence","recordedSequence","loadEnlarge","showInfo","info","counter","toggleMobile","documentElement","onTouchStart","touches","touch","clientX","clientY","lazyLoadImages","imgOptions","threshold","margin","imgObserver","IntersectionObserver","entries","entry","isIntersecting","img","preloadImage","unobserve","image","observe","getArtworkInfo","resolve","serverFileNames","axios","get","data","newServerFileName","start","substring","extension","databaseFiles","usedNames","obj","useFamilySetup","err","getRelatedArtwork","reject","index","property","familyDisplayIndex","push","finalRelatedArtwork","files","columnOrder","window","value","viewPrev","readImageDir","changeFileName","onChange","addNew","children","Checkbox","className","type","checked","isChecked","Category","title","level","key","onClick","showContent","clickable","titleModifier","letter","button","Year","yearList","context","modifierClass","Location","locationList","loc","flex","listStyle","Themes","renderList","sort","ClearAll","clearImgs","About","FilePreview","fileContainer","fileType","previewSource","filePath","preview","match","loadbydefault","alt","artworkDescription","familyDescription","artworkName","data-src","previewName","ref","controls","noWrapper","containerClassName","ImageSelect","root","rootMargin","previews","objName","halfSize","methods","createPreviewsALL","Tags","animateFilter","filterFunc","enlargeImg","newImg","currentObj","values","infoUpDelay","DOMthemes","tag","categories","DOMcategories","subcategories","DOMsubcategories","listItems","list","listItem","DOMlistItems","tags","artworkTitle","locationAndYear","ReactHtmlParser","seeAlsos","seeAlso","DOMS","otherInFam","combined","singleContainer","isArray","PreviewBubbles","bubbles","countBubbles","Controls","artworkInfo","menu","Combined","PreviewBubble","Enlarge","panEvent","Nav","showButtons","Accordion","containerClass","listId","timeout","scrollHeight","parent","Title","htmlFor","FilterTree","categoriesData","subcategoryLists","Menu","getElementsByTagName","whiteSpace","FrontEndIndex","spreadLetters","imgSelectLoaded","Consumer","lazyLoad","nextEnlarge","contextType","FrontEndContext","BootstrapModal","show","showModal","setShow","handleClose","handleShow","Modal","onHide","Body","message","Footer","confirm","Button","variant","confirmedAction","onClose","fileData","familySetupData","seeAlsoData","renderFiles","fileNames","themesData","artworkFamilyList","serverFileDir","nameWithFileType","split","innerHTML","inputValue","textContent","inputFamilyDescription","router","requestKey","stateKey","callback","preventDefault","newAddition","verify","verified","modalMessage","post","toJSON","toString","put","deleteTheme","oldtheme","categoryMethods","getCategoryNames","categoryDomList","categoriesOptionList","DOM","getSubcategoryNames","subCategoryDomList","optGroups","selectedCategory","cat","label","subCat","subCategories","submitNewCategory","categoryInput","subcategoryInput","listitemInput","reqBody","customGuestMessage","updateCategory","objToUpdate","objIndex","categoriesDataUpdate","subcategoryArray","deleteCategory","categoryName","updateContent","deletedItem","deletetedCategoryIndex","splice","categoryObj","categoryIndex","newArray","autoCheckCategories","statePath","onCheck","listItemPath","newListitems","parentCheckbox","classNameCheck","newCategory","categoryPath","newListItem","newList","newSubcategory","subcategoryPath","classname","checkboxId","stateCopy","listitemsToRemove","trigger","flat","fileDataMethods","deleteImage","delete","alert","deleteDBrecord","paths","newFileIds","serverFileToState","string","onChangeDisplayTriggers","familySetup","nestTypeResult","nest","transferState","radioValue","newDisplayTriggers","getSubcategories","sub","getListitems","familySetupMethods","_id","__v","newFamInfo","currentInfo","newFileInfo","propertyName","addFileToState","fileInput","objCounter","messages","fileList","filteredList","modalMessages","reader","FileReader","onload","Image","result","none","readAsDataURL","uploadFile","fd","FormData","append","artwrokTitle","removeFile","newFiles","onDragEnd","destination","source","draggableId","droppableId","newColumn","onDragEndFamilyList","slice","updateArtworkInfo","currentFamilyDisplayIndex","relateSeeAlso","updateLength","progressCount","updateArtworkByFamily","progress","familyData","postArtworkInfo","newName","fileExtension","fileDataObject","displayMain","initialIndex","makeSet","array","prevSeeAlso","currentSeeAlso","newToAdd","record","newToRemove","removeSeeAlsos","progressLength","seeAlsoParent","newSeeAlso","addSeeAlsos","updateSeeAlso","newValue","filterByFamily","newRenderList","replace","resetRenderFiles","removeValue","getFamilySetup","newFamilySetup","objKey","restoreFamilySetup","createFamilySetup","requestBody","updateFamilySetup","noIndex","undefined","updateContext","customMessage","verfied","customError","staticState","FamilyList","familyList","Categories","categoryNames","allThemes","allThemesSet","artworkByTheme","themesArr","displayThemes","hideThemes","hideTheme","artworkByYear","artworkByLocation","yearLocOnDisplay","serverFiles","serverData","JSON","stringify","ServerFiles","reload","familySetupdata","deletePromise","recordToDelete","newCategoryObject","currentSubcategory","checkOptionList","allowDelete","modalInvoke","requireActionConfirm","placeholder","onFocus","size","DisplayTriggerList","createList","DisplayTriggers","YearLocation","display","AddNew","saveButtonText","spinnerDisplay","saveButtonDisable","changeButtonText","action","onSubmit","addNewTitle","form","Header","closeButton","transition","disabled","Spinner","borderWidth","animation","DropDownList","createDropDownList","highlighter","uncontrolled","highlighted","lettersArray","toUpperCase","sortedByLetter","checkbox","addNewTarget","dataArray","Filters","Tabs","defaultActiveKey","Tab","eventKey","allowCategoriesDelete","allowThemesDelete","FamilyDescription","inputvalue","border","ImageBox","customClass","directory","DnDListDraggable","provided","draggableProps","innerRef","dragHandleProps","onMouseDown","dragHandle","DndListDroppable","orderData","droppableProps","fileId","FamilyListDraggable","columnId","ArrangeFamilyIndexes","createDroppable","FamilyListDroppable","columnIndex","SeeAlso","padding","fontSize","justifyContent","SelectFamily","radio","Card","Toggle","fontWeight","as","Collapse","collapseId","SeeAlsoContainer","renderContainer","allFiles","newHighlighted","reloadAll","initialData","EditFamilyInfo","unconctrolled","EditFileButtons","onModalClick","SeeAlsoPicker","modalConfirm","EditDetail","NewSingleFile","submitButtons","verification","postAll","allInFamily","promiseLength","fileRecord","progressBar","ProgressBar","now","MainContainer","filesData","sortByFamily","familyNames","fileByFamily","renderNames","sortedData","SubmitFamilyInfo","currentFamily","submitAction","UpdateAllArtworkInfo","allDocumentNames","artwork","nameRoot","Create","callbackPromise","recordedFamilyNames","multiple","event","backgroundColor","FileUpdate","fileToDelete","onModalClose","FileInfo","Edit","dataObj","exact","path","params","Delete","ids","idsSet","Admin","history","logout","Login","userBgColor","passwordBgColor","required","username","password","login","App","ReactDOM"],"mappings":"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","file":"static/js/main.f682ea46.chunk.js","sourcesContent":["class Auth {\r\n    constructor(){\r\n        this.authenticated = false\r\n        this.guest = false\r\n    }\r\n    login(cb, props){\r\n        if(props && props.guest){\r\n            this.guest = true\r\n        }\r\n        else{\r\n            this.guest = false\r\n        }\r\n        this.authenticated = true\r\n        cb()\r\n    }\r\n    logout(cb){\r\n        this.authenticated = false\r\n        this.guest = null\r\n        cb()\r\n    }\r\n    isAuthenticated(){\r\n        return this.authenticated\r\n    }\r\n}\r\n\r\nexport default new Auth()","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport auth from './Auth'\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => {\r\n    return(\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if(auth.isAuthenticated()){\r\n                    return <Component {...props} />\r\n                }\r\n                else{\r\n                    return <Redirect \r\n                    to={\r\n                        {\r\n                        pathname: '/admin/login',\r\n                        state: {\r\n                            from: props.location\r\n                            }\r\n                        }\r\n                    } \r\n                    />\r\n                }\r\n            }\r\n        } />\r\n    )\r\n} ","import React from 'react';\r\nimport axios from 'axios'\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport class Provider extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  this.state = {}\r\n\r\n  this.enlarge = {}\r\n\r\n    this.categoryChecked = (category) => {\r\n        let onDisplay = false\r\n        Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n            const file = this.state.artworkOnDisplay[fileName]\r\n            if(Object.keys(file.category).includes(category)){\r\n                onDisplay = true\r\n            }\r\n        })\r\n        // console.log(`${category} is checked: ${onDisplay}`)\r\n        return onDisplay\r\n    }\r\n\r\n    this.filterByCategory = (e, category, hideAll) => {\r\n      e.stopPropagation()\r\n      return new Promise((res,rej) => {\r\n        let newDisplay = {}\r\n        let zeroDisplay = {}\r\n\r\n        if(hideAll){\r\n            Object.keys(this.state.visibleArtwork).forEach(fileName => {\r\n              const file = this.state.visibleArtwork[fileName]\r\n              if(file.category[category]){\r\n                return newDisplay = {...newDisplay, [fileName]: file}\r\n              }\r\n              else{\r\n                  zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n              }\r\n          })\r\n          return this.setState({artworkOnDisplay: newDisplay}, () => {res('filter by category complete')})\r\n        }\r\n\r\n        //ON UN-CHECK\r\n        // if(!checkbox.checked){\r\n          if(this.categoryChecked(category)){\r\n            Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n                const file = this.state.artworkOnDisplay[fileName]\r\n                if(!Object.keys(file.category).includes(category)){\r\n                    newDisplay = {...newDisplay, [fileName]: file}\r\n                }\r\n                else{zeroDisplay = {...zeroDisplay, [fileName]: file}}\r\n            })\r\n            Object.keys(zeroDisplay).forEach(id => {\r\n                document.getElementById(id).classList.add('image-hide')\r\n            })\r\n            setTimeout(() => {\r\n              return this.setState({artworkOnDisplay: newDisplay}, () => {res(150)})\r\n            }, 200);\r\n        }\r\n        //ON CHECK\r\n        else{\r\n            newDisplay={...this.state.artworkOnDisplay}\r\n            Object.keys(this.state.artworkInfoData).forEach(fileName => {\r\n                const file = this.state.artworkInfoData[fileName]\r\n                if(file.displayTriggers.category.includes(category)){\r\n                  newDisplay = {...newDisplay, [fileName]: file}\r\n                }\r\n            })\r\n            Object.keys(newDisplay).forEach(id => {\r\n                document.getElementById(id).classList.remove('image-hide')\r\n            })\r\n            setTimeout(() => {\r\n              return this.setState({artworkOnDisplay: newDisplay}, () => {res(150)})\r\n            }, 200);\r\n        }\r\n      })\r\n    }\r\n\r\n    this.filterBySubcategory = (e, category, subcategory, hideAll) => {\r\n      console.log(e.target)\r\n      e.stopPropagation()\r\n      return new Promise ((res, rej) => {\r\n          let newDisplay = {}\r\n          let zeroDisplay = {}\r\n\r\n          if(hideAll){\r\n            Object.keys(this.state.visibleArtwork).forEach(fileName => {\r\n              const file = this.state.visibleArtwork[fileName]\r\n              if(file.category[category] && file.category[category][subcategory]){\r\n                return newDisplay = {...newDisplay, [fileName]: file}\r\n              }\r\n              else{\r\n                  zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n              }\r\n          })\r\n          return this.setState({artworkOnDisplay: newDisplay}, () => res('filtered by subcategory'))\r\n          }\r\n\r\n          //ON UN-CHECK\r\n          if(this.subcategoryChecked(category, subcategory)){\r\n              Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n                  const file = this.state.artworkOnDisplay[fileName]\r\n                  if(file.category[category]){\r\n                      if(!Object.keys(file.category[category]).includes(subcategory)){\r\n                          return newDisplay = {...newDisplay, [fileName]: file}\r\n                      }\r\n                      else{\r\n                          zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n                      }\r\n                  }\r\n                  else{\r\n                      return newDisplay = {...newDisplay, [fileName]: file}\r\n                  }\r\n              })\r\n\r\n              Object.keys(zeroDisplay).forEach(id => {\r\n                  document.getElementById(id).classList.add('image-hide')\r\n              })\r\n              setTimeout(() => {\r\n                return this.setState({artworkOnDisplay: newDisplay})\r\n              }, 200);\r\n          }\r\n          //ON CHECK\r\n          else{\r\n              newDisplay={...this.state.artworkOnDisplay}\r\n\r\n              Object.keys(this.state.artworkInfoData).forEach(fileName => {\r\n                  const file = this.state.artworkInfoData[fileName]\r\n                  if(file.displayTriggers.subcategory.includes(subcategory)){\r\n                    newDisplay = {...newDisplay, [fileName]: file}\r\n                  }\r\n              })\r\n              Object.keys(newDisplay).forEach(id => {\r\n                  document.getElementById(id).classList.remove('image-hide')\r\n              })\r\n\r\n              setTimeout(() => {\r\n                return this.setState({artworkOnDisplay: newDisplay})\r\n              }, 200);\r\n          }\r\n      })\r\n\r\n    }\r\n    this.subcategoryChecked = (category, subcategory) => {\r\n        let onDisplay = false\r\n        Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n            const file = this.state.artworkOnDisplay[fileName]\r\n            if(file.category[category]){\r\n                if(Object.keys(file.category[category]).includes(subcategory)){\r\n                    onDisplay = true\r\n                }\r\n            }\r\n        })\r\n        return onDisplay\r\n    }\r\n    this.listitemChecked = (category, subcategory, listitem) => {\r\n        let onDisplay = false\r\n        Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n            const file = this.state.artworkOnDisplay[fileName]\r\n            if(file.category[category]){\r\n              if(file.category[category][subcategory]){\r\n                if(file.category[category][subcategory].includes(listitem)){\r\n                  return onDisplay = true\r\n                }\r\n              }\r\n            }\r\n        })\r\n        return onDisplay\r\n    }\r\n    this.filterByListitem = (e, category, subcategory, listitem, hideAll) => {\r\n      e.stopPropagation()\r\n      return new Promise ((res, rej) => {\r\n        let newDisplay = {}\r\n        let zeroDisplay = {}\r\n\r\n        if(hideAll){\r\n          Object.keys(this.state.visibleArtwork).forEach(fileName => {\r\n            const file = this.state.visibleArtwork[fileName]\r\n            if(file.category[category] && file.category[category][subcategory]){\r\n              if(file.category[category][subcategory].includes(listitem)){\r\n                return newDisplay = {...newDisplay, [fileName]: file}\r\n              }\r\n              else{\r\n                zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n              }\r\n            }\r\n            else{\r\n                zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n            }\r\n        })\r\n        return this.setState({artworkOnDisplay: newDisplay}, () => {res('fitlered by listitem')})\r\n        }\r\n\r\n        //ON UN-CHECK\r\n        // if(!checkbox.checked){\r\n          if(this.listitemChecked(category, subcategory, listitem)){\r\n            Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n                const file = this.state.artworkOnDisplay[fileName]\r\n                if(file.category[category]){\r\n                  if(file.category[category][subcategory]){\r\n                    if(!file.category[category][subcategory].includes(listitem)){\r\n                      newDisplay = {...newDisplay, [fileName]: file}\r\n                    }\r\n                    else{\r\n                      zeroDisplay ={...zeroDisplay, [fileName]: file}\r\n                    }\r\n                  }\r\n                  else{newDisplay = {...newDisplay, [fileName]: file}}\r\n                }\r\n                else{newDisplay = {...newDisplay, [fileName]: file}}\r\n            })\r\n            Object.keys(zeroDisplay).forEach(id => {\r\n                document.getElementById(id).classList.add('image-hide')\r\n            })\r\n            setTimeout(() => {\r\n              return this.setState({artworkOnDisplay: newDisplay})\r\n            }, 200);\r\n        }\r\n        //ON CHECK\r\n        else{\r\n            newDisplay={...this.state.artworkOnDisplay}\r\n            Object.keys(this.state.artworkInfoData).forEach(fileName => {\r\n                const file = this.state.artworkInfoData[fileName]\r\n                  if(file.displayTriggers.listitems.includes(listitem)){\r\n                    newDisplay = {...newDisplay, [fileName]: file}\r\n                  }\r\n            })\r\n            Object.keys(newDisplay).forEach(id => {\r\n                document.getElementById(id).classList.remove('image-hide')\r\n            })\r\n            setTimeout(() => {\r\n              return this.setState({artworkOnDisplay: newDisplay})\r\n            }, 200);\r\n        }\r\n      })\r\n\r\n    }\r\n    /**\r\n     * @param: e\r\n     * @param: theme\r\n     */\r\n    this.filterByTheme = (e, theme, hideAll) => {\r\n      e.stopPropagation()\r\n      return new Promise ((res, rej) => {\r\n\r\n        const newState = {...this.state}\r\n        const toggleArtwork = [...newState.themesOnDisplay[theme]]\r\n        let artworkOnDisplay = {...newState.artworkOnDisplay}\r\n\r\n        let visibleThemesList = []\r\n        Object.keys(artworkOnDisplay).forEach(fileName => {\r\n          visibleThemesList = artworkOnDisplay[fileName].themes.map(theme => theme)\r\n        }, () => visibleThemesList = Array.from(new Set(visibleThemesList)))\r\n\r\n        if(hideAll){\r\n          console.log('on theme check')\r\n          let all = this.state.artworkInfoData\r\n          let allNames = Object.keys(this.state.artworkInfoData)\r\n          let artworkOnDisplay = {}\r\n\r\n          allNames.forEach(name => {\r\n            if(all[name].displayTriggers.themes && all[name].displayTriggers.themes.includes(theme)){\r\n              artworkOnDisplay = {...artworkOnDisplay, [name]: this.state.artworkInfoData[name]}\r\n            }\r\n          })\r\n\r\n          return this.setState({artworkOnDisplay}, () => {\r\n            allNames.forEach(name => {\r\n              const DOMitem = document.getElementById(name)\r\n              if(!DOMitem.src){\r\n                DOMitem.src = DOMitem.getAttribute('data-src')\r\n              }\r\n              DOMitem.classList.remove(\"image-hide\")\r\n            })\r\n            res('filter complete')\r\n          })\r\n        }\r\n        //ON UN-CHECK\r\n        // if(!checkbox.checked){\r\n        if(this.themeChecked(theme)){\r\n          console.log('on theme uncheck')\r\n          toggleArtwork.forEach(item => {\r\n            document.getElementById(item).classList.add(\"image-hide\")\r\n          })\r\n\r\n          toggleArtwork.forEach(fileName => {\r\n            delete artworkOnDisplay[fileName]\r\n          })\r\n          return this.setState({artworkOnDisplay}, () => res('filter by theme complete'))\r\n        }\r\n\r\n        else{\r\n          console.log('on theme check')\r\n          let all = this.state.artworkInfoData\r\n          let allNames = Object.keys(this.state.artworkInfoData)\r\n\r\n          allNames.forEach(name => {\r\n            if(all[name].displayTriggers.themes && all[name].displayTriggers.themes.includes(theme)){\r\n              artworkOnDisplay = {...artworkOnDisplay, [name]: this.state.artworkInfoData[name]}\r\n            }\r\n          })\r\n\r\n          return this.setState({artworkOnDisplay}, () => {\r\n            allNames.forEach(name => {\r\n              const DOMitem = document.getElementById(name)\r\n              if(!DOMitem.src){\r\n                DOMitem.src = DOMitem.getAttribute('data-src')\r\n              }\r\n              DOMitem.classList.remove(\"image-hide\")\r\n              // setTimeout(() => {\r\n              //   DOMitem.classList.remove(\"image-hide\")\r\n              // }, 200);\r\n            })\r\n            res('filter complete')\r\n          })\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n\r\n    this.filterAllThemes = (hide) => {\r\n      let themes = []\r\n      Object.keys(this.state.artworkOnDisplay).forEach(fileName => {\r\n        const file = this.state.artworkOnDisplay[fileName]\r\n        themes = [...themes, ...file.themes]\r\n        })\r\n      themes = Array.from(new Set(themes))\r\n\r\n      if(hide){\r\n        Object.keys(this.state.artworkOnDisplay).forEach(id => {\r\n            document.getElementById(id).classList.add('image-hide')\r\n        })\r\n        setTimeout(() => {\r\n          return this.setState({artworkOnDisplay: {}})\r\n        }, 200);\r\n      }\r\n      else{\r\n        // Object.keys(this.state.visibleArtwork).forEach(id => {\r\n        //     document.getElementById(id).classList.remove('image-hide')\r\n        // })\r\n        Object.keys(this.state.artworkInfoData).forEach(id => {\r\n            document.getElementById(id).classList.remove('image-hide')\r\n            document.getElementById(id).classList.remove('FilePreview--imageContainer__empty')\r\n            document.getElementById(id).src = document.getElementById(id).getAttribute(\"data-src\")\r\n        })\r\n        return this.setState({artworkOnDisplay: {...this.state.visibleArtwork}})\r\n      }\r\n      // themes.forEach(theme => this.filterByTheme(theme, true))\r\n    }\r\n\r\n    this.filterByYear = (year) => {\r\n            //ON UN-CHECK\r\n            const newState = {...this.state}\r\n            const toggleArtwork = [...newState.yearLocation.all.years[year]]\r\n            let artworkOnDisplay = {...newState.artworkOnDisplay}\r\n\r\n            // if(!checkbox.checked){\r\n            if(this.yearChecked(year)){\r\n\r\n              toggleArtwork.forEach(item => {\r\n                document.getElementById(item).classList.add(\"image-hide\")\r\n              })\r\n\r\n              setTimeout(() => {\r\n\r\n                toggleArtwork.forEach(fileName => {\r\n                  delete artworkOnDisplay[fileName]\r\n\r\n                })\r\n                return this.setState({artworkOnDisplay: artworkOnDisplay,\r\n                  yearLocation:{...newState.yearLocation, visible: {\r\n                    ...newState.yearLocation.visible, years: {\r\n                      ...newState.yearLocation.visible.years, [year]: []\r\n                    }\r\n                  }}\r\n                })\r\n\r\n              }, 400);\r\n            }\r\n            else{\r\n              const all = this.state.artworkInfoData\r\n              const allNames = Object.keys(this.state.artworkInfoData)\r\n              allNames.forEach(name => {\r\n                const file = all[name]\r\n                if(file.displayTriggers.year){\r\n                  if(all[name].displayTriggers.year.includes(year)){\r\n                    artworkOnDisplay = {...artworkOnDisplay, [name]: all[name]}\r\n                    const DOMitem = document.getElementById(name)\r\n                    DOMitem.classList.remove(\"image-hide\")\r\n                  }\r\n                }\r\n              })\r\n              return this.setState({artworkOnDisplay})\r\n            }\r\n\r\n    }\r\n\r\n    this.yearChecked = (year) => {\r\n\r\n      let onDisplay = []\r\n      const artworkOnDisplay = {...this.state.artworkOnDisplay}\r\n      onDisplay = Object.keys(artworkOnDisplay).filter(fileName => {\r\n        return artworkOnDisplay[fileName].year === year\r\n      })\r\n      return onDisplay.length > 0\r\n\r\n  }\r\n\r\n    this.themeChecked = (theme) => {\r\n      let onDisplay = []\r\n      const artworkOnDisplay = {...this.state.artworkOnDisplay}\r\n      onDisplay = Object.keys(artworkOnDisplay).filter(fileName => {\r\n        if(!artworkOnDisplay[fileName].displayTriggers.themes){\r\n          return\r\n        }\r\n        return artworkOnDisplay[fileName].displayTriggers.themes.includes(theme) === true\r\n      })\r\n      return onDisplay.length > 0\r\n    }\r\n\r\n    this.filterByLocation = location => {\r\n                  //ON UN-CHECK\r\n                  const newState = {...this.state}\r\n                  const toggleArtwork = [...newState.yearLocation.all.locations[location]]\r\n\r\n                  let artworkOnDisplay = {...newState.artworkOnDisplay}\r\n\r\n                  // if(!checkbox.checked){\r\n                    if(this.locationChecked(location)){\r\n\r\n                    toggleArtwork.forEach(item => {\r\n                      document.getElementById(item).classList.add(\"image-hide\")\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n\r\n                      toggleArtwork.forEach(fileName => {\r\n                        delete artworkOnDisplay[fileName]\r\n\r\n                      })\r\n                      return this.setState({artworkOnDisplay: artworkOnDisplay,\r\n                        yearLocation:{...newState.yearLocation, visible: {\r\n                          ...newState.yearLocation.visible, locations: {\r\n                            ...newState.yearLocation.visible.locations, [location]: []\r\n                          }\r\n                        }}\r\n                      })\r\n\r\n                    }, 400);\r\n                  }\r\n                  else{\r\n                    const all = this.state.artworkInfoData\r\n                    const allNames = Object.keys(this.state.artworkInfoData)\r\n                    allNames.forEach(name => {\r\n                      const file = all[name]\r\n                      if(file.displayTriggers.location){\r\n                        if(all[name].displayTriggers.location.includes(location)){\r\n                          artworkOnDisplay = {...artworkOnDisplay, [name]: all[name]}\r\n                          const DOMitem = document.getElementById(name)\r\n                          DOMitem.classList.remove(\"image-hide\")\r\n                        }\r\n                      }\r\n                    })\r\n\r\n                    // this.state.yearLocation.all.locations[location].forEach(item => {\r\n                    // })\r\n\r\n                    // this.state.yearLocation.all.locations[location].forEach(fileName => {\r\n                    //   artworkOnDisplay = {...artworkOnDisplay, [fileName]: this.state.artworkInfoData[fileName]}\r\n                    // })\r\n\r\n                    return this.setState({artworkOnDisplay})\r\n                  }\r\n    }\r\n\r\n    this.locationChecked = (location) => {\r\n      let onDisplay = []\r\n      const artworkOnDisplay = {...this.state.artworkOnDisplay}\r\n      onDisplay = Object.keys(artworkOnDisplay).filter(fileName => {\r\n        return artworkOnDisplay[fileName].location === location\r\n      })\r\n      return onDisplay.length > 0\r\n    }\r\n\r\n    this.showMenu = (e) => {\r\n      //Mobile\r\n      if(e){\r\n        e.stopPropagation()\r\n      }\r\n      console.log(\"run show menu\")\r\n      if(this.state.mobile){\r\n        console.log(\"show menu MOBILE\")\r\n        let delay = 1\r\n        if(document.getElementById(\"ArtworkInfo\")){\r\n          if(document.getElementById(\"ArtworkInfo\").classList.contains(\"info-up\")){\r\n            // this.showInfo()\r\n            document.getElementById(\"ArtworkInfo\").classList.remove(\"info-up\")\r\n            delay += 100\r\n          }\r\n        }\r\n        //if menu is open\r\n        if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n          console.log(\"menu is open\")\r\n          //if listitem drawer is open\r\n          if(document.getElementsByClassName(\"scroll-down-listitem\").length > 0){\r\n            document.getElementsByClassName(\"scroll-down-listitem\")[0].classList.remove(\"scroll-down-listitem\")\r\n            delay += 100\r\n          }\r\n\r\n          return setTimeout(() => {\r\n            if(document.getElementsByClassName(\"scroll-down\").length > 0){\r\n              document.getElementsByClassName(\"scroll-down\")[0].classList.remove(\"scroll-down\")\r\n              delay += 50\r\n            }\r\n            setTimeout(() => {\r\n              document.getElementById(\"TagsMenu\").classList.remove(\"show-menu\")\r\n            }, delay);\r\n          }, delay);\r\n\r\n        }\r\n        //if menu is closed\r\n        else{\r\n          console.log(\"menu is close\")\r\n          return document.getElementById(\"TagsMenu\").classList.add(\"show-menu\")\r\n        }\r\n      }\r\n      //DESKTOP\r\n      else{\r\n        console.log(\"show menu desktop\")\r\n        if(this.state.enlarge && this.state.enlarge.open){\r\n          //if menu closed\r\n          if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu-desktop\")){\r\n            if(this.state.enlarge && this.state.enlarge.open){\r\n              document.getElementById(\"TagsMenu\").classList.remove(\"show-menu-desktop\")\r\n              // setTimeout(() => {\r\n              //   this.animateEnlarge(this.state.enlarge.background)\r\n              // }, 200);\r\n              this.animateEnlarge(this.state.enlarge.background)\r\n            }\r\n            else{\r\n              document.getElementById(\"TagsMenu\").classList.remove(\"show-menu-desktop\")\r\n              document.getElementById(\"imageSelect\").style.width = \"100%\"\r\n            }\r\n            return\r\n          }\r\n          //if menu open\r\n          else{\r\n              if(this.state.enlarge.open){\r\n                const imageSelect = document.getElementById(\"imageSelect\")\r\n\r\n                imageSelect.style.width = \"auto\"\r\n                document.getElementById(\"TagsMenu\").classList.add(\"show-menu-desktop\")\r\n                // setTimeout(() => {\r\n                //   this.animateEnlarge(this.state.enlarge.background)\r\n                // }, 200);\r\n                this.animateEnlarge(this.state.enlarge.background)\r\n              }\r\n              else{\r\n                document.getElementById(\"imageSelect\").style.width = \"100%\"\r\n              }\r\n          }\r\n        }\r\n        else document.getElementById(\"TagsMenu\").classList.toggle(\"show-menu-desktop\")\r\n      }\r\n    }\r\n    this.hideArtworkInfo = (e) => {\r\n      if(e){\r\n        e.stopPropagation()\r\n      }\r\n      const ArtworkInfo = document.getElementById(\"ArtworkInfo\")\r\n      if(ArtworkInfo && ArtworkInfo.classList.contains(\"info-up\")){\r\n        return 200\r\n      }\r\n      else { return 1}\r\n    }\r\n\r\n    this.closeEnlarge = (e, clearAll) => {\r\n      if(e){\r\n        e.stopPropagation()\r\n      }\r\n      const ArtworkInfo = document.getElementById(\"ArtworkInfo\")\r\n\r\n      if(ArtworkInfo && ArtworkInfo.classList.contains(\"info-up\")){\r\n        ArtworkInfo.classList.remove(\"info-up\")\r\n        if(ArtworkInfo)ArtworkInfo.classList.remove(\"show\")\r\n        if(!clearAll)\r\n        return\r\n      }\r\n      if(!clearAll){\r\n        if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n          this.showMenu(e)\r\n          return\r\n        }\r\n      }\r\n      // if(ArtworkInfo)ArtworkInfo.classList.remove(\"show\")\r\n        const delay = this.hideArtworkInfo()\r\n        setTimeout(() => {\r\n          const enlargeContainer = document.getElementById('enlargeContainer')\r\n\r\n          //if mobile\r\n          if(this.state.mobile){\r\n            document.getElementById('imageSelect').classList.remove(\"side-scroll\")\r\n            setTimeout(() => {\r\n              enlargeContainer.classList.remove(\"enlarge-scroll-down\")\r\n              if(ArtworkInfo){\r\n                ArtworkInfo.classList.remove(\"show\")\r\n              }\r\n            }, 400);\r\n          }\r\n          //if dekstop\r\n          else{\r\n            document.getElementById('imageSelect').style.width = `100%`\r\n\r\n            setTimeout(() => {\r\n              enlargeContainer.classList.remove(\"enlarge-scroll-left\")\r\n            }, 200);\r\n          }\r\n\r\n          if(!clearAll){\r\n            const enlarge = {...this.state.enlarge}\r\n            enlarge.open = false\r\n            this.setState({enlarge})\r\n          }\r\n        }, delay);\r\n    }\r\n    this.viewNext = (direction) => {\r\n      console.log(\"__________________________\")\r\n      console.log(\"view next\")\r\n      if(!this.state.enlarge){\r\n        return\r\n      }\r\n        const file = this.state.enlarge.background\r\n        let options = this.createFamilySequence(file)\r\n\r\n        const familyName = options.state.enlarge.familySequence.familyName\r\n        const familySequence = options.state.enlarge.familySequence.familySequence\r\n        const familyIndex = options.state.enlarge.familySequence.familyIndex\r\n        const commonSequence = options.state.enlarge.familySequence.commonSequence\r\n        const commonIndex = options.state.enlarge.familySequence.commonIndex\r\n        let sequence = null\r\n        let nextIndex = null\r\n        const findNextIndex = () => {\r\n          //VIEW NEXT\r\n          if(direction > 0){\r\n            //if last in currentSequence reached\r\n            if(familyIndex+1 > familySequence.length-1){\r\n                const artworkOnDisplay = this.state.artworkOnDisplay\r\n                let nextPicName = commonSequence.find(fileName => {\r\n                  if(artworkOnDisplay[fileName].artworkFamily !== familyName){\r\n                    if(commonSequence.indexOf(fileName) > commonIndex){\r\n                      return commonSequence.indexOf(fileName)\r\n                    }\r\n                  }\r\n                  return\r\n                  })\r\n              \r\n                  if(!nextPicName){\r\n                    nextPicName = commonSequence[0]\r\n                  }\r\n\r\n              // options.state.enlarge.familySequence.commonIndex = commonSequence.indexOf(nextPicName)\r\n              let nextPic = this.state.artworkInfoData[nextPicName]\r\n\r\n              console.log(\"nextPicName\")\r\n              console.log(nextPicName)\r\n\r\n\r\n              options = this.createFamilySequence(nextPic)\r\n              // sequence = options.state.enlarge.familySequence.familySequence\r\n              sequence = commonSequence\r\n              nextIndex = commonSequence.indexOf(nextPicName)\r\n            }\r\n            else{\r\n              nextIndex = familyIndex+1\r\n              options.state.enlarge.familySequence.familyIndex += 1\r\n              sequence = options.state.enlarge.familySequence.familySequence\r\n            }\r\n          }\r\n          //VIEW PREVIOUS\r\n          else{\r\n            //if current image is the first in the familySequence\r\n            if(familyIndex-1 < 0 ){\r\n              let prevPicName = null\r\n              const artworkOnDisplay = this.state.artworkOnDisplay\r\n              if(commonIndex === 0){\r\n                prevPicName = commonSequence[commonSequence.length-1]\r\n              }\r\n              else{\r\n                prevPicName = commonSequence[commonIndex-1]\r\n              }\r\n\r\n\r\n              // else{\r\n              //   const filteredSequence = commonSequence.filter(fileName => {\r\n              //       if(fileName === file.fileName || artworkOnDisplay[fileName].artworkFamily !== familyName){\r\n              //         return fileName\r\n              //       }\r\n              //   })\r\n\r\n              //   const nextFileIndex = filteredSequence.indexOf(file.fileName)-1\r\n              //   prevPicName = filteredSequence[nextFileIndex]\r\n\r\n              // }\r\n              \r\n              // if(!prevPicName){\r\n              //   prevPicName = commonSequence[commonSequence.length-1]\r\n              // }\r\n\r\n            // options.state.enlarge.familySequence.commonIndex = commonSequence.indexOf(prevPicName)\r\n            console.log(prevPicName)\r\n            console.log(\"prevPicName\")\r\n\r\n            let prevPic = this.state.artworkInfoData[prevPicName]\r\n\r\n            const familyArray = this.state.relatedArtwork[prevPic.artworkFamily].column.fileIds\r\n            // const lastOfFamilyName = familyArray[familyArray.length-1]\r\n            const lastOfFamilyFile = this.state.artworkInfoData[prevPicName]\r\n\r\n              // options = this.createFamilySequence(prevPic)\r\n              options = this.createFamilySequence(lastOfFamilyFile)\r\n\r\n              sequence = options.state.enlarge.familySequence.familySequence\r\n              nextIndex = sequence.indexOf(lastOfFamilyFile.fileName)\r\n              // nextIndex = sequence.indexOf(prevPicName)\r\n\r\n              // nextIndex = sequence.length-1\r\n              options.reverse = true\r\n            }\r\n            else{\r\n              nextIndex = familyIndex-1\r\n              // const prevPicName = familySequence[nextIndex]\r\n              // const prevPic = this.state.artworkInfoData[prevPicName]\r\n              // options = this.createFamilySequence(prevPic)\r\n              options.state.enlarge.familySequence.familyIndex -= 1\r\n              sequence = options.state.enlarge.familySequence.familySequence\r\n              options.reverse = true\r\n            }\r\n          }\r\n        }\r\n\r\n        findNextIndex()\r\n        const nextPicName = sequence[nextIndex]\r\n        console.log(\"sequence\")\r\n        console.log(sequence)\r\n        console.log(\"nextIndex\")\r\n        console.log(nextIndex)\r\n        const nextPic = this.state.artworkInfoData[nextPicName]\r\n\r\n        if(!options.state.enlarge.familySequence.commonSequence.includes(nextPicName)){\r\n          console.log(\"will not scroll\")\r\n          options.scroll = false\r\n        }\r\n\r\n        this.animateEnlarge(nextPic, options)\r\n    }\r\n\r\n\r\n    this.countWidth = (containerHeight, naturalHeight, naturalWidth, mobile, options) => {\r\n      console.log(\"countWidth\")\r\n      let tagsMenuWidth = document.getElementById(\"TagsMenu\").offsetWidth\r\n      const imageNavWidth = document.querySelector(\".Navbar\") ? document.querySelector(\".Navbar\").offsetWidth : 0\r\n      console.log(\"tagsMenuWidth\")\r\n      console.log(tagsMenuWidth)\r\n      console.log(\"imageNavWidth\")\r\n      console.log(imageNavWidth)\r\n      if(options && options.tagsMenuClosed){\r\n        tagsMenuWidth = 0\r\n      }\r\n\r\n      let maxWidth = document.getElementById(\"images\").parentNode.offsetWidth - tagsMenuWidth - imageNavWidth - 120\r\n      const naturalRatio = naturalWidth / naturalHeight\r\n      if(mobile){\r\n        maxWidth = document.getElementById(\"images\").clientWidth\r\n        const maxHeight = document.getElementById(\"images\").clientHeight - 70\r\n\r\n        let futureWidth = maxWidth\r\n        let futureHeight = Math.round(futureWidth / naturalRatio)\r\n\r\n        if(futureHeight > maxHeight){\r\n          futureHeight = maxHeight\r\n          futureWidth = Math.round(futureHeight * naturalRatio)\r\n        }\r\n\r\n        return {width: futureWidth, height: futureHeight}\r\n\r\n      }\r\n      const sizeRatio = naturalHeight / containerHeight\r\n\r\n      let futureWidth = Math.round(naturalWidth / sizeRatio)\r\n      let futureHeight = Math.round(futureWidth / naturalRatio) - 50\r\n\r\n      if(futureWidth > maxWidth){\r\n        futureWidth = maxWidth\r\n        futureHeight = Math.round(maxWidth / naturalRatio)\r\n      }\r\n\r\n      futureHeight = futureHeight > containerHeight ? containerHeight : futureHeight\r\n\r\n      return {width: futureWidth, height: futureHeight}\r\n    }\r\n    this.animateEnlarge = (file, options) => {\r\n      this.enlarge.loaded = false\r\n      let fgLoaded = null\r\n\r\n      if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n        document.getElementById(\"TagsMenu\").classList.remove(\"show-menu\")\r\n      }\r\n\r\n      const background = document.getElementById(\"background\")\r\n      const foreground = document.getElementById(\"foreground\")\r\n      const container = document.getElementById(\"enlargeContainer\")\r\n      const imageSelect = document.getElementById(\"imageSelect\")\r\n      const images = document.getElementById(\"images\")\r\n\r\n      let enlarge = this.state.enlarge ? {...this.state.enlarge} : options.state.enlarge\r\n      enlarge.previous = !enlarge.background ? file : enlarge.background\r\n      enlarge.background = file\r\n\r\n      let bgSrc = null\r\n      let fgSrc = null\r\n\r\n      if(this.state.mobile){\r\n        bgSrc = file.thumbnailPath\r\n        fgSrc = file.mobilePath\r\n      }\r\n      else{\r\n        bgSrc = file.mobilePath\r\n        fgSrc = file.desktopPath\r\n      }\r\n\r\n        const backgroundLoad = new Promise ((res, rej) => {\r\n          if(!this.enlarge.loaded){\r\n            document.querySelector(\"#background-img\").src= bgSrc\r\n            document.querySelector(\"#background-img\").addEventListener('load', () => {\r\n              this.enlarge.loaded = true\r\n              res(\"background loaded\")\r\n            })\r\n          }\r\n          else{rej(\"alraedy laoded\")}\r\n        })\r\n\r\n        backgroundLoad\r\n          .then(res => {\r\n            let futureSize = null\r\n\r\n                  //COUNT FUTURE SIZES\r\n                  //DESKTOP\r\n                  if(!this.state.mobile){\r\n                    //flip from mobile to desktop reset\r\n                    // if(document.getElementById('background').style.width !== \"100%\"){\r\n                    //   document.getElementById('background').style.width = \"100%\"\r\n                    //   document.getElementById('foreground').style.width = \"100%\"\r\n                    // }\r\n                    futureSize = this.countWidth(container.clientHeight, file.naturalSize.naturalHeight, file.naturalSize.naturalWidth)\r\n                  }\r\n                  //MOBILES**************************************************************************************\r\n                  else{\r\n                    futureSize = this.countWidth(container.clientWidth, file.naturalSize.naturalHeight, file.naturalSize.naturalWidth, true)\r\n\r\n                    background.style.height = `${futureSize.height}px`\r\n                    foreground.style.height = `${futureSize.height}px`\r\n                    background.style.width = `${futureSize.width}px`\r\n                    foreground.style.width = `${futureSize.width}px`\r\n                  }\r\n\r\n                  let newState = options && options.state ? options.state : {...this.state}\r\n                  newState.enlarge = enlarge\r\n\r\n                  foreground.classList.add(\"fade-out\")\r\n                  let scrollToDelay = 0\r\n                  //APPLY SIZE CHANGES\r\n                  //MOBILE\r\n                  if(this.state.mobile){\r\n                    if(!container.classList.contains(\"enlarge-scroll-down\")){\r\n                      container.style.height = `${images.clientHeight - 90}px`\r\n                      container.classList.add(\"enlarge-scroll-down\")\r\n                      scrollToDelay = 400\r\n                      setTimeout(() => {\r\n                          imageSelect.classList.add(\"side-scroll\")\r\n                      }, 200);\r\n                    }\r\n                  }\r\n                  //DESKTOP\r\n                  else{\r\n                    //if enlarge not been opened\r\n                    if(!container.classList.contains(\"enlarge-scroll-left\")){\r\n                      container.classList.add(\"enlarge-scroll-left\")\r\n                      container.style.width = `${futureSize.width}px`\r\n                      setTimeout(() => {\r\n                        imageSelect.style.width = `${images.clientWidth - futureSize.width}px`\r\n                      }, 600);\r\n                    }\r\n                    else{\r\n                      //if enlargeContainer will shrink\r\n                      if(this.state.enlarge.currentWidth && this.state.enlarge.currentWidth > futureSize.width && this.state.enlarge.open){\r\n                        console.log(\"enlargeContainer will shrink\")\r\n\r\n                        imageSelect.style.width = `${images.clientWidth - futureSize.width}px`\r\n                        setTimeout(() => {\r\n                          container.style.width = `${futureSize.width}px`\r\n                        }, 400);\r\n                      }\r\n                      //\r\n                      else{\r\n                        console.log(\"enlargeContainer will GROW\")\r\n                        const momentum = futureSize.width / container.offsetWidth\r\n                        console.log(\"mmentum\")\r\n                        let delay = 300 * momentum\r\n                        delay = delay.toFixed(3)\r\n                        console.log(delay)\r\n                        container.style.width = `${futureSize.width}px`\r\n                        setTimeout(() => {\r\n                          imageSelect.style.width = `${images.clientWidth - futureSize.width}px`\r\n                        }, delay);\r\n                      }\r\n                    }\r\n                    document.querySelector(\".pinch-to-zoom-area\").style.height = `${futureSize.height}px`\r\n                    // background.style.height = `${futureSize.height}px`\r\n                    // foreground.style.height = `${futureSize.height}px`\r\n\r\n                    // container.style.width = `${futureSize.width}px`\r\n                  }\r\n                  if(options){\r\n                    const familySequence = options.state.enlarge.familySequence\r\n                    const artworkOnDisplay = this.state.artworkOnDisplay\r\n                    let scrollToId = null\r\n                    if(artworkOnDisplay[file.fileName]){\r\n                      scrollToId = file.fileName\r\n                    }\r\n                    //if currentFile is not visible in imageSelector\r\n                    else{\r\n                      scrollToId = Object.keys(artworkOnDisplay).find(fileName => {\r\n                        if(artworkOnDisplay[fileName].artworkFamily === file.artworkFamily){\r\n                          if(familySequence.commonSequence.indexOf(fileName) > familySequence.commonIndex){\r\n                            return fileName\r\n                          }\r\n                        }\r\n                      })\r\n                      if(!scrollToId){\r\n                        scrollToId = familySequence.commonSequence[familySequence.commonIndex]\r\n                      }\r\n                    }\r\n                    setTimeout(() => {\r\n                      this.scrollToHorizontal(scrollToId, \"imageSelect\")\r\n                    }, scrollToDelay);\r\n\r\n                  }\r\n\r\n                    newState.enlarge.foreground = enlarge.background\r\n                    newState.enlarge.currentWidth = futureSize.width\r\n                    newState.enlarge.currentHeight = images.clientHeight - 90\r\n                    newState.enlarge.open = true\r\n\r\n                    this.setState(newState)\r\n\r\n                     const loadForeground = () => {\r\n                      console.log(\"loadForeground\")\r\n                       return new Promise((res, rej) => {\r\n                         document.querySelector(\"#foreground-img\").src= fgSrc\r\n                         document.querySelector(\"#foreground-img\").addEventListener('load', () => {\r\n                           if(!fgLoaded){\r\n                             foreground.classList.remove(\"fade-out\")\r\n                             this.enlarge.loaded = false\r\n                              fgLoaded = true\r\n                            res(\"finished\")\r\n                           }\r\n                           else{rej(fgLoaded)}\r\n                         });\r\n                       })\r\n                     }\r\n\r\n                     setTimeout(() => {\r\n\r\n                       loadForeground()\r\n                       .then(res => {\r\n                         document.getElementById(\"ArtworkInfo\").classList.add(\"show\")\r\n                        })\r\n                        .catch(rej => {\r\n                          console.log(\"enlarge.fgLoaded\")\r\n                          console.log(rej)\r\n                        })\r\n                        this.scrollToHorizontal(`previewBubble-${file.fileName}`, \"previewBubble-wrapper\", {increment: 50})\r\n\r\n                     }, 200);\r\n                     return\r\n          })\r\n          .catch(rej => {\r\n            console.log(rej)\r\n            return\r\n          })\r\n    }\r\n\r\n    this.scrollToHorizontal = (id, parent_id, options) => {\r\n      // let scrollTo = {}\r\n      let scrollTo = {behavior: 'smooth'}\r\n      if(!document.getElementById(parent_id)){\r\n        console.log(`${parent_id} was not found`)\r\n        return\r\n      }\r\n      if(!id){\r\n        scrollTo.left = 0\r\n        document.getElementById(parent_id).scrollTo(scrollTo)\r\n        return\r\n      }\r\n      let scrollDelay = document.getElementById(parent_id).scrollLeft > 0 ? 200 : 800\r\n      if(this.state.mobile){\r\n        setTimeout(() => {\r\n          if(document.getElementById(id)){\r\n            let scrollIncrement = options && options.increment ? options.increment : 5\r\n            scrollTo.left = document.getElementById(id).getBoundingClientRect().x - scrollIncrement\r\n            if(document.getElementById(parent_id).scrollLeft > 0){\r\n              scrollTo.left += document.getElementById(parent_id).scrollLeft\r\n            }\r\n            console.log(\"scrollTo.left\")\r\n            console.log(scrollTo.left)\r\n            document.getElementById(parent_id).scrollTo(scrollTo)\r\n          }\r\n        }, scrollDelay);\r\n      }\r\n    }\r\n\r\n    this.createFamilySequence = (file) => {\r\n      //THIS WILL BE THE RETURNED OBJECT\r\n      let options = {state: null, scroll: null }\r\n      let familySequence = {}\r\n\r\n      const allVisible =  Array.from(document.querySelectorAll(\".FilePreview--imageContainer:not(.FilePreview--imageContainer__empty)\")).map(container => container.childNodes[0].id)\r\n      let newState = {...this.state}\r\n\r\n      const familyName = file.artworkFamily\r\n      const currentImage = file.fileName\r\n\r\n      let commonIndex = this.state.enlarge ?\r\n      allVisible.indexOf(currentImage) < 0 ?\r\n        this.state.enlarge.familySequence.commonIndex\r\n        : allVisible.indexOf(currentImage)\r\n      : 0\r\n\r\n      //IF ARTWORK BELONGS TO FAMILY THAT IS CURRENTLY VIEW\r\n      if(this.state.enlarge && this.state.enlarge.familySequence.familyName === familyName){\r\n\r\n        const currentSequence = this.state.enlarge.familySequence\r\n\r\n        let familyIndex = currentSequence.familySequence.indexOf(currentImage)\r\n\r\n        familySequence = {\r\n          \"familyName\": familyName,\r\n          \"familySequence\": currentSequence.familySequence,\r\n          \"familyIndex\": familyIndex,\r\n          \"commonSequence\": currentSequence.commonSequence,\r\n          \"commonIndex\": commonIndex\r\n        }\r\n      }\r\n\r\n      //IF ARTWORK FAMILY NEEDS TO SEQUENCE/HAS NOT BEEN VIEWED\r\n      else{\r\n\r\n        const recordedSequence = this.state.relatedArtwork[familyName].column.fileIds\r\n        const familyIndex = this.state.relatedArtwork[familyName].column.fileIds.indexOf(currentImage)\r\n\r\n        // let newFamilySequence_start = recordedSequence.slice(0, familyIndex)\r\n        // let newFamilySequence_end = recordedSequence.slice(familyIndex)\r\n        // let newFamilySequence = [...newFamilySequence_end, ...newFamilySequence_start]\r\n        let newFamilySequence = recordedSequence\r\n\r\n\r\n        familySequence = {\r\n          \"familyName\": familyName,\r\n          \"familySequence\": newFamilySequence,\r\n          \"familyIndex\": 0,\r\n          \"commonSequence\": allVisible,\r\n          \"commonIndex\": commonIndex\r\n        }\r\n      }\r\n\r\n      // console.log(\"recordedSequence\")\r\n      // console.log(recordedSequence)\r\n\r\n      // console.log(\"newFamilySequence\")\r\n      // console.log(newFamilySequence)\r\n\r\n\r\n\r\n      if(!newState.enlarge){\r\n        newState.enlarge = {}\r\n      }\r\n      newState.enlarge.familySequence = familySequence\r\n      options.state = newState\r\n\r\n      //scroll if the image is visible in the ImageSelector\r\n      options.scroll = allVisible.indexOf(currentImage) < 0 ? false : true\r\n\r\n      return options\r\n    }\r\n\r\n    this.loadEnlarge = (e, id) => {\r\n      console.log(\"load enlarge\")\r\n      e.stopPropagation()\r\n\r\n      const file = this.state.artworkInfoData[id]\r\n\r\n      const options = this.createFamilySequence(file)\r\n\r\n      return this.animateEnlarge(file, options)\r\n    }\r\n\r\n\r\n    this.showInfo = (e) => {\r\n      if(this.state.enlarge && !this.state.enlarge.open){\r\n        return\r\n      }\r\n      console.log(\"run show info\")\r\n      const info = document.getElementById(\"ArtworkInfo\")\r\n      if(!this.state.mobile && !info.classList.contains(\"info-up\")){\r\n        if(!info.classList.contains(\"info-up\")){\r\n          info.classList.add(\"info-up\")\r\n        }\r\n        else info.classList.remove(\"info-up\")\r\n        return\r\n      }\r\n      if(!info.classList.contains('show')){\r\n        let counter = 1\r\n        if(this.state.mobile){\r\n          if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n            this.showMenu(e)\r\n            counter = 1\r\n          }\r\n        }\r\n        setTimeout(() => {\r\n          setTimeout(() => {\r\n            info.classList.add('info-up')\r\n          }, 100);\r\n          info.classList.add('show')\r\n        }, counter);\r\n      }\r\n    }\r\n    this.toggleMobile = () => {\r\n      const container = document.getElementById(\"enlargeContainer\")\r\n      const images = document.getElementById(\"images\")\r\n      const imageSelect = document.getElementById(\"imageSelect\")\r\n      let mobile = null\r\n      if(document.documentElement.clientWidth < 721){\r\n        mobile = true\r\n        container.style.height = `${images.clientHeight - 90}px`\r\n        document.getElementById(\"foreground\").style.height = \"auto\"\r\n        document.getElementById(\"background\").style.height = \"auto\"\r\n      }\r\n      else{\r\n        console.log(\"width/height 100%\")\r\n        document.getElementById('background').style.width = \"100%\"\r\n        document.getElementById('foreground').style.width = \"100%\"\r\n        document.getElementById('background').style.height = \"100%\"\r\n        document.getElementById('foreground').style.height = \"100%\"\r\n        mobile = false\r\n      }\r\n      if(this.state.enlarge && this.state.enlarge.open){\r\n        let newState = {...this.state}\r\n        newState.mobile = mobile\r\n        this.animateEnlarge(this.state.enlarge.background, {state: newState})\r\n      }\r\n      return mobile\r\n    }\r\n    this.onTouchStart= (e) => {\r\n      const touches = e.touches\r\n      const touch = {\"x\": touches[0].clientX, \"y\": touches[0].clientY}\r\n      this.setState({touch})\r\n    }\r\n    this.lazyLoadImages = () => {\r\n      const images = document.querySelectorAll(\".imageSelect-FilePreview\")\r\n\r\n      const preloadImage = (img) => {\r\n        const src = img.getAttribute(\"data-src\")\r\n        if(!src){\r\n          return\r\n        }\r\n        img.src=src\r\n      }\r\n\r\n      const imgOptions = {\r\n        threshold: 0,\r\n        margin: \"0px 0px 300px 0px\"\r\n      }\r\n\r\n      const imgObserver = new IntersectionObserver((entries, imgObserver) => {\r\n        entries.forEach(entry => {\r\n          if(!entry.isIntersecting){\r\n            return\r\n          }\r\n          else{\r\n            preloadImage(entry.target);\r\n            imgObserver.unobserve(entry.target)\r\n          }\r\n        }, imgOptions)\r\n      })\r\n\r\n      images.forEach(image => {\r\n        imgObserver.observe(image)\r\n      })\r\n    }\r\n    this.getArtworkInfo = () => {\r\n      return new Promise((resolve, rej) => {\r\n\r\n          let serverFileNames = null;\r\n          \r\n          //get an array of all file names in the server\r\n          axios.get('/fetchImages')\r\n              .then(res => {\r\n                  serverFileNames = res.data\r\n                  let newServerFileName = res.data.map(name => {\r\n                    let start = name.substring(0, name.indexOf(\"-thumbnail\"))\r\n                    let cutout = \"-thumbnail\"\r\n                    let extension = name.substring(name.indexOf(\"-thumbnail\") + cutout.length)\r\n                    let newName = `${start}${extension}`\r\n                    return newName\r\n                  })\r\n\r\n                  serverFileNames = newServerFileName\r\n                  axios.get('/api/artworkInfo')\r\n                      .then(res => {\r\n                          let databaseFiles = {}\r\n                          let usedNames = []\r\n                          \r\n                          //check that a record has a file in the server\r\n                          serverFileNames.forEach(fileName => {\r\n                              res.data.forEach(obj => {\r\n                                  if(obj.fileName === fileName && !usedNames.includes[fileName]){\r\n                                      usedNames = [...usedNames, fileName]\r\n                                   databaseFiles = {...databaseFiles, [fileName]: obj}\r\n                                  databaseFiles[fileName].useFamilySetup = false\r\n                              }\r\n                          })\r\n                          })\r\n\r\n                          //add an array of all file object\r\n                          // renderFiles.fileNames = Object.keys(renderFiles).filter(fileName => fileName !== \"fileList\")\r\n\r\n                          resolve(databaseFiles)\r\n                      })\r\n                      .catch(err => {\r\n                        console.log(\"getArtworkInfo err\")\r\n                        console.log(err)\r\n                      })\r\n              })   \r\n              .catch(err => {\r\n                console.log(\"fetch images err\")\r\n                console.log(err)\r\n              })\r\n      })\r\n    }\r\n    this.getRelatedArtwork = (artworkFamily, newState) => {\r\n\r\n      let relatedArtwork = {}\r\n      //get all records from the selected family from database\r\n      return new Promise((resolve, reject) => {\r\n          // if(this.state.relatedArtwork[value]){\r\n          //     relatedArtwork = {...this.state.relatedArtwork}\r\n          // }\r\n\r\n          axios.get(`/api/artworkInfo/${artworkFamily}`)\r\n              .then(res =>{\r\n\r\n              //for each fileData object in res.data array \r\n                  res.data.forEach((obj, index) => {\r\n                  //paste all properties of this file object unto relatedArtwork object\r\n                  Object.keys(obj).forEach(property => {\r\n                          relatedArtwork = {\r\n                              ...relatedArtwork,\r\n                                  [obj.fileName]: {\r\n                                      ...relatedArtwork[obj.fileName],\r\n                                      [property]: obj[property]\r\n                                  }\r\n                              }\r\n                      })\r\n                  })        \r\n                  let fileIds = Object.keys(relatedArtwork).map(obj => null)\r\n                  Object.keys(relatedArtwork).forEach(fileName => {\r\n                      if(relatedArtwork[fileName].familyDisplayIndex < 0){\r\n                        fileIds.push(fileName)\r\n                      }\r\n                      else{\r\n                        fileIds[relatedArtwork[fileName].familyDisplayIndex] = fileName\r\n                      }\r\n                  })\r\n                  fileIds = fileIds.filter(fileName => fileName !== null || false)\r\n                  let finalRelatedArtwork = {\r\n                          files: relatedArtwork,\r\n                          column: {\r\n                              // fileIds: Object.keys(relatedArtwork).map(objName => objName),\r\n                              fileIds,\r\n                              id: `${artworkFamily}-relatedArtworks`\r\n                          },\r\n                          columnOrder: [`${artworkFamily}-relatedArtworks`]\r\n                  };\r\n                  \r\n                  \r\n                  resolve(finalRelatedArtwork)\r\n              })\r\n      }) \r\n    }\r\n\r\n\r\n}//END OF CONTSTRUCTOR\r\n\r\n  //   componentDidMount(){\r\n  //     console.log(\"compoenent did mount\")\r\n  //     let newState = {...this.state}\r\n\r\n  //     this.setState({showModal: true, modalMessage: \"loading data\"})\r\n\r\n  //     let FamilyList = new Promise ((resolve, rej) => {\r\n  //         axios.get('/api/familySetup')\r\n  //         .then(res => {\r\n  //             let familyList = Object.keys(res.data).map(obj => {\r\n  //                 return res.data[obj].artworkFamily\r\n  //             })\r\n  //             newState.artworkFamilyList = familyList\r\n  //             console.log(\"Families loaded\")\r\n  //             console.log(res)\r\n  //             resolve()\r\n  //         })\r\n  //         .catch(err => {\r\n  //              rej(err)\r\n  //              console.log(\"family list laod error\")\r\n  //             // document.location.reload(true)\r\n  //         })\r\n  //     })\r\n\r\n  //     let Categories = new Promise ((resolve, rej) => {\r\n  //         FamilyList\r\n  //         .then(res => {\r\n  //                 axios.get('/api/categories')\r\n  //                 .then(res => {\r\n      \r\n  //                         let categoryNames = Object.values(res.data).map(obj => obj.category)\r\n  //                         let categoryObj = {}\r\n  //                         categoryNames.forEach(categoryName => {\r\n  //                             const currentObj = res.data.find(item => item.category === categoryName)\r\n  //                             return categoryObj = {...categoryObj, [categoryName]: Object.keys(currentObj.subcategory)}\r\n  //                         })\r\n      \r\n  //                     newState.categoriesData = res.data\r\n  //                     newState.categoriesOptionList = {}\r\n  //                     newState.categoriesOptionList.data = categoryObj\r\n      \r\n  //                     const progressLength = newState.artworkFamilyList.length\r\n  //                     let counter = 0\r\n  //                     newState.artworkFamilyList.forEach(familyName => {\r\n  //                         this.getRelatedArtwork(familyName, newState)\r\n  //                         .then(res => {\r\n  //                           if(!newState.relatedArtwork){\r\n  //                             newState.relatedArtwork = {}\r\n  //                           }\r\n  //                           newState.relatedArtwork[familyName] = res\r\n  //                           counter += 1\r\n  //                           if(counter === progressLength){\r\n  //                             resolve()\r\n  //                           }\r\n  //                         })\r\n  //                         .catch(err => {\r\n  //                           console.log(\"getrelated artwork err\")\r\n  //                           console.log(err)\r\n  //                           rej(\"getrelated artwork err\")\r\n  //                         })\r\n  //                     })\r\n  //                     // resolve()\r\n  //                 })\r\n  //                 .catch(err => {\r\n  //                      console.log(\"get categories err\")\r\n  //                      console.log(err)\r\n  //                      rej(\"get categories err\")\r\n  //                     // document.location.reload(true)\r\n  //                 })\r\n  //         })\r\n  //         .catch(err => {\r\n  //           console.log(\"categories error\")\r\n  //           console.log(err)\r\n  //           rej(err)\r\n  //         })\r\n  //     }) \r\n\r\n  //     let ArtworkInfo = new Promise ((resolve, rej) => {\r\n  //         this.getArtworkInfo()\r\n  //             .then(res => {\r\n  //                 console.log(\"this.getArtworkInfo res\")\r\n  //                 console.log(res)\r\n  //                 newState.artworkInfoData = res\r\n  //                 let onDisplay = {}\r\n  //                 Object.keys(res).forEach(fileName => {\r\n  //                   if(res[fileName].displayMain){\r\n  //                     onDisplay = {...onDisplay, [fileName]: res[fileName]}\r\n  //                   }\r\n  //                 })\r\n                  \r\n  //                 let allThemes = []\r\n  //                 Object.keys(res).forEach(objName => {\r\n  //                     allThemes = [...allThemes, ...res[objName].themes]\r\n  //                 })\r\n  //                 let allThemesSet = new Set(allThemes)\r\n  //                 allThemesSet = Array.from(allThemesSet)\r\n\r\n  //                 let artworkByTheme = {}\r\n\r\n  //                 let themesArr = Object.keys(res).map(name => res[name])\r\n\r\n  //                 allThemesSet.forEach(theme => {\r\n  //                   themesArr.forEach(obj => {\r\n  //                     if(obj.themes.includes(theme)){\r\n  //                       if(!artworkByTheme[theme]){\r\n  //                         artworkByTheme[theme] = []\r\n  //                       }\r\n  //                       if(obj.displayTriggers.themes && obj.displayTriggers.themes.includes(theme)){\r\n  //                         artworkByTheme[theme] = [...artworkByTheme[theme], obj.fileName]\r\n  //                       }\r\n  //                     }\r\n  //                   })\r\n  //                 })\r\n\r\n  //                 let artworkOnDisplay = {}\r\n  //                 let displayThemes = [\"metal\", \"social\", \"tools\", \"cloud\"]\r\n  //                 let hideThemes = [\"celestial body\"]\r\n  //                 let artworkNames = Object.keys(onDisplay)\r\n  //                 artworkNames.forEach(fileName => {\r\n  //                   displayThemes.forEach(theme => {\r\n  //                     if(onDisplay[fileName].themes.includes(theme)){\r\n  //                       hideThemes.forEach(hideTheme => {\r\n  //                         if(!onDisplay[fileName].themes.includes(hideTheme)){\r\n  //                           artworkOnDisplay[fileName] = onDisplay[fileName]\r\n  //                         }\r\n  //                       })\r\n  //                     }\r\n  //                   })\r\n  //                 })\r\n\r\n  //                 let years = []\r\n  //                 let locations = []\r\n  //                 let artworkByYear = {}\r\n  //                 let artworkByLocation = {}\r\n              \r\n  //                 const allFiles = Object.keys(res)\r\n              \r\n  //                 allFiles.forEach(fileName => {\r\n  //                     const file = res[fileName]\r\n  //                     if(file.year){\r\n  //                         years = [...years, file.year]\r\n  //                         if(!artworkByYear[file.year]){\r\n  //                           artworkByYear[file.year] = []\r\n  //                         }\r\n  //                         artworkByYear = {...artworkByYear, [file.year]: [...artworkByYear[file.year], fileName]}\r\n  //                     }\r\n  //                     if(file.location){\r\n  //                         locations = [...locations, file.location]\r\n  //                         if(!artworkByLocation[file.location]){\r\n  //                           artworkByLocation[file.location] = []\r\n  //                         }\r\n  //                         artworkByLocation = {...artworkByLocation, [file.location]: [...artworkByLocation[file.location], fileName]}\r\n  //                     }\r\n  //                 })\r\n              \r\n  //                 years = new Set(years)\r\n  //                 years = Array.from(years).sort()\r\n              \r\n  //                 locations = new Set(locations)\r\n  //                 locations = Array.from(locations).sort()\r\n\r\n  //                 const yearLocOnDisplay = {years: artworkByYear, locations: artworkByLocation}\r\n\r\n  //                 newState.yearLocation = {years, locations, \"visible\": yearLocOnDisplay, \"all\": yearLocOnDisplay}\r\n  //                 newState.artworkOnDisplay = artworkOnDisplay\r\n  //                 newState.visibleArtwork = onDisplay\r\n  //                 newState.themesOnDisplay = artworkByTheme\r\n  //                 resolve()\r\n  //             })\r\n  //             .catch(err => {\r\n  //               console.log(\"getArtworkInfo err\")\r\n  //               console.log(err)\r\n  //               rej(err)\r\n  //             })\r\n  //     })\r\n\r\n  //     let serverFiles = new Promise ((resolve, rej) => {\r\n  //       axios.get('/fetchimages')\r\n  //         .then(res => {\r\n  //           newState.serverData = res\r\n  //           resolve()\r\n  //         })\r\n  //         .catch(err => rej(err))\r\n  //     })\r\n\r\n  //     Promise.all([\r\n  //       serverFiles,\r\n  //       Categories, \r\n  //       ArtworkInfo, \r\n  //       // Themes, \r\n  //     ])\r\n  //     .then(res => {\r\n  //         newState.showModal = false\r\n  //         newState.modalMessage = null\r\n  //         newState.mobile = this.toggleMobile()\r\n  //         window.addEventListener(\"resize\", ()=>{this.setState({mobile: this.toggleMobile()})})\r\n  //         console.log(\"newState\")\r\n  //         console.log(newState)\r\n  //         this.setState(newState)\r\n  //     })\r\n  //     .catch(err => {\r\n  //           console.log(\"promise all err\")\r\n  //           console.log(err)\r\n  //     })\r\n  // }\r\n  componentDidMount(){\r\n      axios.get(`/staticState`)\r\n      .then(res => {\r\n        window.addEventListener(\"resize\", ()=>{this.setState({mobile: this.toggleMobile()})})\r\n        let newState = res.data\r\n        newState.mobile = this.toggleMobile()\r\n        this.setState(newState)\r\n      })\r\n      .catch(err => {\r\n        console.log(\"COMPONENT DID MOUNT ERR\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n    render(){\r\n    return(\r\n        <Context.Provider value={ {\r\n            state: this.state,\r\n\r\n            filterByCategory: this.filterByCategory,\r\n            filterBySubcategory: this.filterBySubcategory,\r\n            filterByListitem: this.filterByListitem,\r\n            categoryChecked: this.categoryChecked,\r\n            subcategoryChecked: this.subcategoryChecked,\r\n            listitemChecked: this.listitemChecked,\r\n\r\n            enlarge: this.enlarge,\r\n            loadEnlarge: this.loadEnlarge,\r\n            closeEnlarge: this.closeEnlarge,\r\n            hideArtworkInfo: this.hideArtworkInfo,\r\n\r\n            viewNext: this.viewNext,\r\n            viewPrev: this.viewPrev,\r\n\r\n            showInfo: this.showInfo,\r\n\r\n            filterAllThemes: this.filterAllThemes,\r\n            filterByTheme: this.filterByTheme,\r\n            themeChecked: this.themeChecked,\r\n\r\n            filterByYear: this.filterByYear,\r\n            yearChecked: this.yearChecked,\r\n            filterByLocation: this.filterByLocation,\r\n            locationChecked: this.locationChecked,\r\n\r\n            showMenu: this.showMenu,\r\n            toggleMobile: this.toggleMobile,\r\n            onTouchStart: this.onTouchStart,\r\n\r\n            lazyLoadImages: this.lazyLoadImages,\r\n            scrollToHorizontal: this.scrollToHorizontal,\r\n\r\n            readImageDir: this.readImageDir,\r\n            changeFileName: this.changeFileName,\r\n            onChange: this.onChange,\r\n            addNew: this.addNew,\r\n\r\n            } }>\r\n        {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst Checkbox = (props) => {\r\n    return(\r\n        <label className={`styledCheckbox-container ${props.className}`}>\r\n                <input \r\n                    id={props.id}\r\n                    className={`styledCheckbox-checkbox`}\r\n                    type=\"checkbox\" \r\n                    onChange={props.onChange} \r\n                    checked={props.isChecked}\r\n                />\r\n                <span className=\"styleCheckbox-checkmark\"></span>\r\n        </label>\r\n    )\r\n}\r\nexport default Checkbox","import React from 'react';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst Category = (props) => {\r\n\r\n    const spreadLetters = (title, level) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div key={`${title}-leter-${index}`} className={`title-letter ${level}-title-letter`}>{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n\r\n    return(\r\n        <div\r\n        key={`TagsMenu-category-${props.category}`} \r\n        className={props.isChecked ? \r\n            `TagsMenu-Accordion-label checkbox-selected` : `TagsMenu-Accordion-label`}\r\n        onClick={props.onChange}\r\n        >   \r\n            <div \r\n            onClick={() => {props.showContent(props.category);}}\r\n            className={`TagsMenu-category-title ${props.clickable ? \"\" : \"no-click\"} ${props.titleModifier ? props.titleModifier : \"\"}`} >\r\n                {spreadLetters(props.category, props.level)}\r\n            </div>\r\n            {!props.button ? \r\n                <Checkbox\r\n                    id={`${props.level}-${props.category}`}\r\n                    onChange={props.onChange} \r\n                    isChecked={props.isChecked}\r\n                    className={props.level === \"category\" ? \"styledCheckbox-container_large\" : \"styledCheckbox-container_small\"}\r\n                />\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category","import React, { Fragment } from 'react'\r\nimport Category from '../TagsMenu/Category'\r\n\r\nconst Year = (props) => {\r\n\r\n    let years = props.years\r\n\r\n    let yearList = years.map((year, index) => {\r\n            return <li \r\n            key={`li-${year}-${index}`} \r\n            // style={{flex: \"1 1 48%\", listStyle: \"none\"}}\r\n            className=\"tags-li\"\r\n            >\r\n                <Category \r\n                key={year}\r\n                category={year}\r\n                level=\"year\"\r\n                onChange={() => props.context.filterByYear(year)}\r\n                isChecked={props.context.yearChecked(year)}\r\n                showContent={() => {return}}\r\n                modifierClass={\"year-tag\"}\r\n                />\r\n            </li>\r\n    })\r\n\r\n        return(\r\n            <Fragment>\r\n                <ul className=\"tagsMenu-list tagsMenu-list-tags\">{yearList}</ul>\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default Year","import React, { Fragment } from 'react'\r\nimport Category from '../TagsMenu/Category'\r\n\r\nconst Location = (props) => {\r\n\r\n    let locations = props.locations\r\n\r\n    let locationList = locations.map((loc, index) => {\r\n        return <li \r\n                key={`li-${loc}-${index}`} \r\n                style={{flex: \"1 1 100%\", listStyle: \"none\"}}\r\n                >\r\n                    <Category \r\n                        key={loc}\r\n                        category={loc}\r\n                        level=\"location\"\r\n                        onChange={() => props.context.filterByLocation(loc)}\r\n                        isChecked={props.context.locationChecked(loc)}\r\n                        showContent={() => {return}}\r\n                        modifierClass={\"location-tag\"}\r\n                    />\r\n                </li>\r\n\r\n        // return <li key={`location-${loc}`}>{loc}</li>\r\n    })\r\n\r\n        return(\r\n            <Fragment>\r\n                <ul  className=\"tagsMenu-list tagsMenu-list-tags\">\r\n                    {locationList}\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default Location","import React from 'react'\r\nimport Category from '../TagsMenu/Category'\r\n\r\nconst Themes = (props) => {\r\n\r\n    const renderList = () => {\r\n        \r\n        const allThemes = Object.keys(props.state.themesOnDisplay).filter(theme => props.state.themesOnDisplay[theme].length > 0).sort()\r\n        let renderList = allThemes.map(theme => {\r\n            return <li key={theme} className=\"tags-li\">\r\n            <Category \r\n            key={theme}\r\n            category={theme}\r\n            level=\"theme\"\r\n            onChange={() => props.context.filterByTheme(theme)}\r\n            isChecked={props.context.themeChecked(theme)}\r\n            showContent={() => {return}}\r\n            titleModifier={\"nowrap\"}\r\n        />\r\n            </li>\r\n        })\r\n        return <ul className=\"tagsMenu-list tagsMenu-list-tags\">{renderList}</ul>\r\n    }\r\n\r\n    return(\r\n        props.state.themesOnDisplay ? renderList() : null\r\n    )\r\n}\r\n\r\nexport default Themes","import React from 'react'\r\n\r\nconst ClearAll = (props) => {\r\n\r\n    let hide = props.context.state.artworkOnDisplay && Object.keys(props.context.state.artworkOnDisplay).length > 0\r\n\r\n    const clearImgs = (hide, e) => {\r\n        props.context.filterAllThemes(hide)\r\n            props.context.closeEnlarge(e, true)\r\n    }\r\n\r\n    const spreadLetters = (title) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div key={`${title}-leter-${index}`} className=\"title-letter white-font\">{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n\r\n    return(\r\n        <div \r\n        onClick={(e) => {clearImgs(hide, e)}}\r\n        className=\"TagsMenu-Accordion-label category dark-bg\">\r\n            <div className=\"TagsMenu-category-title\">\r\n                {spreadLetters(\r\n                    props.context.state.artworkOnDisplay && Object.keys(props.context.state.artworkOnDisplay).length > 0 ?\r\n                        \"clear all\" :\r\n                        \"view all\"\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClearAll;","import React from 'react'\r\nimport Category from '../TagsMenu/Category';\r\n\r\nconst About = (props) => {\r\n    return(\r\n        <div \r\n            onClick={(e) => {\r\n                props.loadEnlarge(e, \"portrait.jpg\");\r\n                setTimeout(() => {\r\n                    if(document.getElementById(\"ArtworkInfo\")){\r\n                        document.getElementById(\"ArtworkInfo\").classList.add(\"show\")\r\n                        setTimeout(() => {\r\n                            document.getElementById(\"ArtworkInfo\").classList.add(\"info-up\")\r\n                        }, 200);\r\n                    }\r\n                }, 600)\r\n            }}\r\n        >\r\n            <Category \r\n                clickable\r\n                category=\"about\"\r\n                level=\"category\"\r\n                button\r\n                showContent={() => {return}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\r\n\r\nexport default class FilePreview extends React.Component{\r\n\r\n    fileContainer = (fileType, file) => {\r\n\r\n        //files in server dont have 'preview' property, and files in state dont have filePath\r\n        const previewSource = () => {\r\n            let source = null\r\n            //check if file has been uploaded already/is present in database\r\n            if(file.filePath){\r\n                if(!this.props.mobile){\r\n                    source = file.mobilePath\r\n                }\r\n                else{\r\n                    source = file.thumbnailPath\r\n                }\r\n            }\r\n            //if file is to be uploaded\r\n            else{\r\n                source = file.preview\r\n            }\r\n            return source\r\n        }\r\n\r\n        if(fileType.match('image')){\r\n            let image = <img \r\n            loadbydefault={this.props.loadbydefault}\r\n            className={this.props.className}\r\n            alt={file.artworkDescription || file.familyDescription || file.artworkName || file.fileName } \r\n            data-src={previewSource()}\r\n            src={this.props.loadbydefault ? previewSource() : \"\"} \r\n            id={this.props.id || this.props.file.fileName}\r\n            name={this.props.previewName}\r\n            onClick={(e) => {this.props.onClick(e)}}\r\n            ref={this.props.ref}\r\n            />\r\n            return(\r\n                    image\r\n            )\r\n        }\r\n        if(fileType.match('video')){\r\n            return(\r\n                <video \r\n                className={this.props.className}\r\n                controls\r\n                id={this.props.id || this.props.file.fileName}\r\n                name={this.props.previewName}\r\n                onClick={(e) => {this.props.onClick(e)}}\r\n                >\r\n                    <source src={previewSource} type={fileType} />\r\n                    Your browser does not support the video tag.\r\n                </video> \r\n            )\r\n        }\r\n        if(fileType.match('audio')){\r\n            return(\r\n                <audio \r\n                className={this.props.className}\r\n                controls\r\n                id={this.props.id || this.props.file.fileName}\r\n                name={this.props.previewName}\r\n                onClick={(e) => {this.props.onClick(e)}}\r\n                >\r\n                    <source src={previewSource} type={fileType} />\r\n                    Your browser does not support the audio tag.\r\n                </audio> \r\n            )\r\n        }\r\n        if(fileType.match(\"application/pdf\")){\r\n            return(\r\n                    <iframe title=\"pdf\" src={previewSource} style={{width: \"100%\"}}></iframe>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.file \r\n            ?\r\n                this.props.noWrapper \r\n                ?\r\n                this.fileContainer(this.props.file.fileType, this.props.file)\r\n                :\r\n                <div className={this.props.containerClassName} id={this.props.id} >\r\n                {this.fileContainer(this.props.file.fileType, this.props.file)}\r\n                {this.props.children}\r\n                </div> \r\n            :\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport Year from './YearLocation/Year';\r\nimport Location from './YearLocation/Location';\r\nimport Themes from './Themes/Themes';\r\nimport ClearAll from './ClearAll';\r\nimport About from './About/About';\r\nimport Category from './TagsMenu/Category';\r\n\r\nimport '../../../css/frontEndMain.css'\r\n\r\nexport default class TagsMenu extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {subcategory: null, listItems: null}\r\n    }\r\n    /**\r\n     * @param title: takes a string and spreads it into separate divs\r\n     */\r\n    spreadLetters = (title) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div \r\n            key={`${title}-leter-${index}`} \r\n            className=\"title-letter\"\r\n            >{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n    onCategoriesClick = (category) => {\r\n        let delay = 0\r\n        //if closing category\r\n        if(document.getElementById(`${category}-subcategories`).classList.contains(\"scroll-down\")){\r\n            //if listitem is open\r\n            if(Array.from(document.getElementsByClassName(\"scroll-down-listitem\")).length > 0){\r\n                Array.from(document.getElementsByClassName(\"scroll-down-listitem\")).forEach(item => item.classList.remove(\"scroll-down-listitem\"))\r\n                delay = 150\r\n            }\r\n\r\n            setTimeout(() => {\r\n                Array.from(document.getElementsByClassName(\"scroll-down\")).forEach(item => item.classList.remove(\"scroll-down\"))\r\n            }, delay);\r\n            return\r\n        }\r\n        \r\n        //if opening category\r\n        else{\r\n            if(Array.from(document.getElementsByClassName(\"TagsMenu-listitem\")).length > 0){\r\n                Array.from(document.getElementsByClassName(\"TagsMenu-listitem\")).forEach(item => item.classList.remove(\"scroll-down-listitem\"))\r\n                delay = 150\r\n            }\r\n\r\n            if(document.getElementsByClassName(\"scroll-down\").length > 0){\r\n                setTimeout(() => {                    \r\n                    document.getElementById(\"TagsMenu-subcategory-container\").childNodes.forEach(child => {\r\n                        child.classList.remove(\"scroll-down\")\r\n                    })\r\n                }, delay);\r\n                delay += 150\r\n            }\r\n\r\n            setTimeout(() => {\r\n                document.getElementById(`${category}-subcategories`).classList.toggle(\"scroll-down\")\r\n            }, delay);\r\n        }\r\n    }\r\n    onSubcategoriesClick = (subcategory) => {\r\n        if(document.getElementById(`${subcategory}-listitem`) && document.getElementById(`${subcategory}-listitem`).classList.contains(\"scroll-down\")){\r\n            Array.from(document.getElementsByClassName(\"scroll-down-listitem\")).forEach(item => item.classList.remove(\"scroll-down-listitem\"))\r\n            return\r\n        }\r\n        Array.from(document.getElementsByClassName(\"TagsMenu-listitem\")).forEach(item => item.classList.remove(\"scroll-down-listitem\"))\r\n        if(document.getElementById(`${subcategory}-listitem`))\r\n        document.getElementById(`${subcategory}-listitem`).classList.toggle(\"scroll-down-listitem\")\r\n    }\r\n    createCategories = (data) => {\r\n\r\n        let buttons = data.map(obj => {\r\n            return <Category \r\n            key={`TagsMenu-category-${obj.category}`}\r\n            clickable\r\n            category={obj.category}\r\n            level=\"category\"\r\n            context={this.props.context}\r\n            onChange={() => this.props.context.filterByCategory(obj.category)}\r\n            isChecked={this.props.context.categoryChecked(obj.category)}\r\n            showContent={this.onCategoriesClick}\r\n            />\r\n        })\r\n\r\n        return buttons\r\n    }\r\n    /**\r\n     * return a div with listitems for a subcategory\r\n     */\r\n    createListItems = (listItemArray, subcategory, category) => {\r\n        let listItems = listItemArray.map(listitem => {\r\n            return <Category \r\n                            key={`button-${listitem}`}\r\n                            clickable={false}\r\n                            category={listitem}\r\n                            level=\"listitem\"\r\n                            onChange={() => this.props.context.filterByListitem(category, subcategory, listitem)}\r\n                            isChecked={this.props.context.listitemChecked(category, subcategory, listitem)}\r\n                            showContent={() => {return}}\r\n                    />\r\n        })\r\n        return <div key={`tagsMenu-listItems-${subcategory}`} className=\"button-wrapper TagsMenu-listitem\" id={`${subcategory}-listitem`}>\r\n                    {/* <div className=\"shadow\"></div> */}\r\n                    {listItems}\r\n                </div>\r\n    }\r\n    listitemsContainer = []\r\n    createSubcategories = (data) => {\r\n        let subCatBlocks = []\r\n        let listItems = []\r\n\r\n        //obj === category\r\n        data.forEach(obj => {\r\n            const subcategories = Object.keys(obj.subcategory)\r\n            \r\n            let subContainer = subcategories.map(subcategory => {\r\n                    if(obj.subcategory[subcategory].length > 0){\r\n                        this.listitemsContainer = [...this.listitemsContainer, this.createListItems(obj.subcategory[subcategory], subcategory, obj.category)]\r\n                    }\r\n                    let button = <Category \r\n                    key={`button-${subcategory}`}\r\n                    clickable={obj.subcategory[subcategory].length > 0}\r\n                    category={subcategory}\r\n                    level=\"subcategory\"\r\n                    context={this.props.context}\r\n                    onChange={() => this.props.context.filterBySubcategory(obj.category, subcategory)}\r\n                    isChecked={this.props.context.subcategoryChecked(obj.category, subcategory)}\r\n                    showContent={this.onSubcategoriesClick}\r\n                    />\r\n\r\n                        { if(obj.subcategory[subcategory].length > 0)\r\n                            listItems = [...listItems, \r\n                                this.createListItems(obj.subcategory[subcategory], subcategory, obj.category) \r\n                            ]\r\n                        }\r\n                    return button\r\n                \r\n            })\r\n\r\n\r\n            // subContainer = [...subContainer, this.createListItems(obj.subcategory[subcategory], subcategory, obj.category)]\r\n        subCatBlocks = [...subCatBlocks, \r\n            <Fragment key={`subcategories-${obj.category}`}>\r\n                <div className=\"TagsMenu-subcategories\" id={`${obj.category}-subcategories`}>\r\n                    <div data-title=\"subcategories\" className=\"button-wrapper subcategories\">\r\n                        {subContainer}\r\n                    </div>\r\n                    <div data-title=\"list\" className=\"TagsMenu-listitems-container\">\r\n                        {listItems}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n    ]\r\n        })\r\n        subCatBlocks = [...subCatBlocks, \r\n            <div key={`TagsMenu-themes`} className=\"TagsMenu-subcategories subcategories button-wrapper\" id=\"themes-subcategories\">\r\n                <Themes\r\n                    state={this.props.context.state}\r\n                    context={this.props.context}\r\n                />\r\n            </div>,\r\n            <div key={`TagsMenu-yearLocation`} className=\"TagsMenu-subcategories\" id=\"year/location-subcategories\">\r\n                <div data-title=\"subcategories\" className=\"button-wrapper subcategories\">\r\n                    <Category \r\n                        clickable\r\n                        category=\"year\"\r\n                        level=\"subcategory\"\r\n                        context={this.props.context}\r\n                        button\r\n                        showContent={this.onSubcategoriesClick}\r\n                    />\r\n                    <Category \r\n                        clickable\r\n                        category=\"location\"\r\n                        context={this.props.context}\r\n                        level=\"subcategory\"\r\n                        button\r\n                        showContent={this.onSubcategoriesClick}\r\n                    />\r\n                </div>\r\n                    <div data-title=\"list\" className=\"TagsMenu-listitems-container\">\r\n                        <div className=\"button-wrapper TagsMenu-listitem\" id={`year-listitem`}>\r\n                            <Year \r\n                                years={this.props.context.state.yearLocation.years}\r\n                                filterByYear={this.props.context.filterByYear}\r\n                                yearChecked={this.props.context.yearChecked}\r\n                                context={this.props.context}\r\n                                modifierClass={\"halfSize\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"button-wrapper TagsMenu-listitem\" id={`location-listitem`}>\r\n                            <Location \r\n                                locations={this.props.context.state.yearLocation.locations}\r\n                                filterByYear={this.props.context.filterByYear}\r\n                                context={this.props.context}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n            </div>,\r\n            <div key={`TagsMenu-contact`} className=\"TagsMenu-subcategories\" id=\"contact-subcategories\">\r\n                <a className=\"title-letter contact-title\" href=\"mailto:andriussvilys@gmail.com\">andriussvilys@gmail.com</a>\r\n                <a className=\"title-letter contact-title\" href=\"https://www.instagram.com/istmblr/\" rel=\"noopener noreferrer\" target=\"_blank\">instagram</a>\r\n            </div>\r\n        ]\r\n        this.listitemsContainer = [...this.listitemsContainer, \r\n            <div className=\"button-wrapper TagsMenu-listitem\" id={`year-listitem`}>\r\n                <Year \r\n                    years={this.props.context.state.yearLocation.years}\r\n                    filterByYear={this.props.context.filterByYear}\r\n                    yearChecked={this.props.context.yearChecked}\r\n                />\r\n            </div>,\r\n            <div className=\"button-wrapper TagsMenu-listitem\" id={`location-listitem`}>\r\n                <Location \r\n                    locations={this.props.context.state.yearLocation.locations}\r\n                    filterByYear={this.props.context.filterByYear}\r\n                />\r\n            </div>,\r\n        ]\r\n        return subCatBlocks\r\n    }\r\n    render(){\r\n        return <div\r\n        id=\"TagsMenu\"\r\n        className={\r\n            `TagsMenu-collapsed\r\n            ${\r\n                !this.props.context.state.mobile ? \r\n                    `TagsMenu-container show-menu-desktop` :\r\n                    this.props.context.state.enlarge && this.props.context.state.enlarge.open ?\r\n                    `TagsMenu-container TagsMenu-max` : \r\n                `TagsMenu-container`\r\n            }\r\n            `\r\n        }\r\n        >\r\n            <div className=\"TagsMenu-wrapper\">\r\n                <div className=\"button-wrapper TagsMenu-about-contact\">\r\n                    <Category \r\n                        clickable\r\n                        category=\"contact\"\r\n                        context={this.props.context}\r\n                        level=\"category\"\r\n                        button\r\n                        showContent={this.onCategoriesClick}\r\n                    />\r\n                    <About\r\n                        loadEnlarge={this.props.context.loadEnlarge}\r\n                    />\r\n                    {this.props.children}\r\n                </div>\r\n                <Fragment>\r\n                        <div className=\"TagsMenu-category-button-container\">\r\n                            {this.props.context.state.categoriesData ? this.createCategories(this.props.context.state.categoriesData) : null}\r\n                            \r\n                            <Category \r\n                                clickable\r\n                                category=\"year/location\"\r\n                                level=\"category\"\r\n                                context={this.props.context}\r\n                                button\r\n                                showContent={this.onCategoriesClick}\r\n                            />\r\n                            <Category \r\n                                clickable\r\n                                category=\"themes\"\r\n                                context={this.props.context}\r\n                                level=\"category\"\r\n                                button\r\n                                showContent={this.onCategoriesClick}\r\n                            />\r\n                            <ClearAll \r\n                                context={this.props.context}\r\n                                enlarge={this.props.context.state.enlarge}\r\n                            />\r\n                        </div>\r\n                        <div id=\"TagsMenu-subcategory-container\" className=\"TagsMenu-subcategory-container\">\r\n                            {this.props.context.state.categoriesData ? this.createSubcategories(this.props.context.state.categoriesData) : null}\r\n                        </div>\r\n                        {/* <div id=\"TagsMenu-listitems-container\" className=\"TagsMenu-listitems-container\">\r\n                            {this.listitemsContainer}\r\n                        </div> */}\r\n                </Fragment>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    }\r\n}","import React from 'react'\r\nimport FilePreview from '../FilePreview'\r\n\r\nconst ImageSelect = (props) => {\r\n\r\n    const createPreviewsALL = (data) => {\r\n        if(data){\r\n            let previews = Object.keys(data).map((objName) => {\r\n              //check if width < height \r\n              //if true, add half-size class\r\n              const halfSize = props.state.artworkInfoData[objName].naturalSize.naturalWidth < props.state.artworkInfoData[objName].naturalSize.naturalHeight ? \"halfSize\" : null\r\n              if(props.state.artworkOnDisplay[objName]){\r\n                return <FilePreview \r\n                        key={`imageSelect-${objName}`}\r\n                        containerClassName={`FilePreview--imageContainer ${halfSize}`}\r\n                        className=\"imageSelect-FilePreview loadByDefault\" \r\n                        onClick={e => props.methods.loadEnlarge(e, objName)}\r\n                        file={data[objName]} \r\n                        mobile={props.mobile}\r\n                        />\r\n              }\r\n              else{\r\n                return <FilePreview \r\n                        key={`imageSelect-${objName}`}\r\n                        containerClassName={`\r\n                        FilePreview--imageContainer \r\n                        FilePreview--imageContainer__empty\r\n                        ${halfSize}`}\r\n                        className=\"imageSelect-FilePreview\" \r\n                        onClick={e => props.methods.loadEnlarge(e, objName)}\r\n                        file={data[objName]} \r\n                        mobile={props.mobile}\r\n                        />\r\n              }\r\n            })\r\n            return <div \r\n                      id=\"imageSelect\"\r\n                      className={`imageSelect-container ${document.documentElement.clientWidth > 721 ? \"full-height\" : null}`}\r\n                      onClick={(e) => {\r\n                        if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n                          props.context.showMenu(e)\r\n                        }\r\n                        return\r\n                      }}\r\n                      >\r\n                          {previews}\r\n                          {props.mobile ? <div id=\"spanner\" style={{width: \"calc(100% - 15vw)\", flex: \"1 1 100%\"}}></div> : null}\r\n                          {setTimeout(() => {\r\n                            lazyLoadImages()\r\n                          }, 50)}\r\n\r\n                    </div>\r\n        }\r\n        else{return null}  \r\n    }\r\n\r\n    const lazyLoadImages = () => {  \r\n        const images = document.querySelectorAll(\".loadByDefault\")\r\n\r\n        if(images){\r\n          const preloadImage = (img) => {\r\n            const src = img.getAttribute(\"data-src\")\r\n            if(!src){\r\n              return\r\n            }\r\n            img.src=src\r\n          }\r\n      \r\n          const imgOptions = {\r\n            threshold: 0,\r\n            root: null,\r\n            rootMargin: \"0px 0px 300px 0px\"\r\n          }\r\n      \r\n          const imgObserver = new IntersectionObserver((entries, imgObserver) => {\r\n            entries.forEach(entry => {\r\n              if(!entry.isIntersecting){\r\n                return\r\n              }\r\n              else{\r\n                preloadImage(entry.target);\r\n                imgObserver.unobserve(entry.target)\r\n              }\r\n            }, imgOptions)\r\n          })\r\n      \r\n          images.forEach(image => {\r\n            imgObserver.observe(image)\r\n          })\r\n        }\r\n      }\r\n    return(\r\n      createPreviewsALL(props.data)\r\n    )\r\n}\r\n\r\nexport default ImageSelect","import React from 'react'\r\n\r\nconst Tags = (props) => {\r\n    /**\r\n     * \r\n     * @param filterFunc takes a Promise function\r\n     */\r\n    const animateFilter = (filterFunc) => {\r\n        const artworkOnDisplay = props.context.state.artworkOnDisplay\r\n        let enlargeImg = props.file\r\n        let scrollToId = props.file.fileName\r\n\r\n        if(!Object.keys(artworkOnDisplay).includes(scrollToId)){\r\n            let newImg = null\r\n            Object.keys(artworkOnDisplay).forEach(objName => {\r\n                const currentObj = artworkOnDisplay[objName]\r\n                if(Object.values(currentObj).includes(enlargeImg.artworkFamily)){\r\n                    newImg = currentObj.fileName\r\n                }\r\n            })\r\n            scrollToId = newImg\r\n        }\r\n        let infoUpDelay = 0\r\n        if(!document.getElementById(\"ArtworkInfo\").classList.contains(\"ArtworkInfo-toggleTags\")){\r\n            infoUpDelay = 200;\r\n            document.getElementById(\"ArtworkInfo\").classList.add(\"ArtworkInfo-toggleTags\")\r\n        }\r\n        setTimeout(() => {\r\n            filterFunc\r\n                .then(res => {\r\n                        setTimeout(() => {\r\n                            props.context.scrollToHorizontal(null, \"imageSelect\"); \r\n                        }, 400);\r\n                    }\r\n                )\r\n        }, infoUpDelay);\r\n    }\r\n\r\n    const tags = (file) => {\r\n        let DOMthemes = null\r\n        if(file.themes){\r\n            let themes = file.themes\r\n            themes = themes.map(theme => {return {\r\n                \"type\": \"theme\", \r\n                \"title\": theme, \r\n                \"onClick\": props.context.filterByTheme\r\n                }\r\n            })\r\n            DOMthemes = themes.map((tag, index) => {\r\n                return <div \r\n                key={`tag-${tag}${index}`}\r\n                className=\"Tags-item_container\"\r\n                onClick={(e) => {e.stopPropagation(); \r\n                    animateFilter(tag.onClick(e, tag.title, true))\r\n                }}\r\n                >\r\n                    <p className=\"Tags-item_text\">{tag.title}</p>\r\n                </div> \r\n            })\r\n        }\r\n\r\n        let categories = Object.keys(file.category)\r\n        categories = categories.map((category) => {\r\n            return {\r\n                \"type\": \"category\", \r\n                \"title\": category, \r\n                \"onClick\": props.context.filterByCategory\r\n            }\r\n        })\r\n        const DOMcategories = categories.map((tag, index) => {\r\n            return <div \r\n            key={`category-${tag.title}${index}`}\r\n            className=\"Tags-item_container\"\r\n            onClick={(e) => {e.stopPropagation(); \r\n                animateFilter(tag.onClick(e, tag.title, true))\r\n            }}\r\n            >\r\n                <p className=\"Tags-item_text\">{tag.title}</p>\r\n            </div>            \r\n        })\r\n\r\n        let subcategories = []\r\n        categories.forEach(category => {\r\n            subcategories = Object.keys(file.category[category.title]).map(subcategory => subcategory)\r\n            subcategories = subcategories.map(subcategory => {\r\n                return {\r\n                    \"type\": \"subcategory\", \r\n                    \"title\": subcategory, \r\n                    \"category\": category.title, \r\n                    \"onClick\": props.context.filterBySubcategory\r\n                }\r\n            })\r\n        })\r\n        const DOMsubcategories = subcategories.map(tag => {\r\n            if(tag.title === \"studio\"){\r\n                return\r\n            }\r\n            return <div \r\n            key={`subcategory-${tag.title}`}\r\n            className=\"Tags-item_container\"\r\n            onClick={(e) => {e.stopPropagation(); \r\n                animateFilter(tag.onClick(e, tag.category, tag.title, true))\r\n            }}\r\n            >\r\n                <p className=\"Tags-item_text\">{tag.title}</p>\r\n            </div>\r\n        })\r\n\r\n        let listItems = []\r\n        categories.forEach(category => {\r\n            Object.keys(file.category[category.title]).forEach(subcategory => {\r\n                let list = file.category[category.title][subcategory]\r\n                if(list.length === 0){return}\r\n                listItems = list.map(listItem => {return {\r\n                    \"type\": \"listItem\", \r\n                    \"title\": listItem,\r\n                    \"category\": category.title,\r\n                    \"subcategory\": subcategory,\r\n                    \"onClick\": props.context.filterByListitem\r\n                }\r\n            })\r\n            })\r\n        })\r\n        const DOMlistItems = listItems.map(tag => {\r\n            return <div \r\n            key={`listitem-${tag.title}`}\r\n            className=\"Tags-item_container\"\r\n            onClick={(e) => {e.stopPropagation(); \r\n                animateFilter(tag.onClick(e,tag.category, tag.subcategory, tag.title, true))\r\n            }}\r\n            >\r\n                <p className=\"Tags-item_text\">{tag.title}</p>\r\n            </div>\r\n        })\r\n        let DOMtags = []\r\n        DOMtags = [...DOMthemes, ...DOMsubcategories, ...DOMcategories, ...DOMlistItems]\r\n        return DOMtags\r\n    }\r\n    return(\r\n        <div  className=\"Tags-item_wrapper\">\r\n            {tags(props.file)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tags","import React from 'react'\r\nimport FilePreview from '../FilePreview'\r\nimport Tags from './Tags'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\n\r\nconst ArtworkInfo = (props) => {\r\n\r\n    let singleContainerCounter = null\r\n    \r\n    const seeAlso = () => {\r\n        let seeAlsos = []\r\n        if(props.file.foreground.seeAlso.length > 0){\r\n            seeAlsos = props.file.foreground.seeAlso.map(fileName => {\r\n                return <FilePreview \r\n                    loadbydefault={\"true\"}\r\n                    key={`ArtworkInfo-${fileName}`}\r\n                    className=\"ArtworkInfo-preview\"\r\n                    containerClassName=\"ArtworkInfo-preview-container\"\r\n                    file={props.artworkInfoData[fileName]}\r\n                    onClick={(e) => props.loadEnlarge(e, fileName)}\r\n                    id={`seeAlso-${fileName}`}\r\n                />\r\n            })\r\n            seeAlsos =  <div key={\"SeeAlso-related\"} className=\"SeeAlso-related SeeAlso-wrapper\">\r\n                            <div className=\"subtitle subtitle_seeAlso\">see also:</div>\r\n                            <div className=\"SeeAlso-related_images\">\r\n                                {seeAlsos}\r\n                            </div>\r\n                        </div>\r\n        }\r\n        let DOMS = []\r\n        if(props.context.state.relatedArtwork[props.file.foreground.artworkFamily].column.fileIds.length > 1){\r\n            let otherInFam = props.context.state.relatedArtwork[props.file.foreground.artworkFamily].column.fileIds.filter(fileName => fileName !== props.file.foreground.fileName)\r\n            DOMS = otherInFam.map(fileName => {\r\n                return <FilePreview \r\n                            loadbydefault={\"true\"}\r\n                            key={`ArtworkInfo-${fileName}`}\r\n                            className=\"ArtworkInfo-preview\"\r\n                            containerClassName=\"ArtworkInfo-preview-container\"\r\n                            file={props.artworkInfoData[fileName]}\r\n                            onClick={(e) => props.loadEnlarge(e, fileName)}\r\n                            id={`seeAlso-${fileName}`}\r\n                        />\r\n            })\r\n            DOMS = <div key={\"SeeAlso-previous\"} className=\"SeeAlso-previous SeeAlso-wrapper\">\r\n                        <div className=\"subtitle subtitle_seeAlso\">related:</div>\r\n                        <div className=\"SeeAlso-related_images\">\r\n                            {DOMS}\r\n                        </div>\r\n                    </div>\r\n        }\r\n        let combined = [DOMS]\r\n        combined = [seeAlsos, ...combined]\r\n        const singleContainer = () => {\r\n            if(Array.isArray(DOMS) || Array.isArray(seeAlsos)){\r\n                return true\r\n            }\r\n            else{\r\n                return false\r\n            }\r\n        }\r\n        singleContainerCounter = singleContainer()\r\n        return <div \r\n                    className={singleContainer() ? \"ArtworkInfo-seeAlso-container single-container\" : \"ArtworkInfo-seeAlso-container\"}\r\n                >\r\n                {combined}\r\n            </div>\r\n    }\r\n\r\n    const locationAndYear = () => {\r\n        let location = props.file.foreground.location ? props.file.foreground.location : null\r\n        let year = props.file.foreground.year ? props.file.foreground.year: null\r\n        if(location && year){\r\n            return <div key={\"location/year\"} className=\"ArtworkInfo_locationYear\">({location}. {year})</div>\r\n        }\r\n        if(!year && location){\r\n            return <div key={\"location\"} className=\"ArtworkInfo_locationYear\">({location})</div>\r\n        }\r\n        if(year){\r\n            return <div key={\"year\"} className=\"ArtworkInfo_locationYear\">({year})</div>\r\n        }\r\n        else{ return null}\r\n    }\r\n\r\n    const artworkTitle = () => {\r\n\r\n            const artworkFamily = () => {\r\n                if(props.file.foreground.artworkFamily !== \"none\")\r\n                    return <div \r\n                            className={\r\n                                props.file.foreground.artworkTitle ? \r\n                                \"ArtworkInfo_artworkFamily\" :\r\n                                \"ArtworkInfo_artworkTitle\"\r\n                                }\r\n                                >\r\n                                    \r\n                                {!props.file.foreground.artworkTitle ? null : <span>part of </span> }\r\n                                <em className=\"ArtworkInfo_artworkFamily_variable\">{props.file.foreground.artworkFamily}</em>\r\n                            </div>\r\n                // }\r\n            }\r\n\r\n            const artworkTitle = () => {\r\n                if(props.file.foreground.artworkTitle){\r\n                    return <em className=\"ArtworkInfo_artworkTitle\">{props.file.foreground.artworkTitle}</em>\r\n                }\r\n                else{return null}\r\n            }\r\n                return (\r\n                    <div className=\"ArtworkInfo-Title\">\r\n                        {artworkTitle()}\r\n                        {artworkFamily()}\r\n                        {locationAndYear()}\r\n                    </div>\r\n                )\r\n        }\r\n\r\n    const descriptions = () => {\r\n        return(\r\n            <div className=\"ArtworkInfo--descriptions\">\r\n                {props.file.foreground.artworkDescription ? <div className=\"ArtworkInfo--artworkDescription ArtworkInfo--descriptions_instance\">{ReactHtmlParser(props.file.foreground.artworkDescription)}</div> : null}\r\n                {props.file.foreground.familyDescription ? <div className=\"ArtworkInfo--familyDescription ArtworkInfo--descriptions_instance\">{ReactHtmlParser(props.file.foreground.familyDescription)}</div> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div \r\n            className={props.file.open && props.context.state.mobile ? \"ArtworkInfo-container\" : \"ArtworkInfo-container\"}\r\n\r\n            id=\"ArtworkInfo\" \r\n            style={{width: `${props.mobile ? `100%` : `${props.file.currentWidth}px`}`}}\r\n        >   \r\n            <div key={\"ArtworkInfo-wrapper\"} className=\"ArtworkInfo-wrapper\">\r\n                <div key={\"ArtworkInfo-container_text\"} className=\"ArtworkInfo-container_text\" >\r\n                    {artworkTitle()}\r\n                    {descriptions()}\r\n                </div>\r\n                {<Tags \r\n                    file={props.file.foreground}\r\n                    context={props.context}\r\n                />}\r\n                <div key={\"ArtworkInfo-container_seealso\"} \r\n                className=\"ArtworkInfo-container_seealso\"\r\n                >\r\n                    {seeAlso()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtworkInfo","import React from 'react'\r\n\r\nconst PreviewBubbles = (props) => {\r\n    const countBubbles = (file) => {\r\n        let bubbles = []\r\n        // const famName = file.background.artworkFamily\r\n        const famName = props.file.familySequence.familyName\r\n        // const famArray = props.relatedArtwork[famName].column.fileIds\r\n        const famArray = props.relatedArtwork\r\n        bubbles = famArray.map(item => {\r\n            if(item === file.background.fileName){\r\n                return <div \r\n                            key={`previewBubble-${item}`}\r\n                            id={`previewBubble-${item}`}\r\n                            onClick={(e) => {\r\n                                props.enlarge(e, item)\r\n                            }} \r\n                            className=\"previewBubble previewBubble-filled\"\r\n                        ></div>\r\n            }\r\n            return <div \r\n                        key={`previewBubble-${item}`}\r\n                        id={`previewBubble-${item}`}\r\n                        onClick={(e) => {\r\n                            props.enlarge(e, item)}} \r\n                        className=\"previewBubble\"\r\n                    ></div>\r\n            }\r\n            )\r\n            if(bubbles.length <= 1 ){\r\n                bubbles = null\r\n            }\r\n        return bubbles\r\n    }\r\n    if(props.relatedArtwork){\r\n        return(\r\n            <div className=\"previewBubble-container\" id=\"previewBubble-container\">\r\n                <div className=\"previewBubble-wrapper\" id=\"previewBubble-wrapper\">\r\n                    {props.file && props.file.open ? countBubbles(props.file) : null}\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreviewBubbles","import React from 'react'\r\n\r\nconst Controls = (props) => {\r\n    const exitButton = () => {\r\n        return(\r\n            <div \r\n            className=\"controls-button controls-exitButton\"\r\n            onClick={(e) => {\r\n                e.stopPropagation()\r\n                const artworkInfo = document.getElementById(\"ArtworkInfo\")\r\n                const menu = document.getElementById(\"TagsMenu\")\r\n                const enlarge = props.context.state.enlarge\r\n                if(artworkInfo &&  artworkInfo.classList.contains(\"info-up\")){\r\n                    // console.log(\"run close info\")\r\n                    // props.context.showInfo({close: true})\r\n                    artworkInfo.classList.toggle(\"info-up\")\r\n                    return\r\n                }\r\n                else if(menu.classList.contains(\"show-menu\")){\r\n                    console.log(\"run close Menu\")\r\n                    props.context.showMenu(e)\r\n                    return\r\n                }\r\n                else if(enlarge && enlarge.open){\r\n                    console.log(\"run close enlar\")\r\n                    props.context.closeEnlarge(e)\r\n                }\r\n            }}\r\n            >\r\n                <span>x</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const slideButton = () => {\r\n        const toggle = (e) => {\r\n            e.stopPropagation()\r\n            if(!props.context.state.enlarge || !props.context.state.enlarge.open){\r\n                props.context.loadEnlarge(e, \"portrait.jpg\");\r\n                setTimeout(() => {\r\n                    if(document.getElementById(\"ArtworkInfo\")){\r\n                        // document.getElementById(\"ArtworkInfo\").classList.add(\"show\")\r\n                        // setTimeout(() => {\r\n                            document.getElementById(\"ArtworkInfo\").classList.add(\"info-up\")\r\n                        // }, 200);\r\n                    }\r\n                }, 200)\r\n                return\r\n            }\r\n            if(document.getElementById(\"TagsMenu\").classList.contains(\"show-menu\")){\r\n                props.context.showMenu(e)\r\n            }\r\n            const artworkInfo = document.getElementById(\"ArtworkInfo\")\r\n            if(artworkInfo){\r\n                artworkInfo.classList.toggle(\"info-up\")\r\n            }\r\n            //     if(artworkInfo.classList.contains(\"info-up\")){\r\n            //     }\r\n            //     else{\r\n            //         artworkInfo.classList.add(\"info-up\")\r\n            //     }\r\n            // }\r\n        }\r\n        return(\r\n            <div \r\n            className=\"controls-button controls-slideButton\"\r\n            onClick={(e) => toggle(e)}\r\n            >\r\n                <img className=\"Nav-infoButton-icon\" alt=\"info buton\" src=\"icons/info.png\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"controls\">\r\n            {slideButton()}\r\n            {exitButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls","import React, { Fragment } from 'react'\r\nimport ArtworkInfo from './ArtworkInfo'\r\nimport PreviewBubbles from './PreviewBubble'\r\nimport Controls from './Controls'\r\n\r\nconst Combined = (props) => {\r\n    const spreadLetters = (title) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div key={`${title}-leter-${index}`} className=\"title-letter white-font\">{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n    return(\r\n        <div className=\"enlarge-info\">\r\n            {\r\n                props.context.state.enlarge && props.context.state.enlarge.foreground  ? \r\n                <Fragment>\r\n                    <ArtworkInfo \r\n                        file={props.context.state.enlarge} \r\n                        context={props.context}\r\n                        artworkInfoData={props.context.state.artworkInfoData} \r\n                        loadEnlarge={props.context.loadEnlarge} \r\n                        hideArtworkInfo={props.context.hideArtworkInfo}\r\n                        mobile={props.mobile}\r\n                    />\r\n                    <PreviewBubbles \r\n                        file={props.context.state.enlarge}\r\n                        relatedArtwork={props.context.state.enlarge ? props.context.state.enlarge.familySequence.familySequence : []}\r\n                        enlarge={props.context.loadEnlarge}\r\n                        context={props.context}\r\n                    />\r\n                </Fragment> : null\r\n            }\r\n            {props.mobile ? \r\n                <Fragment>\r\n                    <div \r\n                    className=\"menu-container\"\r\n                    onClick={(e) => {\r\n                        console.log(\"combined show menu\")\r\n                        props.context.showMenu(e)}\r\n                    }\r\n                    >\r\n                        <div className=\"menu-title\">\r\n                            {spreadLetters(\"menu\")}\r\n                        </div>\r\n                    </div>\r\n                    <Controls \r\n                        context={props.context}\r\n                    />\r\n                </Fragment>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Combined","import React, { Fragment } from 'react'\r\nimport ArtworkInfo from '../ArtworkInfo/ArtworkInfo'\r\nimport PreviewBubbles from '../ArtworkInfo/PreviewBubble'\r\nimport PinchToZoom from 'react-pinch-and-zoom'\r\nimport Combined from '../ArtworkInfo/Combined'\r\n\r\nexport default class Enlarge extends React.Component{\r\n    render(){\r\n        return(\r\n                <div \r\n                onClick={(e) => this.props.closeEnlarge(e)}\r\n                className=\"enlargeContainer\" id=\"enlargeContainer\"\r\n                >\r\n                    <Fragment> \r\n                            <PinchToZoom \r\n                                className=\"pinchContainer\"\r\n                                panEvent={{\r\n                                    viewNext: this.props.context.viewNext, \r\n                                    viewPrev: this.props.context.viewNext,\r\n                                    showMenu: this.props.context.showMenu,\r\n                                    showInfo: this.props.context.showInfo,\r\n                                    closeEnlarge: this.props.context.closeEnlarge\r\n                                }}\r\n                                mobile={this.props.mobile}\r\n                            >\r\n                                <div id=\"foreground\" className=\"foreground-transition\">\r\n                                    <img alt={this.props.context.state.enlarge ? this.props.context.state.enlarge.fileName : \"foreground\"} id=\"foreground-img\" src={\"#\"} className={`enlarge-preview`} />\r\n                                </div>\r\n\r\n                                <div id=\"background\" className=\"foreground-transition\">\r\n                                    <img  alt={this.props.context.state.enlarge ? this.props.context.state.enlarge.fileName : \"background\"} id=\"background-img\" src={\"#\"} className={`enlarge-preview`} />\r\n                                </div>\r\n                            </PinchToZoom>\r\n                            <Combined \r\n                                context={this.props.context}\r\n                                mobile={this.props.mobile}\r\n                            />: null\r\n                    </Fragment>\r\n                </div>\r\n        )\r\n    }\r\n    }","import React, { Fragment } from 'react'\r\nimport Controls from '../ArtworkInfo/Controls'\r\n\r\nconst Nav = (props) => {\r\n    const showButtons = () => {\r\n        if(props.context.state.enlarge){\r\n            if(!props.context.state.enlarge.open){\r\n                return false\r\n            }\r\n            // if(props.context.state.enlarge.background.artworkFamily){\r\n            //     // return props.context.state.relatedArtwork[props.context.state.enlarge.background.artworkFamily].column.fileIds.length > 1\r\n            // }\r\n            else{return true}\r\n        }\r\n        else{return false}\r\n    }\r\n    const showInfo = () => {\r\n        if(props.context.state.enlarge){\r\n            if(props.context.state.enlarge.open){\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n        return false\r\n    }\r\n        return(\r\n            <div\r\n                className=\"Navbar\"\r\n                style={{\r\n                }}\r\n                >\r\n                    {/* {props.context.state.enlarge ?  */}\r\n                                    <Fragment>\r\n                                    <button\r\n                                        id=\"button-next\"\r\n                                        onClick={() => props.context.viewNext(+1)}\r\n                                        className={showButtons() ? \"Nav-button Nav-button_next\" : \"Nav-button Nav-button_next move-right\"}\r\n                                    >\r\n                                        <img alt=\"view next\" src=\"icons/point-right.png\" />\r\n                                    </button>\r\n                                    <button\r\n                                        id=\"button-prev\"\r\n                                        onClick={() => props.context.viewNext(-1)}\r\n                                        className={showButtons() ? \"Nav-button Nav-button_prev\" : \"Nav-button Nav-button_prev move-left\"}\r\n                                    >\r\n                                        <img alt=\"view previous\" src=\"icons/point-left.png\"/>\r\n                                    </button>\r\n                                        <div \r\n                                            className=\"Nav-button Nav-button-menu\" \r\n                                            onClick={(e) => props.context.showMenu(e)}\r\n                                        >\r\n                                            <img className=\"menu\" alt=\"menu button\" src='icons/menu.png'/>\r\n                                            {/* <h3 className=\"nav-menuButton\">menu</h3> */}\r\n                                        </div>\r\n                                    {showInfo() ?                                    \r\n                                        <div \r\n                                            className=\"Nav-button Nav-infoButton\"\r\n                                            onClick={() => props.context.showInfo()}\r\n                                        >\r\n                                            <img className=\"Nav-infoButton-icon\" alt=\"info buton\" src=\"icons/info.png\" />\r\n                                            {/* <h1>i</h1> */}\r\n                                        </div>\r\n                                        : \r\n                                        null\r\n                                    }\r\n                                    </Fragment>\r\n                    {/* } */}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nconst Accordion = (props) => {\r\n    return(\r\n        <div\r\n        className={`FilterTree-form ${props.containerClass ? props.containerClass : \"\"}`}\r\n        >\r\n            {props.children}\r\n            {props.listId ? \r\n                <img \r\n                className=\"FilterTree-caret\" \r\n                src=\"icons/triangle.svg\" \r\n                alt=\"open or close filter category\"\r\n                onClick={(e) => {\r\n                    console.log(\"caret clicked\")\r\n                    e.stopPropagation()\r\n                    e.target.classList.toggle(\"FilterTree-caret_down\")\r\n                    const list = document.getElementById(props.listId)\r\n\r\n                    let timeout = 1\r\n                    if (!list.classList.contains(\"FilterTree-list_closed\") && !list.style.maxHeight){\r\n                        list.style.maxHeight = `${list.scrollHeight}px`\r\n                        timeout += 200\r\n                    }\r\n                    setTimeout(() => {      \r\n                        if (!list.classList.contains(\"FilterTree-list_closed\")) {\r\n                            list.style.maxHeight = 0;\r\n                        } \r\n                        else {\r\n                        list.style.maxHeight = list.scrollHeight + \"px\";\r\n                        const parent = document.getElementById(\"FilterTree-list_all\")\r\n                            if(parent.style.maxHeight){\r\n                                setTimeout(() => {\r\n                                    parent.style.maxHeight = `${parent.scrollHeight}px` \r\n                                }, 300);\r\n                            }\r\n                        }\r\n                        list.classList.toggle(\"FilterTree-list_closed\")\r\n                        return\r\n                    }, timeout);\r\n                }}\r\n                ></img>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Accordion","import React, { Fragment } from 'react'\r\n\r\nconst Title = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <label \r\n                className={`FilterTree-title`}\r\n                htmlFor={`FilterTree-checkbox-${props.title}`}\r\n                >\r\n                {props.title}\r\n            </label>\r\n            <div \r\n                className=\"styledCheckbox-container\"\r\n            >\r\n                <input \r\n                className={`styledCheckbox-checkbox`}\r\n                id={`FilterTree-checkbox-${props.title}`} \r\n                type=\"checkbox\" \r\n                checked={props.isChecked}\r\n                onChange={props.onChange}\r\n                ></input>\r\n                <span \r\n                onClick={props.onChange}\r\n                className=\"styleCheckbox-checkmark\"\r\n                ></span>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Title","import React, {Fragment} from 'react'\r\nimport Accordion from './components/Accordion'\r\nimport Title from './components/Title'\r\n\r\nconst FilterTree = (props) => {\r\n    const spreadLetters = (title) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div \r\n            key={`${title}-leter-${index}`} \r\n            className=\"title-letter\"\r\n            >{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n    const createTree = (data) => {\r\n\r\n    const subcategories = (subcategories, parent) => {\r\n        const subcategoryNames = Object.keys(subcategories)\r\n        const subcategoryLists = subcategoryNames.map(name => {\r\n            return(\r\n                <li className={`FilterTree-subcategory_item`} key={`FilterTree-${parent}-${name}`}>\r\n                <Accordion\r\n                    listId={subcategories[name].length > 0 ? `FilterTree-list_subcategory-${name}` : null}\r\n                >\r\n                    <Title \r\n                        title={name}\r\n                        onChange={(e) => props.context.filterBySubcategory(e, parent, name)}\r\n                        isChecked={props.context.subcategoryChecked(parent, name)}\r\n                    />\r\n                </Accordion>\r\n                {subcategories[name].length > 0 ?\r\n                    <ul \r\n                    className={`FilterTree-list FilterTree-listItems`}\r\n                    id={`FilterTree-list_subcategory-${name}`}\r\n                    >\r\n                        { subcategories[name].map(listItem => {\r\n                            return (\r\n                                <li \r\n                                className={\"FilterTree-item_listItem\"}\r\n                                key={`FilterTree-listItem-${name}-${listItem}`}>\r\n                                    <Title \r\n                                        title={listItem}\r\n                                        onChange={(e) => props.context.filterByListitem(e, parent, name, listItem)}\r\n                                        isChecked={props.context.listitemChecked(parent, name, listItem)}\r\n                                    />\r\n                                </li>\r\n                            )\r\n                            })\r\n                        }\r\n                    </ul> \r\n                    : null\r\n                }\r\n                </li>\r\n            ) \r\n        })\r\n        return (\r\n            <ul \r\n            className={`FilterTree-list FilterTree-subcategories`}\r\n            id={`FilterTree-list_category-${parent}`}\r\n            >{subcategoryLists}</ul>\r\n        )\r\n    }\r\n\r\n    const tree = data.map(obj => {\r\n        return (\r\n                <ul \r\n                    className=\"FilterTree-list FilterTree-category\" \r\n                    key={`FilterTree-category-${obj.category}`}\r\n                    // id=\"FilterTree-list_all\"\r\n                >\r\n                    <Accordion\r\n                        listId={ Object.keys(obj.subcategory).length > 0 ? `FilterTree-list_category-${obj.category}` : null}\r\n                    >\r\n                        <Title \r\n                            title={obj.category}\r\n                            onChange={(e) => props.context.filterByCategory(e, obj.category)}\r\n                            isChecked={props.context.categoryChecked(obj.category)}\r\n                        />\r\n                    </Accordion>\r\n                    {subcategories(obj.subcategory, obj.category)}\r\n                </ul>\r\n        )\r\n    })\r\n    return tree\r\n    }\r\nreturn(\r\n    <div className=\"FilterTree-container_main\">\r\n        <Accordion \r\n        containerClass={\"FilterTree-form_categories\"}\r\n        listId={\"FilterTree-list_all\"}>\r\n            <div className=\"FilterTree-title FilterTree-title_categories\">\r\n                {spreadLetters(\"Categories\")}\r\n            </div>\r\n        </Accordion>\r\n        <div \r\n            className=\"FilterTree-list FilterTree-category\" \r\n            id=\"FilterTree-list_all\"\r\n        >\r\n            {createTree(props.categoriesData)}  \r\n        </div>\r\n    </div>\r\n) \r\n}\r\n\r\nexport default FilterTree ","import React from 'react'\r\nimport FilterTree from './FilterTree'\r\nimport Category from '../Category'\r\nimport About from '../../About/About'\r\nimport ClearAll from '../../ClearAll'\r\nimport Themes from './Themes'\r\n\r\nconst Menu = (props) => {\r\n    return(\r\n        <div className=\"FilterTree-container\" id=\"TagsMenu\">\r\n        {/* {props.categoriesData ? createTree(props.categoriesData) : null} */}\r\n            <FilterTree \r\n                categoriesData={props.context.state.categoriesData || []}\r\n                context={props.context}\r\n            />\r\n            {/* <div className=\"button-wrapper TagsMenu-about-contact\">\r\n                <Category \r\n                    clickable\r\n                    category=\"contact\"\r\n                    context={props.context}\r\n                    level=\"category\"\r\n                />\r\n                <About\r\n                    loadEnlarge={props.context.loadEnlarge}\r\n                />\r\n            </div>\r\n            <Category \r\n                clickable\r\n                category=\"year/location\"\r\n                level=\"category\"\r\n                context={props.context}\r\n            />\r\n            {/* <Category \r\n                clickable\r\n                category=\"themes\"\r\n                context={props.context}\r\n                level=\"category\"\r\n            /> */}\r\n            {/* <Themes\r\n                context={props.context}\r\n            />\r\n            <ClearAll \r\n                context={props.context}\r\n                enlarge={props.context.state.enlarge}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { Context } from './FrontEndProvider';\r\n\r\nimport TagsMenu from './components/TagsMenu'\r\nimport ImageSelect from './components/ImageSelect/ImageSelect'\r\nimport Enlarge from './components/Enlarge/Enlarge'\r\nimport Nav from './components/Nav/Nav'\r\nimport PreviewBubbles from './components/ArtworkInfo/PreviewBubble'\r\nimport Controls from './components/ArtworkInfo/Controls'\r\n\r\nimport FilterTree from './components/TagsMenu/v2/FilterTree'\r\nimport Menu from './components/TagsMenu/v2/Menu';\r\n\r\n// import '../../css/frontEndMain.css'\r\n\r\nArray.from(document.getElementsByTagName(\"h4\")).forEach(item => {\r\n    item.style.whiteSpace = \"normal\"\r\n})\r\nexport default class FrontEndIndex extends React.Component{\r\n    static contextType = Context;\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            imgSelectLoaded: document.querySelectorAll(\".FilePreview--imageContainer\")\r\n        }\r\n    }\r\n    spreadLetters = (title) => {\r\n        let letters = Array.from(title).map((letter, index) => {\r\n            return <div key={`${title}-leter-${index}`} className=\"title-letter white-font\">{letter}</div>\r\n        })\r\n        return letters\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Context.Consumer>\r\n                {() => {\r\n                    return (\r\n                    // <div className=\"app-container\">\r\n                        <div \r\n                            className=\"frontEndIndex-container\"\r\n                        >\r\n                        {/* <TagsMenu context={this.context}>\r\n                        </TagsMenu> */}\r\n                        {/* <FilterTree \r\n                            context={this.context}\r\n                            categoriesData={this.context.state.categoriesData}\r\n                        /> */}\r\n                        <Menu\r\n                            context={this.context}\r\n                            categoriesData={this.context.state.categoriesData}\r\n                        />\r\n\r\n                        <div \r\n                        id=\"images\" \r\n                        // className=\"images-container\"\r\n                        className={this.context.state.mobile ? \"images-container\"  : \"images-container images-grid\" }\r\n                        >\r\n                            <ImageSelect \r\n                                data={this.context.state.artworkInfoData} \r\n                                mobile={this.context.state.mobile}\r\n                                state={this.context.state}\r\n                                context={this.context}\r\n                                // data={this.context.state.visibleArtwork}\r\n                                methods={{\r\n                                    enlarge: this.context.enlarge,\r\n                                    loadEnlarge: this.context.loadEnlarge,\r\n                                    toggleMobile: this.context.toggleMobile,\r\n                                    lazyLoad: this.context.lazyLoadImages\r\n                                }}\r\n                            />\r\n                            <Enlarge \r\n                                nextEnlarge={this.context.state.nextEnlarge}\r\n                                file={this.context.state.enlarge}\r\n                                onClick={this.context.closeEnlarge}\r\n                                artworkInfoData={this.context.state.artworkInfoData}\r\n                                loadEnlarge={this.context.loadEnlarge}\r\n                                closeEnlarge={this.context.closeEnlarge}\r\n                                hideArtworkInfo={this.context.hideArtworkInfo}\r\n                                context={this.context}\r\n                                mobile={this.context.state.mobile}\r\n                            />\r\n                        </div>\r\n                        {!this.context.state.mobile ? \r\n                        <Nav context={this.context}/> :   null }\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Provider } from './FrontEndProvider';\r\n\r\nimport FrontEndIndex from './FrontEndIndex'\r\n\r\nexport default class FrontEndContext extends React.Component{\r\n    render(){\r\n        const props = {...this.props}\r\n        return(    \r\n            <Provider>\r\n                <Fragment>\r\n                    <FrontEndIndex props={props}/>\r\n                </Fragment>\r\n            </Provider>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class BootstrapModal extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: props.showModal,\r\n            setShow: false\r\n        }\r\n        this.handleClose = () => this.setState({setShow: false, show: false}, console.log(this.state));\r\n        this.handleShow = () => this.setState({setShow: true, show: true});\r\n    }\r\n\r\n    static getDerivedStateFromProps(props){\r\n        if(props.showModal){\r\n            return{show: true}\r\n        }\r\n        else{\r\n            return {show:false}\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n\r\n                <Modal.Body>\r\n                {this.props.message}\r\n                {this.props.children}\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    {this.props.confirm ?\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={() => {\r\n                            this.props.confirmedAction()\r\n                            }\r\n                        }   \r\n                        >\r\n                            Confirm\r\n                    </Button> :\r\n                    null  \r\n                    }\r\n                    <Button variant={this.props.confirm ? \"danger\" : \"success\"} onClick={ () => {this.props.onClose()}}>\r\n                        {this.props.confirm ? \"Cancel\" : \"Okay\"}\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n            </>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport BootstrapModal from './Admin/components/BootstrapModal'\r\nimport auth from './Auth'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\n// import FilePreview from './FilePreview'\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport class Provider extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n        fileData: {\r\n            files: {},\r\n            column: {\r\n                id: 'column-1',\r\n                fileIds: []\r\n            },\r\n            columnOrder: ['column-1']\r\n        },\r\n        familySetupData: {\r\n            useFamilySetup: false,\r\n            artworkFamily: null,\r\n            familyDescription: null,\r\n            location: null,\r\n            year: null,\r\n            seeAlso: [],\r\n            themes: [],\r\n            category: {},\r\n            displayTriggers: {category: [], subcategory: [], listitems: [], themes: [], year: \"\", location: \"\"}\r\n        },\r\n        relatedArtwork: {},\r\n        categoriesData: [],\r\n        seeAlsoData: {renderFiles: {fileNames: []}},\r\n        themesData: [],\r\n        artworkFamilyList: [],\r\n        serverFileDir: [],\r\n        showModal: false,\r\n    }\r\n        \r\n    this.changeFileName = (e) => {\r\n        let nameWithFileType = `${e.target.value.split('.')[0]}.${this.state.fileType.split('/')[1]}`\r\n        this.setState({ fileName: nameWithFileType, filePath: `uploads/${nameWithFileType}` })\r\n    }\r\n\r\n    this.onChange = (e, key, fileName) => {\r\n        console.log(\"onchange\")\r\n        console.log(e.target.value ? e.target.value : e.target.innerHTML)\r\n        let target = null\r\n        let newState = {...this.state}\r\n        if(fileName){\r\n            target = newState.fileData.files[fileName]\r\n            console.log(newState.fileData.files[fileName])\r\n        }\r\n        else{\r\n            target = newState.familySetupData\r\n        }\r\n\r\n        if(!target[key]){\r\n            target[key] = []\r\n        }\r\n        const inputValue = e.target.value ? e.target.value : e.target.textContent\r\n        // target[key] = [...target[key], inputValue]\r\n        target[key] = inputValue\r\n        this.setState(newState)\r\n    } \r\n    this.inputFamilyDescription = (value) => {\r\n        let newState = {...this.state}\r\n        newState.familySetupData.familyDescription = value\r\n        this.setState(newState)\r\n    }\r\n    //adds new family name/theme\r\n    this.addNew = (e, id, router, requestKey, stateKey, callback) => {\r\n\r\n        e.preventDefault();\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const newAddition = document.getElementById(id).value;\r\n            if(!this.verify().verified){\r\n                console.log(\"requestKey\")\r\n                console.log(requestKey)\r\n                console.log(\"stateKey\")\r\n                console.log(stateKey)\r\n                let newState = {...this.state}\r\n                if(newState[stateKey].includes(newAddition)){\r\n                    return reject()\r\n                }\r\n                newState[stateKey] = [...newState[stateKey], newAddition]\r\n                this.setState(newState, resolve({modalMessage: \"State updated.\"})) \r\n                return\r\n            }\r\n            if(requestKey === \"artworkFamily\"){\r\n                // promise = \r\n                console.log(requestKey)\r\n                    axios.post(router, {[requestKey]: newAddition})\r\n                    .then( res => {\r\n                        console.log(\"res\")\r\n                        console.log(res)\r\n                        let addition = res.data[requestKey]\r\n                          if(callback){\r\n                              callback(\"Successfully recored\")\r\n                          }\r\n                        // this.setState({ [stateKey]: [...this.state[stateKey], newAddition]}, () => {\r\n                        //   if(callback){\r\n                        //       callback(\"Successfully recored\")\r\n                        //   }\r\n                        let newState = {...this.state}\r\n                        // newState[stateKey] = [...newState[stateKey], newAddition]\r\n                        // newState.artworkFamilyList = [...newState.artworkFamilyList, newAddition]\r\n                        newState.familySetupData.artworkFamily = newAddition\r\n                        this.setState(newState, () => resolve())\r\n                      })\r\n                      .catch( err => {\r\n                          console.log(\"error!!!\")\r\n                          console.log(err.toJSON())\r\n                          if(callback){\r\n                            callback(err.toString())\r\n                            // callback(err.toString())\r\n                            }\r\n                          reject(err)\r\n                      })\r\n            }\r\n            else{\r\n                console.log(requestKey)\r\n                // promise = \r\n                    axios.put(router, {[requestKey]: newAddition})\r\n                    .then( res => {\r\n                        console.log(\"______________________________\")\r\n                        console.log(res)\r\n                        console.log(\"______________________________\")\r\n                        this.setState({ [stateKey]: [...this.state[stateKey], newAddition]}, () => {\r\n                          if(callback){\r\n                              callback(res.data)\r\n                              resolve()\r\n                          }\r\n                          else{\r\n                              resolve()\r\n                          }\r\n                        //   let newState = {...this.state}\r\n                        //   newState[stateKey] = [...newState[stateKey], newAddition]\r\n                        //   this.setState(newState, () => resolve())\r\n                        })\r\n                      })\r\n                      .catch( err => {\r\n                          console.log(\"error!!!\")\r\n                          console.log(err.toJSON())\r\n                          if(callback){\r\n                            callback(`Theme ${newAddition} has already been recorded`)\r\n                            }\r\n                          reject()\r\n                      })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    this.deleteTheme = (theme) => {\r\n        console.log(\"deleteTheme runs\")\r\n        return new Promise((resolve, reject) => {\r\n            if(!this.verify().verified){\r\n                console.log(\"NOT verified\")\r\n                let newState = {...this.state}\r\n                newState.themesData = newState.themesData.filter(oldtheme => oldtheme !== theme )\r\n                this.setState(newState, () => resolve({modalMessage: \"State updated.\"}))\r\n            }\r\n            else{\r\n                console.log(\"run api/themes/delte\")\r\n                console.log(`theme: ${theme}`)\r\n                axios.put('/api/themes/delete', {\"list\": theme})\r\n                    .then(res => {\r\n                        console.log(\"themee deleted\")\r\n                        let newState = {...this.state}\r\n                        newState.themesData = newState.themesData.filter(oldtheme => oldtheme !== theme )\r\n                        console.log(\"newState.themesData\")\r\n                        console.log(newState.themesData)\r\n                        this.setState(newState, () => {\r\n                            resolve()\r\n                        })\r\n                    })\r\n                    .catch(err => reject())\r\n            }\r\n        })\r\n    }\r\n\r\n    //creates an array of all files in the server uploads folder\r\n    /**\r\n     * @returns \r\n     */\r\n    this.readImageDir = () => {\r\n        return new Promise ((resolve, reject) => {\r\n            axios.get('/fetchImages')\r\n            .then(res => {\r\n                console.log(res)\r\n                resolve(res)\r\n                // this.setState({serverFileDir: res.data})\r\n            })\r\n            .catch(err => {console.log(\"readImageDir failed\"); console.log(err); reject(err)})\r\n        })\r\n    }\r\n\r\n    //this takes care of CATEGORIES used for navigation\r\n    this.categoryMethods = {\r\n\r\n        getCategoryNames: () => {\r\n\r\n            let categoryDomList = Object.keys(this.state.categoriesOptionList.data).map(name => {\r\n                return <option key={`add-category-${name}`} value={name}>{name}</option>\r\n            })\r\n\r\n            let newState = {...this.state}\r\n            newState.categoriesOptionList.DOM = {}\r\n            newState.categoriesOptionList.DOM.categories = categoryDomList\r\n            this.setState(newState)\r\n        },\r\n\r\n        getSubcategoryNames: () => {\r\n            let newState = {...this.state}\r\n\r\n            if(!newState.categoriesOptionList.DOM){\r\n                newState.categoriesOptionList.DOM = {}\r\n            }\r\n\r\n            let subCategoryDomList = []\r\n            let optGroups = null\r\n        \r\n            if(document.getElementById(\"add-category\").value){\r\n                if(Object.keys(this.state.categoriesOptionList.data).includes(document.getElementById(\"add-category\").value)){\r\n                    console.log('input has value')\r\n                    let selectedCategory = document.getElementById(\"add-category\").value;\r\n    \r\n                    subCategoryDomList = this.state.categoriesOptionList.data[selectedCategory].map(subcategory => {\r\n                        return <option key={`add-subcategory-${subcategory}`} value={subcategory}>{subcategory}</option>\r\n                    })\r\n                }\r\n            }\r\n            else{\r\n                optGroups = []\r\n                optGroups = Object.keys(this.state.categoriesOptionList.data).map(cat => {\r\n                    return <optgroup key={cat} label={cat}>\r\n                        {this.state.categoriesOptionList.data[cat].map(subCat => {\r\n                            return <option key={`add-subcategory-${subCat}`} value={subCat}>{subCat}</option>\r\n                        })}\r\n                    </optgroup>\r\n                })\r\n            }\r\n            console.log(optGroups)\r\n            newState.categoriesOptionList.DOM.subCategories = subCategoryDomList\r\n            if(optGroups){\r\n                newState.categoriesOptionList.DOM.subCategories = optGroups\r\n            }\r\n            this.setState(newState)\r\n            \r\n        },\r\n\r\n        submitNewCategory: () => {\r\n            return new Promise((resolve, reject) => {\r\n                console.log(\"submitNew\")\r\n    \r\n                const categoryInput = document.getElementById(\"add-category\")\r\n                const subcategoryInput = document.getElementById(\"add-subcategory\")\r\n                const listitemInput = document.getElementById(\"add-listitem\")\r\n                \r\n                if(!categoryInput.value || categoryInput.value === \"\" || categoryInput.value === \" \"){\r\n                    reject({modalMessage: \"Action failed. Cannot submit empty value.\"})\r\n                }\r\n\r\n                let reqBody = {category: categoryInput.value, subcategory: {}}\r\n                //IF THE VALUE DOES NOT EXIST IN THE CATEGORYNAMES ARRAY IE IS NEW\r\n                    if(subcategoryInput.value){\r\n                        reqBody.subcategory = {[subcategoryInput.value]: []}\r\n                    }\r\n                    else{reqBody.subcategory = {}}\r\n                    if(listitemInput.value){\r\n                        reqBody.subcategory[subcategoryInput.value] = [listitemInput.value]\r\n                    }\r\n                    else{\r\n                        reqBody.subcategory[subcategoryInput.value] = []\r\n                    }\r\n\r\n                    console.log(\"reqBody\")\r\n                    console.log(reqBody)\r\n\r\n                    if(!this.verify({customGuestMessage: true}).verified){\r\n                        let newState = {...this.state}\r\n                        newState.categoriesData.push(reqBody)\r\n                        return this.setState(newState, resolve({modalMessage: \"State updated\"}))\r\n                    }\r\n                    else{\r\n                        axios.post('/api/categories/create', reqBody)\r\n                        .then(res => {\r\n                            let newState = {...this.state}\r\n                            newState.categoriesData = [...newState.categoriesData, res.data]\r\n                            newState.categoriesOptionList.data = {...newState.categoriesOptionList.data, [categoryInput.value]:[]}\r\n                            this.setState(newState, resolve({modalMessage: \"New category registered.\"}))\r\n                        })\r\n                        .catch(err => {console.log(err); reject({modalMessage: \"Action failed.\"})})\r\n                    }\r\n            })\r\n            \r\n        },\r\n        updateCategory: () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                const categoryInput = document.getElementById(\"add-category\")\r\n                const subcategoryInput = document.getElementById(\"add-subcategory\")\r\n                const listitemInput = document.getElementById(\"add-listitem\")\r\n    \r\n                const allCats = Object.values(this.state.categoriesData).map(obj => obj.category)\r\n    \r\n                //check if the CATGORY input value is already recorded in the database\r\n                //if it is run submitNewCategory method instead and exit this function\r\n                if(!allCats.includes(categoryInput.value)){\r\n                    this.categoryMethods.submitNewCategory()\r\n                        .then(res => resolve({modalMessage: \"New category registered.\"}))\r\n                        .catch(err => reject({modalMessage: \"Action failed.\"}))\r\n                    return\r\n                }\r\n    \r\n                //if category name already exists\r\n                let objToUpdate = this.state.categoriesData.find(obj => obj.category === categoryInput.value)\r\n                let objIndex = this.state.categoriesData.indexOf(objToUpdate)\r\n    \r\n    \r\n                let categoriesDataUpdate = {...this.state.categoriesData}\r\n                let subcategoryArray = categoriesDataUpdate[objIndex].subcategory[subcategoryInput.value]\r\n                //if subcategory doesnt exist, initiate it\r\n                if(!subcategoryArray){\r\n                    subcategoryArray = []\r\n                    categoriesDataUpdate[objIndex].subcategory[subcategoryInput.value] = subcategoryArray\r\n                }\r\n                //if new listitem has been entered\r\n                if(listitemInput.value){\r\n                    categoriesDataUpdate[objIndex].subcategory[subcategoryInput.value] = [...subcategoryArray, listitemInput.value];\r\n                }\r\n\r\n                if(!this.verify({customGuestMessage: true}).verified){\r\n                    let newState = {...this.state}\r\n                    newState.categoriesData[objIndex] = objToUpdate\r\n                    return this.setState(newState, resolve({modalMessage: \"State updated.\"}))\r\n                }\r\n                else{\r\n                    axios.put('/api/categories/update', objToUpdate)\r\n                        .then(res => {\r\n                            let newState = {...this.state}\r\n                            newState.categoriesData[objIndex] = res.data\r\n                            this.setState(newState, resolve({modalMessage: \"Database updated.\"}))\r\n                            })\r\n                        .catch(err => reject({modalMessage: \"Action failed.\"}))\r\n                }\r\n            })\r\n        },\r\n        deleteCategory: (categoryName, updateContent, deletedItem) => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                if(!this.verify({customGuestMessage: true}).verified){\r\n                    \r\n                    let newState = {...this.state}\r\n                    const deletetedCategoryIndex = newState.categoriesData.indexOf(deletedItem.category)\r\n\r\n                    //if category is deleted\r\n                    if(!updateContent){\r\n                        newState.categoriesData = newState.categoriesData.filter(obj => obj.category !== deletedItem.category)\r\n                    }\r\n                    //if subcategory or listitem is deleted\r\n                    else{\r\n                        newState.categoriesData.splice(deletetedCategoryIndex, 1, updateContent)\r\n                    }\r\n                    return this.setState(newState, resolve({modalMessage: \"State updated.\"}))\r\n                }\r\n\r\n                else{\r\n                    axios.put('/api/categories/delete', {categoryName, updateContent})\r\n                        .then(res => {\r\n    \r\n                            let newState = {...this.state}\r\n                            const categoryObj = newState.categoriesData.find(category => category.category === categoryName)\r\n                            const categoryIndex = newState.categoriesData.indexOf(categoryObj)\r\n                            //delete category\r\n                            if(!deletedItem.subcategory){\r\n                                newState.categoriesData = newState.categoriesData.filter(category => category.category !== categoryName)\r\n                                res.modalMessage = <span>Category <strong>{deletedItem.category}</strong> deleted.</span>\r\n                            }\r\n                            //delete listitem\r\n                            else if(deletedItem.listitem){\r\n                                let newArray = newState.categoriesData[categoryIndex].subcategory[deletedItem.subcategory]\r\n                                newState.categoriesData[categoryIndex].subcategory[deletedItem.subcategory] = newArray.filter(listItem => listItem !== deletedItem.listitem)\r\n                            res.modalMessage = <span>Listitem <strong>{deletedItem.listitem}</strong> deleted from <strong>{deletedItem.subcategory}</strong> subcategory in <strong>{deletedItem.category}</strong> category.</span>\r\n                            }\r\n                            //delete subcategory\r\n                            else if(deletedItem.subcategory && !deletedItem.listitem){\r\n                                delete newState.categoriesData[categoryIndex]\r\n                                newState.categoriesData[categoryIndex] = res.data\r\n                                res.modalMessage = <span>Subcategory <strong>{deletedItem.subcategory}</strong> deleted from <strong>{deletedItem.category}</strong> category.</span>\r\n                            }\r\n                            this.setState(newState, () => {\r\n                                resolve(res)\r\n                            })\r\n                        })\r\n                        .catch(err => {\r\n                            err.modalMessage = \"Action failed\"\r\n                            reject(err)\r\n                        })\r\n                }\r\n            })\r\n        },\r\n        autoCheckCategories: (fileName, category, subcategory, listitem) => {\r\n\r\n            let statePath = this.state.familySetupData.category\r\n\r\n            if(fileName){\r\n                statePath = this.state.fileData.files[fileName].category\r\n            }\r\n\r\n            if(listitem){\r\n                if(!statePath){return}\r\n                if(statePath[category]){\r\n                    if(statePath[category][subcategory]){\r\n                        if(statePath[category][subcategory].includes(listitem)){\r\n                            return true\r\n                        } \r\n                        else{\r\n                            return false\r\n                        }\r\n                    }\r\n                    return false\r\n                }\r\n                return false\r\n            }\r\n\r\n            if(subcategory){\r\n                if(!statePath){return}\r\n                if(statePath[category]){\r\n                    if(statePath[category][subcategory]){\r\n                        return true\r\n                    }\r\n                    else{\r\n                        return false\r\n                    }\r\n                }\r\n                return false\r\n            }\r\n\r\n            if(category){\r\n                if(!statePath){return}\r\n                if(statePath[category]){\r\n                        return true\r\n                    }\r\n                    else{\r\n                        return false\r\n                    }\r\n            }    \r\n        },\r\n        onCheck: (e, fileName) => {\r\n\r\n            let statePath = this.state.familySetupData\r\n            \r\n            if(fileName){\r\n                statePath = this.state.fileData.files[fileName]\r\n                if(!this.state.fileData.files[fileName].category){\r\n                    this.state.fileData.files[fileName].category = {}\r\n                }\r\n            }\r\n    \r\n            const listItemPath = (category, subcategory, newListitems, fileName) => {\r\n                let newState = {}\r\n    \r\n                if(fileName){\r\n                    newState = {\r\n                        ...this.state,\r\n                       fileData: {\r\n                           ...this.state.fileData,\r\n                           files: {\r\n                               ...this.state.fileData.files,\r\n                               [fileName]: {\r\n                                    ...this.state.fileData.files[fileName],\r\n                                    category: {\r\n                                        ...this.state.fileData.files[fileName].category,\r\n                                            [category]: {\r\n                                                ...this.state.fileData.files[fileName].category[category],\r\n                                                [subcategory]: newListitems\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }                        \r\n                    }\r\n    \r\n                    else{\r\n    \r\n                        newState = {\r\n                            ...this.state,\r\n                            familySetupData: {\r\n                                ...this.state.familySetupData,\r\n                                category: {\r\n                                    ...this.state.familySetupData.category,\r\n                                    [category]: {\r\n                                        ...this.state.familySetupData.category[category],\r\n                                        [subcategory]: newListitems\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return newState\r\n            }\r\n    \r\n            const categoryPath = (newCategory, fileName) => {\r\n                let newState = {}\r\n    \r\n                    if(fileName){\r\n                        newState = { \r\n                                ...this.state,\r\n                                fileData:{\r\n                                    ...this.state.fileData,\r\n                                    files: {\r\n                                        ...this.state.fileData.files,\r\n                                        [fileName]: {\r\n                                            ...this.state.fileData.files[fileName],\r\n                                            category: {\r\n                                                ...this.state.fileData.files[fileName].category,\r\n                                                [newCategory]:{}\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } \r\n                            }\r\n                        }\r\n    \r\n                    else{\r\n                        newState = { \r\n                            ...this.state,\r\n                            familySetupData:{\r\n                                ...this.state.familySetupData,\r\n                                category: {\r\n                                    ...this.state.familySetupData.category, [newCategory]:{}\r\n                                    } \r\n                                }\r\n                            }\r\n                    }\r\n                    return newState\r\n            }\r\n    \r\n            const subcategoryPath = (newCategory, newSubcategory, fileName) => {\r\n                let newState = {}\r\n    \r\n                if(fileName){\r\n                    newState = { \r\n                            ...this.state,\r\n                            fileData:{\r\n                                ...this.state.fileData,\r\n                                files: {\r\n                                    ...this.state.fileData.files,\r\n                                    [fileName]: {\r\n                                        ...this.state.fileData.files[fileName],\r\n                                        category: {\r\n                                            ...this.state.fileData.files[fileName].category,\r\n                                            [newCategory]:{ \r\n                                                ...this.state.fileData.files[fileName].category[newCategory],\r\n                                                [newSubcategory]: []\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } \r\n                        }\r\n                    }\r\n    \r\n                else{\r\n                    newState = { \r\n                        ...this.state,\r\n                        familySetupData:{\r\n                            ...this.state.familySetupData,\r\n                            category: {\r\n                                ...this.state.familySetupData.category, \r\n                                [newCategory]:{\r\n                                    ...this.state.familySetupData.category[newCategory],\r\n                                    [newSubcategory]: []\r\n                                }\r\n                            } \r\n                        }\r\n                    }\r\n                }\r\n                return newState\r\n            }\r\n    \r\n            //this is handled if a checkbox is UNCHECKED\r\n            if(!e.target.checked){\r\n                let classname = e.target.classList[1]\r\n                let checkboxId = e.target.value\r\n                let subcategory = null\r\n                let category = null\r\n                let listItemNest = null\r\n                let newListitems = null\r\n                let stateCopy = {...statePath}\r\n                let newState = {...this.state}\r\n                let target = null\r\n\r\n                if(fileName){\r\n                    target = newState.fileData.files[fileName].displayTriggers\r\n                }\r\n                else{ target = newState.familySetupData.displayTriggers}\r\n    \r\n                if(classname === \"listitem\"){\r\n                    subcategory = e.target.parentNode.parentNode.id\r\n                    category = e.target.parentNode.parentNode.parentNode.id\r\n                    listItemNest = statePath.category[category][subcategory]\r\n                    newListitems = listItemNest.filter(item => item !== checkboxId)\r\n    \r\n                    newState = listItemPath(category, subcategory, newListitems, fileName)\r\n\r\n                    target[classname] = newListitems\r\n                }\r\n                else if (classname === \"subcategory\"){\r\n                    category = e.target.parentNode.parentNode.parentNode.id\r\n    \r\n                    delete stateCopy.category[category][checkboxId]\r\n                    Array.from(document.getElementById(checkboxId).getElementsByTagName('input'))\r\n                        .forEach(item => item.checked = false)\r\n                        if(fileName){\r\n                            newState = {\r\n                                fileData: {\r\n                                    ...this.state.fileData,\r\n                                    files: {\r\n                                        ...this.state.fileData.files,\r\n                                        [fileName]: {\r\n                                            ...this.state.fileData.files[fileName],\r\n                                            category: stateCopy.category\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else{\r\n                            newState = {\r\n                                familySetupData: {\r\n                                    ...this.state.familySetupData,\r\n                                    category: stateCopy.category\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    const listitemsToRemove =  this.state.categoriesData.filter(obj => obj.category === category)[0].subcategory[checkboxId]\r\n                    target.listitems = target.listitems.filter(trigger => !listitemsToRemove.includes(trigger)) \r\n                    target[classname] = target[classname].filter(trigger => trigger !== checkboxId)\r\n                }\r\n                else if (classname === \"category\"){\r\n                    category = e.target.parentNode.parentNode.id\r\n                    delete stateCopy.category[category]\r\n                    Array.from(document.getElementById(category).getElementsByTagName('input'))\r\n                        .forEach(item => item.checked = false)\r\n                        if(fileName){\r\n                            newState = {\r\n                                fileData: {\r\n                                    ...this.state.fileData,\r\n                                    files: {\r\n                                        ...this.state.fileData.files,\r\n                                        [fileName]: {\r\n                                            ...this.state.fileData.files[fileName],\r\n                                            category: stateCopy.category\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else{\r\n                            newState = {\r\n                                familySetupData: {\r\n                                    ...this.state.familySetupData,\r\n                                    category: stateCopy.category\r\n                                }\r\n                            }\r\n                        }\r\n                    \r\n                    let subcategoriesValues =  Object.values(this.state.categoriesData.filter(obj => obj.category === category)[0].subcategory)\r\n                    \r\n                    let listitemsToRemove = subcategoriesValues.flat()\r\n\r\n                    target.listitems = target.listitems.filter(trigger => !listitemsToRemove.includes(trigger)) \r\n                    target[classname] = target[classname].filter(trigger => trigger !== category)\r\n                    target.subcategory = target.subcategory.filter(trigger => !this.state.categoriesOptionList.data[category].includes(trigger))\r\n                }\r\n                this.setState(newState)\r\n                return     \r\n            };\r\n    \r\n            //This creates checkbox trees and and values to it\r\n            const parentCheckbox = (target) => {\r\n                return Array.from(target.getElementsByTagName('input'))[0]; \r\n            };\r\n            const classNameCheck = (name) => {\r\n    \r\n                if(name === \"list--listitem\"){\r\n                    return e.target.parentNode.classList.contains(name)    \r\n                }\r\n                return e.target.parentNode.parentNode.classList.contains(name)\r\n            }\r\n    \r\n            let category = parentCheckbox(e.target.parentNode.parentNode.parentNode)\r\n            let subcategory = parentCheckbox(e.target.parentNode.parentNode)\r\n        \r\n            switch (true) {\r\n        \r\n            case classNameCheck('list--category'):\r\n                this.setState(categoryPath(category.value, fileName))\r\n            break;\r\n    \r\n            case classNameCheck('list--listitem'):\r\n                category = parentCheckbox(e.target.parentNode.parentNode.parentNode)\r\n                subcategory = parentCheckbox(e.target.parentNode.parentNode)\r\n    \r\n                const newListItem = e.target.value;\r\n                let newList = [newListItem]\r\n    \r\n                if(statePath.category){\r\n                    if(statePath.category[category.value]){\r\n                        if(statePath.category[category.value][subcategory.value]){\r\n                            if(statePath.category[category.value][subcategory.value].length > 0){\r\n                                newList = [...statePath.category[category.value][subcategory.value], newListItem]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.setState(listItemPath(category.value, subcategory.value, newList, fileName))\r\n            break;\r\n            \r\n            case classNameCheck('list--subcategory'):\r\n                this.setState(subcategoryPath(category.value, subcategory.value, fileName))\r\n            break;\r\n            default:\r\n                return\r\n            }\r\n        }\r\n    }\r\n    //this deal with file input uploads and uploads to server\r\n    this.fileDataMethods = {\r\n\r\n        deleteImage: (fileName) => {\r\n            axios.delete(`/deleteImage`, fileName)\r\n            .then(res => {\r\n                alert(res)\r\n            })\r\n        },\r\n        deleteDBrecord: (fileName, artworkFamily, cb) => {\r\n            return new Promise ((resolve, rej) => {\r\n                const file = this.state.artworkInfoData[fileName]\r\n                const paths = {\r\n                    \"mobilePath\": `file.mobilePath`,\r\n                    \"thumbnailPath\": `file.thumbnailPath`,\r\n                    \"desktopPath\": `file.desktopPath`\r\n                }\r\n                axios.delete(`/api/artworkInfo/delete/${fileName}`)\r\n                    .then(res => {\r\n                        axios.delete(`/deleteImage/delete/${fileName}`, paths)\r\n                        .then(res => {\r\n                            let relatedArtwork = {...this.state.relatedArtwork}\r\n                            delete relatedArtwork[artworkFamily].files[fileName]\r\n                            const fileIds = relatedArtwork[artworkFamily].column.fileIds\r\n                            let newFileIds = fileIds.filter(name => name !== fileName)\r\n                            relatedArtwork[artworkFamily].column.fileIds = newFileIds\r\n                            let artworkOnDisplay = this.state.artworkOnDisplay\r\n                            delete artworkOnDisplay[fileName]\r\n                            let artworkInfoData = this.state.artworkInfoData\r\n                            delete artworkInfoData[fileName]\r\n                            this.setState({relatedArtwork, artworkInfoData, artworkOnDisplay}\r\n                                , () => {\r\n                                    res.modalMessage = \"File and its DB record deleted\"\r\n                                    resolve(res)\r\n                                }\r\n                                )\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err)})\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            })\r\n        },\r\n        serverFileToState: (file) => {\r\n            return new Promise((resolve, reject) => {\r\n                if(!file){\r\n                    reject(\"file record not found\")\r\n                }\r\n                let newState = {...this.state}\r\n                newState.fileData.files = {...newState.fileData.files, [file.fileName]: file}\r\n                    if(!file.displayTriggers){\r\n                        newState.fileData.files[file.fileName].displayTriggers = {category: [], subcategory: [], listitems: [], themes: [], year: \"\", location: \"\"}\r\n                    }\r\n                this.setState(newState, () => {resolve(\"file transferred\")})\r\n            })\r\n        },\r\n        /**\r\n         * @param value the value to be added to state\r\n         * @param string the name of the family nest where the new value will be added\r\n         * @param fileName optional: decided which file to update with new value\r\n         * @returns updated context state\r\n         */\r\n        onChange: (value, string, fileName, cb) => {\r\n            let nestType = () => {\r\n                if(string === \"themes\"){\r\n                    return \"array\"\r\n                }\r\n                if(string !== \"year\" && string !== \"location\"){\r\n                    return \"category\"\r\n                }\r\n                else{ \r\n                    return \"string\"\r\n                }\r\n            }\r\n\r\n            let nestTypeResult = nestType()\r\n\r\n            let newState = {...this.state}\r\n\r\n            if(string === \"themes\"){\r\n                let newList = []\r\n                if(!newState.fileData.files[fileName][string]){\r\n                    newState.fileData.files[fileName][string] = []\r\n                }\r\n                if(!newState.fileData.files[fileName].displayTriggers[string]){\r\n                    newState.fileData.files[fileName].displayTriggers[string] = []\r\n                }\r\n                    if(this.state.fileData.files[fileName][string].includes(value)){\r\n                        newList = this.state.fileData.files[fileName][string].filter(item => item !== value)\r\n                    }\r\n                    else{\r\n                        newList = [...this.state.fileData.files[fileName][string], value]\r\n                    }\r\n                        // let newState = []    \r\n\r\n        \r\n                        newState = {\r\n                            ...this.state,\r\n                            fileData: {\r\n                                ...this.state.fileData,\r\n                                files: {\r\n                                    ...this.state.fileData.files,\r\n                                    [fileName]: {\r\n                                        ...this.state.fileData.files[fileName],\r\n                                        [string]: newList,\r\n\r\n                                        displayTriggers: {\r\n                                            ...this.state.fileData.files[fileName].displayTriggers, \r\n                                            [string]: newList\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            \r\n                        this.setState(newState, () => {\r\n                            if(cb){\r\n                                cb()\r\n                            }\r\n                        })\r\n                        return\r\n                    \r\n                \r\n            }\r\n\r\n            else if(string !== \"year\" && string !== \"location\"){\r\n                if(!newState.fileData.files[fileName].displayTriggers[string]){\r\n                    newState.fileData.files[fileName].displayTriggers[string] = []\r\n                }\r\n                    if(this.state.fileData.files[fileName].displayTriggers[string].includes(value)){\r\n                        // let newState = []    \r\n                        let newList = this.state.fileData.files[fileName].displayTriggers[string].filter(item => item !== value)\r\n        \r\n                        newState = {\r\n                            ...this.state,\r\n                            fileData: {\r\n                                ...this.state.fileData,\r\n                                files: {\r\n                                    ...this.state.fileData.files,\r\n                                    [fileName]: {\r\n                                        ...this.state.fileData.files[fileName],\r\n                                        displayTriggers: {\r\n                                            ...this.state.fileData.files[fileName].displayTriggers, \r\n                                            [string]: newList\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState(newState, () => {\r\n                            if(cb){\r\n                                cb()\r\n                            }\r\n                        })\r\n                        return\r\n                    }\r\n                }\r\n            else{   \r\n                          \r\n                newState = {\r\n                    ...this.state,\r\n                    fileData: {\r\n                        ...this.state.fileData,\r\n                        files: {\r\n                            ...this.state.fileData.files,\r\n                            [fileName]: {\r\n                                ...this.state.fileData.files[fileName],\r\n                                [string]: value,\r\n                                displayTriggers: {...this.state.fileData.files[fileName].displayTriggers, [string]: value}\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setState(newState)\r\n\r\n        },\r\n        onChangeDisplayTriggers: (value, string, fileName, familySetup, cb) => {\r\n            console.log(\"familySetup\")\r\n            console.log(familySetup)\r\n\r\n            let nestType = () => {\r\n                if(string !== \"year\" && string !== \"location\"){\r\n                    return \"themes\"\r\n                }\r\n                else{ \r\n                    return \"string\"\r\n                }\r\n            }\r\n\r\n            let nestTypeResult = nestType()\r\n\r\n            let newState = {...this.state}\r\n            let target = null\r\n            let nest = null\r\n            if(!familySetup){\r\n                target = newState.fileData.files[fileName]\r\n            }\r\n            else{\r\n                target = newState.familySetupData\r\n            }\r\n            if(!target.displayTriggers){\r\n                target.displayTriggers = {\r\n                    category: [],\r\n                    subcategory: [],\r\n                    listitems: [],\r\n                    themes: [],\r\n                    year: \"\",\r\n                    location: \"\"\r\n                }\r\n            }\r\n            nest = target.displayTriggers\r\n            if(nestTypeResult === \"themes\"){\r\n                let newList = []\r\n                if(!nest[string]){\r\n                    nest[string] = []\r\n                }\r\n                    if(nest[string].includes(value)){\r\n                        newList = nest[string].filter(item => item !== value)\r\n                    }\r\n                    else{\r\n                        newList = [...nest[string], value]\r\n                    }\r\n\r\n                        if(!familySetup){\r\n                            newState = {\r\n                                ...this.state,\r\n                                fileData: {\r\n                                    ...this.state.fileData,\r\n                                    files: {\r\n                                        ...this.state.fileData.files,\r\n                                        [fileName]: {\r\n                                            ...this.state.fileData.files[fileName],\r\n                                            displayTriggers: {\r\n                                                ...this.state.fileData.files[fileName].displayTriggers, \r\n                                                [string]: newList\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else{\r\n                            newState = {\r\n                                ...this.state,\r\n                                familySetupData: {\r\n                                    ...this.state.familySetupData,\r\n                                    displayTriggers: {\r\n                                        ...this.state.familySetupData.displayTriggers,\r\n                                        [string]: newList\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            \r\n                        this.setState(newState, () => {\r\n                            if(cb){\r\n                                cb()\r\n                            }\r\n                        })\r\n                        return\r\n                    \r\n                \r\n                    }\r\n            //if category, subcategory or listitems\r\n            else if(string !== \"year\" && string !== \"location\"){\r\n                if(!nest[string]){\r\n                    nest[string] = []\r\n                }\r\n                    if(this.nest[string].includes(value)){\r\n                        // let newState = []    \r\n                        let newList = nest[string].filter(item => item !== value)\r\n                        \r\n                        if(!familySetup){\r\n                            newState = {\r\n                                ...this.state,\r\n                                fileData: {\r\n                                    ...this.state.fileData,\r\n                                    files: {\r\n                                        ...this.state.fileData.files,\r\n                                        [fileName]: {\r\n                                            ...this.state.fileData.files[fileName],\r\n                                            displayTriggers: {\r\n                                                ...this.state.fileData.files[fileName].displayTriggers, \r\n                                                [string]: newList\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else{\r\n                            newState = {\r\n                                ...this.state,\r\n                                familySetupData: {\r\n                                    ...this.state.familySetupData,\r\n                                    displayTriggers: {\r\n                                        ...this.state.familySetupData.displayTriggers,\r\n                                        [string]: newList\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState(newState, () => {\r\n                            if(cb){\r\n                                cb()\r\n                            }\r\n                        })\r\n                        return\r\n                    }\r\n            }\r\n            //if year or location\r\n            else{\r\n                if(nest[string] === value){\r\n                    value = \"\"\r\n                }\r\n                if(!familySetup){\r\n                    newState = {\r\n                        ...this.state,\r\n                        fileData: {\r\n                            ...this.state.fileData,\r\n                            files: {\r\n                                ...this.state.fileData.files,\r\n                                [fileName]: {\r\n                                    ...this.state.fileData.files[fileName],\r\n                                    // [string]: value,\r\n                                    displayTriggers: {...this.state.fileData.files[fileName].displayTriggers, [string]: value}\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    newState = {\r\n                        ...this.state,\r\n                        familySetupData: {\r\n                            ...this.state.familySetupData,\r\n                            displayTriggers: {\r\n                                ...this.state.familySetupData.displayTriggers,\r\n                                [string]: value\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.setState(newState)\r\n        },\r\n        transferState: (file, radioValue, options) => {\r\n            let newState = {...this.state}\r\n\r\n            //on check\r\n            if(radioValue === true){\r\n                this.setState({showModal: true})\r\n\r\n                //overwrite file data witch each familySetUp property\r\n                Object.keys(this.state.familySetupData).forEach(property => {\r\n                    newState = {\r\n                        ...newState,\r\n                        fileData: {\r\n                            ...newState.fileData,\r\n                            files: {\r\n                                ...newState.fileData.files,\r\n                                [file.fileName]: {\r\n                                    ...newState.fileData.files[file.fileName],\r\n                                    [property]: this.state.familySetupData[property]\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                let newDisplayTriggers = {}\r\n                newDisplayTriggers.category = Object.keys(this.state.familySetupData.category)\r\n\r\n                const getSubcategories = () => {\r\n                    let categories = Object.keys(this.state.familySetupData.category)\r\n                    let subcategories = []\r\n                    categories.forEach(category => {\r\n                        subcategories = [...subcategories, ...Object.keys(this.state.familySetupData.category[category])]\r\n                    })\r\n                    return subcategories\r\n                }\r\n                newDisplayTriggers.subcategory = getSubcategories()\r\n\r\n                const getListitems = () => {\r\n                    const categories = Object.keys(this.state.familySetupData.category)\r\n                    let listItems = []\r\n                    categories.forEach(category => {\r\n                        let subcategories = Object.keys(this.state.familySetupData.category[category])\r\n                        subcategories.forEach(sub => {\r\n                            if(!this.state.familySetupData.category[category][sub].length > 0){return}\r\n                            listItems = [...listItems, ...this.state.familySetupData.category[category][sub]]\r\n                        })\r\n                    })\r\n                    return listItems\r\n                }\r\n                newDisplayTriggers.listitems = getListitems()\r\n\r\n                newDisplayTriggers.themes = this.state.familySetupData.themes\r\n\r\n                newDisplayTriggers.year = this.state.familySetupData.year\r\n                newDisplayTriggers.location = this.state.familySetupData.location    \r\n\r\n                newState.fileData.files[file.fileName].displayTriggers = newDisplayTriggers\r\n\r\n                const relatedArtworkPromise = this.familySetupMethods.getRelatedArtwork(newState.fileData.files[file.fileName].artworkFamily, newState)\r\n\r\n                relatedArtworkPromise.then(res => {\r\n                    newState.relatedArtwork = {...newState.relatedArtwork, [newState.fileData.files[file.fileName].artworkFamily]: res}\r\n                    newState.fileData.files[file.fileName].relatedArtwork = res\r\n                    newState.fileData.files[file.fileName].useFamilySetup = true\r\n                    delete newState.fileData.files[file.fileName]._id\r\n                    delete newState.fileData.files[file.fileName].__v\r\n                    this.setState(newState, this.setState({showModal: false})\r\n                    )\r\n                })\r\n            }\r\n\r\n            else{\r\n                axios.get(`/api/familySetup/none`)\r\n                    .then(res => {\r\n                        let newFamInfo = res.data\r\n                        delete newFamInfo.__v\r\n                        delete newFamInfo._id\r\n\r\n                        const currentInfo = this.state.fileData.files[file.fileName]\r\n                        let newFileInfo = {...currentInfo}\r\n                        \r\n                        Object.keys(newFamInfo).forEach(propertyName => {\r\n                            newFileInfo[propertyName] = newFamInfo[propertyName]\r\n                        })\r\n                        newFileInfo.useFamilySetup = false\r\n\r\n                        newState.fileData.files[file.fileName] = newFileInfo\r\n                        this.setState(newState)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n\r\n                this.setState(newState)\r\n            }\r\n        },\r\n        isChecked: (string, value, fileName) => {\r\n            if(this.state.fileData.files[fileName][string].includes(value)){\r\n                return true\r\n            }\r\n            else return false\r\n        },\r\n        //This iss triggered upon upload files using file upload input\r\n        addFileToState: (e) => {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const fileInput = e.target.files\r\n                const fileCount = fileInput.length\r\n                let filename = null\r\n    \r\n                let obj = {\r\n                    files: {},\r\n                    column: {\r\n                        id: 'column-1',\r\n                        fileIds: []\r\n                    },\r\n                    columnOrder: ['column-1']\r\n                }\r\n                let newState = {...this.state}\r\n                let objCounter = 0;\r\n    \r\n                    let objPromise = new Promise ((resolve, reject) => {\r\n                        let messages = {}\r\n\r\n                        const fileList = Array.from(fileInput)\r\n                        let filteredList = []\r\n                        fileList.forEach(file => {\r\n                            if(this.state.fileData.column.fileIds.includes(file.name)){\r\n                                console.log(\"error\")\r\n                                messages = {...messages, [file.name]: `Fail (already selected)`}\r\n                            }\r\n                            else if(this.state.serverFileDir.includes(file.name)){\r\n                                console.log(\"error\")\r\n                                messages = {...messages, [file.name]: `Fail (already uploaded)`}\r\n                            }\r\n                            else if(file.name.includes(\" \") || file.name.includes(\"/\")){\r\n                                console.log(\"error\")\r\n                               messages = {...messages, [file.name]: \"Fail (File name cannot contain spaces or '/')\"}\r\n                            }\r\n                            else if(file.type.match(\"application/pdf\")){\r\n                                console.log(\"error\")\r\n                                messages = {...messages, [file.name]: 'Fail (PDF not supported yet)'}\r\n                            }\r\n                            else{\r\n                                filteredList = [...filteredList, file]\r\n                            }\r\n                        })\r\n\r\n                        if(filteredList.length < 1){\r\n                            let modalMessages = Object.keys(messages).map(fileName => {\r\n                                return <div key={`fileUpload-${fileName}`}>\r\n                                            <em>{fileName}</em>\r\n                                            <p>{messages[fileName]}</p>\r\n                                        </div>\r\n                            })\r\n                            document.getElementById(\"uploadFileInput\").value = \"\"\r\n                            reject(modalMessages)\r\n                        }\r\n                        \r\n                        filteredList.forEach((file, index) => {\r\n                        const reader = new FileReader();\r\n                            reader.onload = () => {\r\n\r\n                                    var image = new Image()\r\n\r\n                                    image.src = reader.result;\r\n\r\n                                    image.onload = () => {\r\n                                        let naturalSize = {naturalHeight: image.naturalHeight, naturalWidth: image.naturalWidth}\r\n\r\n                                        obj.files[file.name] = {                    \r\n                                            preview: reader.result,\r\n                                            file: fileInput[index],\r\n                                            fileName: file.name, \r\n                                            fileType: file.type,\r\n                                            familyDisplayIndex: null,\r\n                                            src: `uploads/${file.name}`,\r\n                                            themes: [],\r\n                                            seeAlso: [],\r\n                                            category: {\"studio\": {\"misc\": []}},\r\n                                            displayTriggers: {\"category\": [], \"subcategory\": [], \"listitems\": []},\r\n                                            artworkFamily: \"none\",\r\n                                            naturalSize\r\n                                        }    \r\n        \r\n                                        newState = {\r\n                                            ...this.state, \r\n                                            fileData: {\r\n                                                ...this.state.fileData,\r\n                                                files: {...newState.fileData.files, [file.name]: obj.files[file.name]},\r\n                                                column: {...newState.fileData.column, fileIds: [...newState.fileData.column.fileIds, file.name]}\r\n                                            },\r\n                                            relatedArtwork: {\r\n                                                ...this.state.relatedArtwork,\r\n                                                \"none\": {\r\n                                                    ...this.state.relatedArtwork.none,\r\n                                                    files: {...newState.relatedArtwork.none.files, [file.name]: obj.files[file.name]},\r\n                                                    column: {...newState.relatedArtwork.none.column, fileIds: [...newState.relatedArtwork.none.column.fileIds, file.name]}\r\n                                                }\r\n                                            }\r\n                                        } \r\n\r\n                                        newState.artworkInfoData = {...newState.artworkInfoData, [file.name]: obj.files[file.name]}\r\n                                        messages =  {...messages, [file.name]: \"Success\"}\r\n                                        objCounter += 1    \r\n                                        console.log(\"objCounter\")\r\n                                        console.log(objCounter)\r\n                                        if(objCounter === filteredList.length){\r\n                                            console.log(\"objCounter === fileCount\")\r\n                                            let modalMessages = Object.keys(messages).map(fileName => {\r\n                                                return <div key={`fileUpload-${fileName}`}>\r\n                                                            <strong>{fileName}:</strong>\r\n                                                            <p className=\"subtitle\">{messages[fileName]}</p>\r\n                                                        </div>\r\n                                            })\r\n                                            resolve(modalMessages)\r\n                                            // resolve(messages)\r\n                                        }\r\n                                    }\r\n                            }       \r\n                            \r\n                            reader.readAsDataURL(file)       \r\n                        })\r\n                })\r\n            \r\n                objPromise\r\n                    .then(res => {\r\n                        this.setState(newState, () => resolve(res))\r\n                    })\r\n                    .catch(err => reject(err))\r\n            })\r\n\r\n        },\r\n        //THIS UPLOADS FILE TO SERVER\r\n        uploadFile: (fileName) => {\r\n            return new Promise((resolve, reject) => {\r\n                const fileData = this.state.fileData.files\r\n    \r\n                const fd = new FormData();\r\n                fd.append('artworkImage', fileData[fileName].file, fileData[fileName].artwrokTitle || fileData[fileName].fileName)\r\n    \r\n                axios.post('/api/artworkInfo/imageUpload', fd)\r\n                    .then(res => {\r\n                        console.log(\"og image uploaded\")\r\n                        axios.post(`/resize/${fileName}`)\r\n                        .then(res => { \r\n                            this.readImageDir()\r\n                                .then(res => {\r\n                                    return resolve(\"uploads folder successfully read\")\r\n                                })\r\n                        })\r\n                        .catch(err => {console.log(\"upload file fail\"); console.log(err); reject(err)})\r\n                    })\r\n            })\r\n\r\n            //     if(this.state.serverFileDir.includes(fileName)){\r\n            //         resolve()\r\n            //     }\r\n            // })\r\n        },\r\n        //Removes selected file from state and thus DOM\r\n        removeFile: (fileName, familyName) => {\r\n\r\n            if(document.getElementById(\"uploadFileInput\")){\r\n                document.getElementById(\"uploadFileInput\").value = \"\"\r\n            }\r\n        \r\n            let newFiles = {...this.state.fileData.files}\r\n        \r\n            delete newFiles[fileName]\r\n        \r\n            let newState = {\r\n                ...this.state,\r\n                fileData: {\r\n                    ...this.state.fileData,\r\n                    column: {\r\n                        ...this.state.fileData.column,\r\n                        fileIds: this.state.fileData.column.fileIds.filter(file => file !== fileName)\r\n                    },\r\n                    files: newFiles\r\n                }}\r\n            \r\n            if(familyName){\r\n                delete newState.relatedArtwork[familyName].files[fileName]\r\n                newState.relatedArtwork[familyName].column.fileIds = newState.relatedArtwork[familyName].column.fileIds.filter(file => file !== fileName)\r\n            }\r\n            this.setState(newState)\r\n        },\r\n        //change display index by dragging file preview\r\n        onDragEnd: (result) => {\r\n\r\n            const {destination, source, draggableId} = result;\r\n        \r\n            if(!destination){\r\n                return\r\n            }\r\n            \r\n            const column = this.state.fileData.column[source.droppableId];\r\n        \r\n                let newFileIds = this.state.fileData.column.fileIds\r\n        \r\n                newFileIds.splice(source.index, 1)\r\n                newFileIds.splice(destination.index, 0, draggableId)\r\n        \r\n                const newColumn = {\r\n                    ...column,\r\n                    fileIds: newFileIds\r\n                }\r\n                \r\n                let newState = {...this.state}\r\n\r\n                newState.fileData.column[newColumn.id] = newColumn\r\n\r\n                // newState = this.fileDataMethods.getFamilyDisplayIndex(newColumn.fileIds, newState)\r\n        \r\n                this.setState(newState)\r\n        },\r\n        onDragEndFamilyList: (result) => {\r\n\r\n            const {destination, source, draggableId} = result;\r\n\r\n            if(!destination){\r\n                return\r\n            }\r\n\r\n            const fileName = result.destination.droppableId\r\n            const artworkFamily = fileName.slice(0, fileName.match(\"-relatedArtworks\").index)\r\n\r\n            const column = this.state.relatedArtwork[artworkFamily].column[source.droppableId];\r\n        \r\n            let newFileIds = this.state.relatedArtwork[artworkFamily].column.fileIds\r\n            // const column = this.state.fileData.files[fileName].relatedArtwork.column[source.droppableId];\r\n        \r\n            // let newFileIds = this.state.fileData.files[fileName].relatedArtwork.column.fileIds\r\n    \r\n            newFileIds.splice(source.index, 1)\r\n            newFileIds.splice(destination.index, 0, draggableId)\r\n    \r\n            const newColumn = {\r\n                ...column,\r\n                fileIds: newFileIds\r\n            }\r\n            \r\n            let newState = {...this.state}\r\n\r\n            newState.relatedArtwork[artworkFamily].column[newColumn.id] = newColumn\r\n\r\n\r\n\r\n            this.setState(newState)\r\n        },\r\n        updateArtworkInfo: (file) => {\r\n            return new Promise((resolve, reject) => {\r\n                if(!file.category || !Object.keys(file.category).length > 0 ){\r\n                    reject(`To submit, select categories for file ${file.fileName}`)\r\n                }\r\n\r\n                else{\r\n                    if(file.artworkFamily){\r\n                        const artworkFamily = file.artworkFamily\r\n                        //check if display index has changed\r\n                        const currentFamilyDisplayIndex = this.state.relatedArtwork[artworkFamily].column.fileIds.indexOf(file.fileName)\r\n                        const ogData = axios.get(`/api/artworkInfo/fileName/${file.fileName}`)\r\n                        ogData.then(res => {\r\n                            console.log(\"res.data.familyDisplayIndex\")\r\n                            console.log(res.data)\r\n                            console.log(res.data[0].familyDisplayIndex)\r\n                            if(res.data[0].familyDisplayIndex === currentFamilyDisplayIndex){\r\n                                console.log(\"fam index not changed\")\r\n                                const fileData = this.state.fileData.files[file.fileName]\r\n                                this.fileDataMethods.relateSeeAlso(file)\r\n                                .then(res => { \r\n                                    axios.put(`/api/artworkInfo/update/${file.fileName}`, fileData)\r\n                                    .then(res => {\r\n                                        resolve('file updated')\r\n                                    })\r\n                                    .catch(rej => {\r\n                                        console.log(\"Record update failed\")\r\n                                        console.log(rej)\r\n                                        reject(\"Record update failed\")\r\n                                    })\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(err)\r\n                                    reject()\r\n                                })\r\n                            }\r\n                            //his will update each file in the family with new index\r\n                            else{\r\n                                this.fileDataMethods.relateSeeAlso(file)\r\n                                    .then(res => {                                        \r\n                                        const updateLength = Object.keys(this.state.relatedArtwork[artworkFamily].files).length \r\n                                        let progressCount = 0\r\n                                        Object.keys(this.state.relatedArtwork[artworkFamily].files).forEach(objName => {\r\n                                            let obj = this.state.artworkInfoData[objName]\r\n                                            if(objName === file.fileName){\r\n                                                obj = this.state.fileData.files[file.fileName]\r\n                                            }\r\n                                            const familyIndex = this.state.relatedArtwork[artworkFamily].column.fileIds.indexOf(obj.fileName)\r\n                                            let fileData =  obj\r\n                                                fileData.familyDisplayIndex = familyIndex\r\n                                                axios.put(`/api/artworkInfo/update/${obj.fileName}`, fileData)\r\n                                                    .then(res => {\r\n                                                        progressCount += 1\r\n                                                        console.log(progressCount)\r\n                                                        if(progressCount === updateLength){\r\n                                                            resolve('file updated')\r\n                                                        }\r\n                                                    })\r\n                                                    .catch(rej => {\r\n                                                        console.log(\"Record update failed\")\r\n                                                        console.log(rej)\r\n                                                        reject(\"Record update failed\")\r\n                                                    })\r\n                                            })\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(\"relate see also error\")\r\n                                        console.log(err)\r\n                                        reject(err)\r\n                                    })\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                }\r\n        })\r\n        },\r\n        updateArtworkByFamily: (familyName) => {\r\n            return new Promise((resolve, reject) => { \r\n                    const fileNamesInFamily = Object.keys(this.state.relatedArtwork[familyName].files)\r\n                    const updateLength = fileNamesInFamily.length\r\n                    let progress = 0\r\n                    if(updateLength > 0){\r\n                        this.state.relatedArtwork[familyName].column.fileIds.forEach((fileName, index) => {\r\n                            const familyDisplayIndex = this.state.relatedArtwork[familyName].column.fileIds.indexOf(fileName)\r\n                            const familyData = this.state.familySetupData\r\n                            const {category, themes, seeAlso, familyDescription, year, location} = familyData\r\n                            let fileData = this.state.relatedArtwork[familyName].files[fileName]\r\n                            delete fileData.__v\r\n                            delete fileData._id\r\n                            delete fileData.relatedArtwork\r\n                            fileData = {...fileData, familyDisplayIndex, category, themes, seeAlso, familyDescription, year, location}\r\n                            console.log(\"fileData\")\r\n                            console.log(fileData)\r\n                            axios.put(`/api/artworkInfo/update/${fileName}`, fileData)\r\n                                .then(res => {\r\n                                    progress += 1\r\n                                    console.log(`progress: ${progress}/${updateLength}`)\r\n                                    if(progress === updateLength){\r\n                                        resolve()\r\n                                        // axios.get(`/api/artworkInfo/${familyName}`)\r\n                                        //     .then(res => {\r\n                                        //         console.log(\"artworks updated\")\r\n                                        //         console.log(res)\r\n                                        //         resolve(res)\r\n                                        //     })\r\n                                        //     .catch(rej => {\r\n                                        //         console.log(\"error\")\r\n                                        //         console.log(rej)\r\n                                        //         reject(rej)\r\n                                        //     })\r\n                                    }\r\n                                })\r\n                                .catch(rej => {\r\n                                    console.log(\"error\")\r\n                                    console.log(rej)\r\n                                    reject(rej)\r\n                                })\r\n                        })\r\n                    }\r\n                else{\r\n                    resolve()\r\n                }\r\n            })\r\n        },\r\n        postArtworkInfo: (file) => {\r\n            console.log('post artwork info RUNS with')\r\n            console.log(file)\r\n            this.setState({showModal: true})\r\n            return new Promise((resolve, reject) => {\r\n                if(this.state.serverFileDir.includes(file.fileName)){\r\n                    reject('A file with the same name has been registered before. To update it, select \"EDIT\" tab')\r\n                }\r\n\r\n                if(!file.category || !Object.keys(file.category).length > 0 ){\r\n                    reject('To submit, select categories for this file')\r\n                }\r\n\r\n                const artworkFamily = file.artworkFamily || \"none\"\r\n\r\n                        const familyIndex = this.state.relatedArtwork[artworkFamily].column.fileIds.indexOf(file.fileName)\r\n                        let fileData = null\r\n                        \r\n                        if(this.state.serverFileDir.includes(file.fileName)){\r\n                            reject(`file ${file.fileName} already exists on the server. Choose a different name, file, or edit records`)\r\n                        }\r\n            \r\n                        else{\r\n                            \r\n                            fileData = this.state.fileData.files[file.fileName]\r\n\r\n                            const newName = fileData.fileName.slice(0, fileData.fileName.indexOf(\".\"))\r\n                            const fileExtension = fileData.fileName.slice(fileData.fileName.indexOf(\".\"), fileData.fileName.length)\r\n                            \r\n                \r\n                            let fileDataObject = {                                                 \r\n                            category: fileData.category ? fileData.category : null,\r\n                            displayTriggers: fileData.displayTriggers,\r\n                            filePath: `uploads/${fileData.fileName}`,\r\n                            thumbnailPath: `uploads/thumbnails/${newName}-thumbnail${fileExtension}`,\r\n                            mobilePath: `uploads/mobile/${newName}-mob${fileExtension}`,\r\n                            desktopPath: `uploads/desktop/${newName}-desktop${fileExtension}`,\r\n                            fileName: fileData.fileName,\r\n                            fileType: fileData.fileType,\r\n                            artworkFamily: artworkFamily ?  artworkFamily : null,\r\n                            familyDescription: fileData.familyDescription ?  fileData.familyDescription : null,\r\n                            artworkTitle: fileData.artworkTitle ?  fileData.artworkTitle : null,\r\n                            artworkDescription: fileData.artworkDescription ?  fileData.artworkDescription : null,\r\n                            themes: fileData.themes ?  fileData.themes : null,\r\n                            seeAlso: fileData.seeAlso ?  fileData.seeAlso : null,\r\n                            location: fileData.location ?  fileData.location : null,\r\n                            year: fileData.year ? fileData.year : null,\r\n                            naturalSize: fileData.naturalSize, \r\n                            displayMain: fileData.displayMain ? fileData.displayMain : null\r\n                            }\r\n                \r\n                            fileDataObject.familyDisplayIndex = familyIndex\r\n\r\n                            this.fileDataMethods.relateSeeAlso(file)\r\n                                .then(res => {\r\n                                    axios.post('/api/artworkInfo/create', fileDataObject)\r\n                                    .then( res => { \r\n                                            this.fileDataMethods.uploadFile(file.fileName)\r\n                                                .then(res => {\r\n                                                    let newState = {...this.state}\r\n                                                    delete newState.fileData.files[file.fileName]\r\n                                                    resolve(\"file uploaded\")\r\n                                                })\r\n                                                .catch(err => {\r\n                                                    console.log(err); \r\n                                                    reject(\"error\")\r\n                                                })\r\n                                        })\r\n                                    .catch(err => {\r\n                                        console.log(err); \r\n                                        reject(\"error\")\r\n                                    })\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(\"relateSeeAlso singleFileUpload error\")\r\n                                    console.log(err)\r\n                                    reject(err)\r\n                                })\r\n                        }\r\n            })\r\n\r\n        },\r\n        initialIndex: () => {\r\n            let newState = {...this.state}\r\n            this.state.fileData.column.fileIds.forEach((fileName, index) => {\r\n                this.state.fileData.files[fileName].familyDisplayIndex = index\r\n            })\r\n            this.setState(newState)\r\n        },\r\n        relateSeeAlso: (file) => {\r\n            const fileName = file.fileName\r\n            console.log(\"relate see also init _____________________________________\")\r\n            console.log(file)\r\n            const makeSet = (array) => {\r\n                let newArray = new Set(array)\r\n                newArray = [...newArray]\r\n                return newArray\r\n            }\r\n            return new Promise((resolve, reject) => {\r\n                axios.get(`/api/artworkInfo/fileName/${fileName}`)\r\n                    .then(res => {\r\n                        const newState = {...this.state}\r\n                        const prevSeeAlso = makeSet(res.data[0].seeAlso)\r\n                        const currentSeeAlso = makeSet(file.seeAlso)\r\n                        const newToAdd = currentSeeAlso.filter(record => {\r\n                            return !prevSeeAlso.includes(record)\r\n                        })\r\n                        const newToRemove = prevSeeAlso.filter(record => {\r\n                            return !currentSeeAlso.includes(record)\r\n                        })\r\n                        const removeSeeAlsos = new Promise((resolve, reject) => {\r\n                            let counter = 0\r\n                            let progressLength = newToRemove.length\r\n                            if(progressLength === 0){\r\n                                resolve()\r\n                            }\r\n                            newToRemove.forEach(seeAlsoParent => {\r\n                                let fileData = newState.artworkInfoData[seeAlsoParent]\r\n                                let newSeeAlso = fileData.seeAlso.filter(record => record !== fileName)\r\n                                newSeeAlso = makeSet(newSeeAlso)\r\n                                fileData.seeAlso = newSeeAlso\r\n                                axios.put(`/api/artworkInfo/update/${seeAlsoParent}`, fileData)\r\n                                    .then(res => {\r\n                                        counter += 1\r\n                                        if(counter === progressLength){\r\n                                            resolve()\r\n                                        }\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err)\r\n                                        reject()\r\n                                    })\r\n                            })\r\n                        }) \r\n                        const addSeeAlsos = new Promise((resolve, reject) => {\r\n                            let counter = 0\r\n                            let progressLength = newToAdd.length\r\n                            if(progressLength === 0){\r\n                                resolve()\r\n                            }\r\n                            newToAdd.forEach(seeAlsoParent => {\r\n                                let fileData = newState.artworkInfoData[seeAlsoParent]\r\n                                let newSeeAlso = [...fileData.seeAlso, fileName]\r\n                                newSeeAlso = makeSet(newSeeAlso)\r\n                                fileData.seeAlso = newSeeAlso\r\n                                axios.put(`/api/artworkInfo/update/${seeAlsoParent}`, fileData)\r\n                                .then(res => {\r\n                                    counter += 1\r\n                                    if(counter === progressLength){\r\n                                        resolve()\r\n                                    }\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(err)\r\n                                    reject()\r\n                                })\r\n                            })\r\n                        })\r\n                        \r\n                        console.log(\"pre Promise all\")\r\n                        Promise.all([removeSeeAlsos, addSeeAlsos])\r\n                        .then(res => {\r\n                            console.log(\"Promise All resolve\")\r\n                            resolve()\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                            //  document.location.reload(true)\r\n                            reject()\r\n                        })\r\n                    })\r\n                    //if new file (cannot find file name in database)\r\n                    .catch(err => {\r\n                        console.log(\"new file\")\r\n                        const newState = {...this.state} \r\n                        const newToAdd = makeSet(file.seeAlso)\r\n                        const addSeeAlsos = new Promise((resolve, reject) => {\r\n                            let counter = 0\r\n                            let progressLength = newToAdd.length\r\n                            if(progressLength === 0){\r\n                                resolve()\r\n                            }\r\n                            newToAdd.forEach(seeAlsoParent => {\r\n                                let fileData = newState.artworkInfoData[seeAlsoParent]\r\n                                let newSeeAlso = [...fileData.seeAlso, fileName]\r\n                                newSeeAlso = makeSet(newSeeAlso)\r\n                                fileData.seeAlso = newSeeAlso\r\n                                axios.put(`/api/artworkInfo/update/${seeAlsoParent}`, fileData)\r\n                                .then(res => {\r\n                                    counter += 1\r\n                                    if(counter === progressLength){\r\n                                        resolve()\r\n                                    }\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(err)\r\n                                    reject()\r\n                                })\r\n                            })\r\n                        })\r\n                        addSeeAlsos.then(res => {resolve(\"single file see also resolve\")}).catch(err => {reject(err)})\r\n                    })\r\n            })\r\n        },\r\n        updateSeeAlso: (newValue, parent) => {\r\n            // if(!parent || !newValue){\r\n            //     return\r\n            // }\r\n            console.log(\"newValue\")\r\n            console.log(newValue)\r\n            console.log(\"Parent\")\r\n            console.log(parent)\r\n            let target = null\r\n            let newState = {...this.state}\r\n            if(parent){\r\n                target = newState.fileData.files[parent]\r\n            }\r\n            else{\r\n                target = newState.familySetupData\r\n            }\r\n            if(target.seeAlso.includes(newValue)){\r\n                target.seeAlso = target.seeAlso.filter(value => value !== newValue)\r\n            }\r\n            else{\r\n                target.seeAlso = [...target.seeAlso, newValue]\r\n            }\r\n            this.setState(newState)\r\n        }\r\n    \r\n    }//END OF file data methods\r\n\r\n    //this deals with creating and pulling artwork family data and attaching it to files\r\n    this.familySetupMethods = {\r\n        filterByFamily: (value, fileName) => {\r\n            let newRenderList = {}\r\n            Object.keys(this.state.seeAlsoData.fileList).forEach(fileName => {\r\n                const file = this.state.seeAlsoData.fileList[fileName]\r\n                if(file.artworkFamily === value){\r\n                    newRenderList = {...newRenderList, [file.fileName]: file}\r\n                    newRenderList.fileNames = Object.keys(newRenderList).map(fileName => fileName)\r\n                }\r\n            })\r\n\r\n            this.setState({seeAlsoData: {...this.state.seeAlsoData, renderFiles: newRenderList}})\r\n            // this.setState({renderList: newRenderList})\r\n        },\r\n        getArtworkInfo: () => {\r\n                return new Promise((resolve, rej) => {\r\n        \r\n                    let serverFileNames = null;\r\n                    \r\n                    //get an array of all file names in the server\r\n                    axios.get('/fetchImages')\r\n                        .then(res => {\r\n                            serverFileNames = res.data\r\n                            serverFileNames = serverFileNames.map(name => {\r\n                                return name.replace(\"-thumbnail\", \"\")\r\n                            })\r\n\r\n            \r\n                            //get all artwork records from database\r\n                            axios.get('/api/artworkInfo')\r\n                                .then(res => {\r\n                                    let databaseFiles = {}\r\n                                    let usedNames = []\r\n                                    console.log()\r\n                                    console.log(res.data)\r\n                                    //check that a record has a file in the server\r\n                                    serverFileNames.forEach(fileName => {\r\n                                        res.data.forEach(obj => {\r\n                                            if(obj.fileName === fileName && !usedNames.includes[fileName]){\r\n                                                usedNames = [...usedNames, fileName]\r\n                                             databaseFiles = {...databaseFiles, [fileName]: obj}\r\n                                            databaseFiles[fileName].useFamilySetup = false\r\n                                        }\r\n                                    })\r\n                                    })\r\n\r\n                                    //add an array of all file object\r\n                                    // renderFiles.fileNames = Object.keys(renderFiles).filter(fileName => fileName !== \"fileList\")\r\n    \r\n                                    resolve(databaseFiles)\r\n                                })\r\n                        })   \r\n                        .catch(err => rej(err))\r\n                })\r\n        },\r\n        resetRenderFiles: () => {\r\n            let newState = this.state\r\n            newState.seeAlsoData.renderFiles = {...newState.seeAlsoData.fileList, fileNames: newState.seeAlsoData.renderFiles.fileNames, }\r\n            this.setState(newState)\r\n        },\r\n        onChange: (value, string, e, cb) => {\r\n            const addNewValue = (newValue) => {\r\n                let newState = {}\r\n                //if state nest is a String, eg artworkFamily\r\n                if(typeof this.state.familySetupData[string] === \"string\"){              \r\n                    newState = {\r\n                        ...this.state,\r\n                        familySetupData: {\r\n                            ...this.state.familySetupData,\r\n                            [string]: newValue\r\n                        }\r\n                    }\r\n                }\r\n                //if state nest is Array (eg themes or seeAlso)\r\n                else{              \r\n                    newState = {\r\n                        ...this.state,\r\n                        familySetupData: {\r\n                            ...this.state.familySetupData,\r\n                            [string]: [...this.state.familySetupData[string], newValue]\r\n                        }\r\n                    }\r\n                }\r\n                // this.setState(newState)\r\n                return newState\r\n            }\r\n    \r\n            const removeValue = (value) => {\r\n                let newState = {}\r\n                if(typeof this.state.familySetupData[string] === \"string\"){\r\n                    return\r\n                }\r\n                else{\r\n                    let newArray = this.state.familySetupData[string].filter(item => item !== value)\r\n                    newState = {\r\n                        ...this.state,\r\n                        familySetupData: {\r\n                            ...this.state.familySetupData,\r\n                            [string]: newArray\r\n                        }\r\n                    }\r\n                    // this.setState(newState)\r\n                    return newState\r\n                }\r\n            }\r\n            \r\n            if(this.state.familySetupData[string] && this.state.familySetupData[string].includes(value)){\r\n                let newState = removeValue(value)\r\n                // this.familySetupMethods.renderAllFiles(newState.familySetupData.seeAlso).then(res => {\r\n                //     let seeAlsoData = {}\r\n                //     newState = {...newState, seeAlsoData: res}\r\n                //     this.setState(newState, () => {if(cb){cb()}})\r\n                // })\r\n                this.setState(newState, () => {if(cb){cb()}})\r\n            }\r\n            else{\r\n                let newState = addNewValue(value)\r\n                // this.familySetupMethods.renderAllFiles(newState.familySetupData.seeAlso).then(res => {\r\n                //     newState = {...newState, seeAlsoData: res}\r\n                //     this.setState(newState, () => {if(cb){cb()}})\r\n                // })\r\n                this.setState(newState, () => {if(cb){cb()}})\r\n            }\r\n        },\r\n        isChecked: (string, value) => {\r\n            if(string === \"artworkFamily\"){\r\n                if(this.state.familySetupData.artworkFamily === value){\r\n                    return true\r\n                }\r\n                else{ return false}\r\n            }\r\n            if(this.state.familySetupData[string].includes(value)){\r\n                return true\r\n            } \r\n            else{\r\n                return false\r\n            } \r\n        },\r\n        getFamilySetup: (value, string, fileName) => {\r\n            console.log(\"getFamilySetup runs\")\r\n            console.log(\"value\")\r\n            console.log(value)\r\n            console.log(\"fileName\")\r\n            console.log(fileName)\r\n            return new Promise((resolve, reject) => {\r\n                axios.get(`/api/familySetup/${value}`)\r\n                .then( res => {\r\n        \r\n                    let newFamilySetup = {}\r\n                    let newState = {...this.state}\r\n    \r\n                    if(fileName){\r\n                        newFamilySetup = {...this.state.fileData.files[fileName]}\r\n    \r\n                        Object.keys(res.data).forEach(objKey => {\r\n                            newFamilySetup = {\r\n                                ...newFamilySetup,\r\n                                    [objKey]: res.data[objKey]\r\n                                }\r\n                        })\r\n        \r\n                        newState = {...this.state,\r\n                            fileData: {\r\n                                ...this.state.fileData,\r\n                                files: {\r\n                                    ...this.state.fileData.files,\r\n                                    [fileName]: newFamilySetup\r\n                                }\r\n                            }\r\n                        }\r\n                        let newDisplayTriggers = {}\r\n                        newDisplayTriggers.category = Object.keys(res.data.category)\r\n        \r\n                        const getSubcategories = () => {\r\n                            let categories = Object.keys(res.data.category)\r\n                            let subcategories = []\r\n                            categories.forEach(category => {\r\n                                subcategories = [...subcategories, ...Object.keys(res.data.category[category])]\r\n                            })\r\n                            return subcategories\r\n                        }\r\n                        newDisplayTriggers.subcategory = getSubcategories()\r\n        \r\n                        const getListitems = () => {\r\n                            const categories = Object.keys(res.data.category)\r\n                            let listItems = []\r\n                            categories.forEach(category => {\r\n                                let subcategories = Object.keys(res.data.category[category])\r\n                                subcategories.forEach(sub => {\r\n                                    if(!res.data.category[category][sub].length > 0){return}\r\n                                    listItems = [...listItems, ...res.data.category[category][sub]]\r\n                                })\r\n                            })\r\n                            return listItems\r\n                        }\r\n                        newDisplayTriggers.listitems = getListitems()\r\n        \r\n                        newDisplayTriggers.themes = res.data.themes\r\n        \r\n                        newDisplayTriggers.year = res.data.year\r\n                        newDisplayTriggers.location = res.data.location    \r\n        \r\n                        newState.fileData.files[fileName].displayTriggers = newDisplayTriggers\r\n                    }\r\n    \r\n                    else if(!fileName){\r\n                        Object.keys(res.data).forEach(objKey => {\r\n                            newFamilySetup = {\r\n                                ...newFamilySetup,\r\n                                [objKey]: res.data[objKey]\r\n                            }\r\n                        })\r\n                        \r\n                        newState = {...this.state, familySetupData: newFamilySetup}\r\n                    }\r\n    \r\n                    const withRelatedArtwork = this.familySetupMethods.getRelatedArtwork(value, newState)\r\n    \r\n                    withRelatedArtwork\r\n                        .then(  res => {\r\n                            newState = {...newState, relatedArtwork: {...newState.relatedArtwork, [value]: res}}\r\n                            let fileIds = Object.keys(res)\r\n                            this.setState(newState, () => resolve(res))\r\n                        })\r\n                    })\r\n                .catch(err => {\r\n                    reject(err)\r\n                })\r\n            })\r\n        },\r\n        restoreFamilySetup: (fileName) => {\r\n            let newState ={\r\n                ...this.state,\r\n                fileData: {\r\n                    ...this.state.fileData,\r\n                    files: {\r\n                        ...this.state.fileData.files,\r\n                        [fileName]: {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        useFamilySetup: (value) => {\r\n    \r\n            let newState = {\r\n                ...this.state,\r\n                familySetupData: {\r\n                    ...this.state.familySetupData,\r\n                    useFamilySetup: value\r\n                }\r\n            }\r\n    \r\n            this.setState(newState)\r\n        },\r\n        createFamilySetup: () => {\r\n\r\n            console.log('create family setup runs')\r\n\r\n            const artworkFamily = this.state.familySetupData.artworkFamily;\r\n            const category = this.state.familySetupData.category ? this.state.familySetupData.category : {};\r\n            const familyDescription = this.state.familySetupData.familyDescription ? this.state.familySetupData.familyDescription : \"\";\r\n            const themes = this.state.familySetupData.themes ? this.state.familySetupData.themes : [];\r\n            const relatedArtwork = this.state.familySetupData.relatedArtwork ? this.state.familySetupData.relatedArtwork : [];\r\n            const seeAlso = this.state.familySetupData.seeAlso ? this.state.familySetupData.seeAlso : [];\r\n            const location = this.state.familySetupData.location ? this.state.familySetupData.location : \"\";\r\n            const year = this.state.familySetupData.year ? this.state.familySetupData.year : \"\";\r\n    \r\n            let requestBody = {\r\n                category: category,\r\n                artworkFamily: artworkFamily,\r\n                familyDescription: familyDescription,\r\n                themes: themes,\r\n                relatedArtwork: relatedArtwork,\r\n                seeAlso: seeAlso,\r\n                location: location,\r\n                year: year\r\n            }\r\n            return new Promise ((resolve, reject) => {\r\n                if(!this.state.familySetupData.artworkFamily){\r\n                    reject(\"Please select artwork family or add a new one\")\r\n                }\r\n                axios.post('/api/familySetup/create', requestBody)\r\n                    .then( res => {\r\n                        console.log(\"create fam succes\")\r\n                        console.log(res)\r\n                        resolve(\"create fam succes\")\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(\"create fam failed\")\r\n                        console.log(err)\r\n                        reject(\"create fam failed\")\r\n                    })\r\n            })\r\n        },\r\n        updateFamilySetup: (familyName) => {\r\n            const artworkFamily = this.state.familySetupData.artworkFamily;\r\n            const category = this.state.familySetupData.category ? this.state.familySetupData.category : {};\r\n            const familyDescription = this.state.familySetupData.familyDescription ? this.state.familySetupData.familyDescription : \"\";\r\n            const themes = this.state.familySetupData.themes ? this.state.familySetupData.themes : [];\r\n            const relatedArtwork = this.state.familySetupData.relatedArtwork ? this.state.familySetupData.relatedArtwork : [];\r\n            const seeAlso = this.state.familySetupData.seeAlso ? this.state.familySetupData.seeAlso : [];\r\n            const location = this.state.familySetupData.location ? this.state.familySetupData.location : \"\";\r\n            const year = this.state.familySetupData.year ? this.state.familySetupData.year : \"\";\r\n    \r\n            let requestBody = {\r\n                category: category,\r\n                artworkFamily: artworkFamily,\r\n                familyDescription: familyDescription,\r\n                themes: themes,\r\n                relatedArtwork: relatedArtwork,\r\n                seeAlso: seeAlso,\r\n                location: location,\r\n                year: year\r\n            }\r\n\r\n            // if(!this.state.familySetupData.artworkFamily){\r\n            //     return\r\n            // }\r\n\r\n            return new Promise((resolve, reject) => {\r\n                axios.put(`/api/familySetup/update/${familyName}`, requestBody)\r\n                    .then( res => { \r\n                        console.log(res)\r\n                        this.fileDataMethods.updateArtworkByFamily(familyName)\r\n                        .then(res => {\r\n                            console.log(\"FIELS UPDATES\")\r\n                            resolve(`Artwork Family ${familyName} succesfully updated`)\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(\"updateArtworkByFamily FAIL\")\r\n                            console.log(err)\r\n                        })\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        reject(\"Artwork family update failed\")\r\n                    })\r\n            })\r\n\r\n        },\r\n        getRelatedArtwork: (artworkFamily, newState) => {\r\n\r\n            let relatedArtwork = {}\r\n            //get all records from the selected family from database\r\n            return new Promise((resolve, reject) => {\r\n\r\n                axios.get(`/api/artworkInfo/${artworkFamily}`)\r\n                    .then(res =>{\r\n                        res.data.forEach((obj, index) => {\r\n                        Object.keys(obj).forEach(property => {\r\n                                relatedArtwork = {\r\n                                    ...relatedArtwork,\r\n                                        [obj.fileName]: {\r\n                                            ...relatedArtwork[obj.fileName],\r\n                                            [property]: obj[property]\r\n                                        }\r\n                                    }\r\n                            })\r\n                        })        \r\n                        \r\n                        if(newState.fileData.files){\r\n                            Object.keys(newState.fileData.files).forEach(fileName => {\r\n                                if(newState.fileData.files[fileName].artworkFamily === artworkFamily){\r\n            \r\n                                    Object.keys(newState.fileData.files[fileName]).forEach(property => {\r\n                                        relatedArtwork = {\r\n                                            ...relatedArtwork,\r\n                                                [fileName]: {\r\n                                                    ...relatedArtwork[fileName],\r\n                                                    [property]: newState.fileData.files[fileName][property]\r\n                                                }\r\n                                            }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        let fileIds = []\r\n                        let noIndex = []\r\n\r\n                        Object.keys(relatedArtwork).forEach((fileName, index) => {\r\n                            const familyDisplayIndex = relatedArtwork[fileName].familyDisplayIndex\r\n                            if(familyDisplayIndex < 0 || familyDisplayIndex === null || undefined){\r\n                                noIndex.push(fileName)\r\n                            }\r\n                            else{fileIds[familyDisplayIndex] = fileName}\r\n                        })\r\n                        noIndex.forEach(fileName => fileIds.push(fileName))\r\n                        fileIds = fileIds.filter(fileName => fileName !== null || undefined)\r\n                        let finalRelatedArtwork = {\r\n                                files: relatedArtwork,\r\n                                column: {\r\n                                    fileIds,\r\n                                    id: `${artworkFamily}-relatedArtworks`\r\n                                },\r\n                                columnOrder: [`${artworkFamily}-relatedArtworks`]\r\n                        };\r\n                            resolve(finalRelatedArtwork)\r\n                    })\r\n            }) \r\n        },\r\n        updateContext: (value, propertyName) => {\r\n            return this.setState({[propertyName]: value})\r\n        }\r\n    }//end of familySetupMethods\r\n\r\n    this.verify = (options) => {\r\n        if(auth.guest){\r\n            return {\r\n                showModal: true,\r\n                verified: false, \r\n                modalMessage: options && options.customMessage ? options.customMessage : \"You do not have the rights for this action. Log in using admin level account\"\r\n            }\r\n        }\r\n        else if(options){\r\n            if(options.addNew && !this.state.familySetupData.artworkFamily){\r\n                return {\r\n                    verfied: true,\r\n                    showModal: true,\r\n                    modalMessage: options && options.customError ? options.customError : \"Select or add a new artwork family\"\r\n                }\r\n            }\r\n            else{\r\n                return{ verified: true}\r\n            }\r\n        }\r\n\r\n        else if (!options){return {verified: true}}\r\n    }\r\n    this.staticState = () => {\r\n        const getArtworkInfo = () => {\r\n            return new Promise((resolve, rej) => {\r\n      \r\n                let serverFileNames = null;\r\n                \r\n                //get an array of all file names in the server\r\n                axios.get('/fetchImages')\r\n                    .then(res => {\r\n                        serverFileNames = res.data\r\n                        let newServerFileName = res.data.map(name => {\r\n                          let start = name.substring(0, name.indexOf(\"-thumbnail\"))\r\n                          let cutout = \"-thumbnail\"\r\n                          let extension = name.substring(name.indexOf(\"-thumbnail\") + cutout.length)\r\n                          let newName = `${start}${extension}`\r\n                          return newName\r\n                        })\r\n      \r\n                        serverFileNames = newServerFileName\r\n                        axios.get('/api/artworkInfo')\r\n                            .then(res => {\r\n                                let databaseFiles = {}\r\n                                let usedNames = []\r\n                                \r\n                                //check that a record has a file in the server\r\n                                serverFileNames.forEach(fileName => {\r\n                                    res.data.forEach(obj => {\r\n                                        if(obj.fileName === fileName && !usedNames.includes[fileName]){\r\n                                            usedNames = [...usedNames, fileName]\r\n                                         databaseFiles = {...databaseFiles, [fileName]: obj}\r\n                                        databaseFiles[fileName].useFamilySetup = false\r\n                                    }\r\n                                })\r\n                                })\r\n      \r\n                                //add an array of all file object\r\n                                // renderFiles.fileNames = Object.keys(renderFiles).filter(fileName => fileName !== \"fileList\")\r\n      \r\n                                resolve(databaseFiles)\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(\"getArtworkInfo err\")\r\n                              console.log(err)\r\n                            })\r\n                    })   \r\n                    .catch(err => {\r\n                      console.log(\"fetch images err\")\r\n                      console.log(err)\r\n                    })\r\n            })\r\n        }\r\n        const getRelatedArtwork = (artworkFamily, newState) => {\r\n    \r\n        let relatedArtwork = {}\r\n        //get all records from the selected family from database\r\n        return new Promise((resolve, reject) => {\r\n            // if(this.state.relatedArtwork[value]){\r\n            //     relatedArtwork = {...this.state.relatedArtwork}\r\n            // }\r\n    \r\n            axios.get(`/api/artworkInfo/${artworkFamily}`)\r\n                .then(res =>{\r\n    \r\n                //for each fileData object in res.data array \r\n                    res.data.forEach((obj, index) => {\r\n                    //paste all properties of this file object unto relatedArtwork object\r\n                    Object.keys(obj).forEach(property => {\r\n                            relatedArtwork = {\r\n                                ...relatedArtwork,\r\n                                    [obj.fileName]: {\r\n                                        ...relatedArtwork[obj.fileName],\r\n                                        [property]: obj[property]\r\n                                    }\r\n                                }\r\n                        })\r\n                    })        \r\n                    let fileIds = Object.keys(relatedArtwork).map(obj => null)\r\n                    Object.keys(relatedArtwork).forEach(fileName => {\r\n                        if(relatedArtwork[fileName].familyDisplayIndex < 0){\r\n                            fileIds.push(fileName)\r\n                        }\r\n                        else{\r\n                            fileIds[relatedArtwork[fileName].familyDisplayIndex] = fileName\r\n                        }\r\n                    })\r\n                    fileIds = fileIds.filter(fileName => fileName !== null || false)\r\n                    let finalRelatedArtwork = {\r\n                            files: relatedArtwork,\r\n                            column: {\r\n                                // fileIds: Object.keys(relatedArtwork).map(objName => objName),\r\n                                fileIds,\r\n                                id: `${artworkFamily}-relatedArtworks`\r\n                            },\r\n                            columnOrder: [`${artworkFamily}-relatedArtworks`]\r\n                    };\r\n                    \r\n                    \r\n                    resolve(finalRelatedArtwork)\r\n                })\r\n        }) \r\n        }\r\n      \r\n            console.log(\"write static state runs\")\r\n            let newState = {}\r\n\r\n            let FamilyList = new Promise ((resolve, rej) => {\r\n                axios.get('/api/familySetup')\r\n                .then(res => {\r\n                    let familyList = Object.keys(res.data).map(obj => {\r\n                        return res.data[obj].artworkFamily\r\n                    })\r\n                    newState.artworkFamilyList = familyList\r\n                    console.log(\"Families loaded\")\r\n                    console.log(res)\r\n                    resolve()\r\n                })\r\n                .catch(err => {\r\n                     rej(err)\r\n                     console.log(\"family list laod error\")\r\n                    // document.location.reload(true)\r\n                })\r\n            })\r\n      \r\n            let Categories = new Promise ((resolve, rej) => {\r\n                FamilyList\r\n                .then(res => {\r\n                        axios.get('/api/categories')\r\n                        .then(res => {\r\n            \r\n                                let categoryNames = Object.values(res.data).map(obj => obj.category)\r\n                                let categoryObj = {}\r\n                                categoryNames.forEach(categoryName => {\r\n                                    const currentObj = res.data.find(item => item.category === categoryName)\r\n                                    return categoryObj = {...categoryObj, [categoryName]: Object.keys(currentObj.subcategory)}\r\n                                })\r\n            \r\n                            newState.categoriesData = res.data\r\n                            newState.categoriesOptionList = {}\r\n                            newState.categoriesOptionList.data = categoryObj\r\n            \r\n                            const progressLength = newState.artworkFamilyList.length\r\n                            let counter = 0\r\n                            newState.artworkFamilyList.forEach(familyName => {\r\n                                getRelatedArtwork(familyName, newState)\r\n                                .then(res => {\r\n                                  if(!newState.relatedArtwork){\r\n                                    newState.relatedArtwork = {}\r\n                                  }\r\n                                  newState.relatedArtwork[familyName] = res\r\n                                  counter += 1\r\n                                  if(counter === progressLength){\r\n                                    resolve()\r\n                                  }\r\n                                })\r\n                                .catch(err => {\r\n                                  console.log(\"getrelated artwork err\")\r\n                                  console.log(err)\r\n                                  rej(\"getrelated artwork err\")\r\n                                })\r\n                            })\r\n                            // resolve()\r\n                        })\r\n                        .catch(err => {\r\n                             console.log(\"get categories err\")\r\n                             console.log(err)\r\n                             rej(\"get categories err\")\r\n                            // document.location.reload(true)\r\n                        })\r\n                })\r\n                .catch(err => {\r\n                  console.log(\"categories error\")\r\n                  console.log(err)\r\n                  rej(err)\r\n                })\r\n            }) \r\n      \r\n            let ArtworkInfo = new Promise ((resolve, rej) => {\r\n                getArtworkInfo()\r\n                    .then(res => {\r\n                        console.log(\"this.getArtworkInfo res\")\r\n                        console.log(res)\r\n                        newState.artworkInfoData = res\r\n                        let onDisplay = {}\r\n                        Object.keys(res).forEach(fileName => {\r\n                          if(res[fileName].displayMain){\r\n                            onDisplay = {...onDisplay, [fileName]: res[fileName]}\r\n                          }\r\n                        })\r\n                        \r\n                        let allThemes = []\r\n                        Object.keys(res).forEach(objName => {\r\n                            allThemes = [...allThemes, ...res[objName].themes]\r\n                        })\r\n                        let allThemesSet = new Set(allThemes)\r\n                        allThemesSet = Array.from(allThemesSet)\r\n      \r\n                        let artworkByTheme = {}\r\n      \r\n                        let themesArr = Object.keys(res).map(name => res[name])\r\n      \r\n                        allThemesSet.forEach(theme => {\r\n                          themesArr.forEach(obj => {\r\n                            if(obj.themes.includes(theme)){\r\n                              if(!artworkByTheme[theme]){\r\n                                artworkByTheme[theme] = []\r\n                              }\r\n                              if(obj.displayTriggers.themes && obj.displayTriggers.themes.includes(theme)){\r\n                                artworkByTheme[theme] = [...artworkByTheme[theme], obj.fileName]\r\n                              }\r\n                            }\r\n                          })\r\n                        })\r\n      \r\n                        let artworkOnDisplay = {}\r\n                        let displayThemes = [\"metal\", \"social\", \"tools\", \"cloud\"]\r\n                        let hideThemes = [\"celestial body\"]\r\n                        let artworkNames = Object.keys(onDisplay)\r\n                        artworkNames.forEach(fileName => {\r\n                          displayThemes.forEach(theme => {\r\n                            if(onDisplay[fileName].themes.includes(theme)){\r\n                              hideThemes.forEach(hideTheme => {\r\n                                if(!onDisplay[fileName].themes.includes(hideTheme)){\r\n                                  artworkOnDisplay[fileName] = onDisplay[fileName]\r\n                                }\r\n                              })\r\n                            }\r\n                          })\r\n                        })\r\n      \r\n                        let years = []\r\n                        let locations = []\r\n                        let artworkByYear = {}\r\n                        let artworkByLocation = {}\r\n                    \r\n                        const allFiles = Object.keys(res)\r\n                    \r\n                        allFiles.forEach(fileName => {\r\n                            const file = res[fileName]\r\n                            if(file.year){\r\n                                years = [...years, file.year]\r\n                                if(!artworkByYear[file.year]){\r\n                                  artworkByYear[file.year] = []\r\n                                }\r\n                                artworkByYear = {...artworkByYear, [file.year]: [...artworkByYear[file.year], fileName]}\r\n                            }\r\n                            if(file.location){\r\n                                locations = [...locations, file.location]\r\n                                if(!artworkByLocation[file.location]){\r\n                                  artworkByLocation[file.location] = []\r\n                                }\r\n                                artworkByLocation = {...artworkByLocation, [file.location]: [...artworkByLocation[file.location], fileName]}\r\n                            }\r\n                        })\r\n                    \r\n                        years = new Set(years)\r\n                        years = Array.from(years).sort()\r\n                    \r\n                        locations = new Set(locations)\r\n                        locations = Array.from(locations).sort()\r\n      \r\n                        const yearLocOnDisplay = {years: artworkByYear, locations: artworkByLocation}\r\n      \r\n                        newState.yearLocation = {years, locations, \"visible\": yearLocOnDisplay, \"all\": yearLocOnDisplay}\r\n                        newState.artworkOnDisplay = artworkOnDisplay\r\n                        newState.visibleArtwork = onDisplay\r\n                        newState.themesOnDisplay = artworkByTheme\r\n                        resolve()\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(\"getArtworkInfo err\")\r\n                      console.log(err)\r\n                      rej(err)\r\n                    })\r\n            })\r\n      \r\n            let serverFiles = new Promise ((resolve, rej) => {\r\n              axios.get('/fetchimages')\r\n                .then(res => {\r\n                  newState.serverData = res\r\n                  resolve()\r\n                })\r\n                .catch(err => rej(err))\r\n            })\r\n      \r\n            Promise.all([\r\n              serverFiles,\r\n              Categories, \r\n              ArtworkInfo, \r\n              // Themes, \r\n            ])\r\n            .then(res => {\r\n                console.log(\"_________________________________________________\")\r\n                console.log(JSON.stringify(newState))\r\n                axios.post(`/staticState`, newState)\r\n                    .then(res => { \r\n                        console.log(\"file writen\")\r\n                        console.log(res)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(\"write staticstate file error\")\r\n                        console.log(err)\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                  console.log(\"promise all err\")\r\n                  console.log(err)\r\n            })\r\n    }\r\n\r\n}//END OF CONTSTRUCTOR\r\n\r\n    componentDidMount(){\r\n            console.log('backend provider mount')\r\n            let newState = {...this.state}\r\n\r\n            this.setState({showModal: true})\r\n\r\n            let Themes = new Promise((resolve, rej) => {\r\n                axios.get('/api/themes')\r\n                    .then( res => {\r\n                    newState.themesData = res.data.list\r\n                    resolve()\r\n                    })\r\n            }) \r\n            \r\n            let FamilyList = new Promise ((resolve, rej) => {\r\n                axios.get('/api/familySetup')\r\n                    .then(res => {\r\n                        let familyList = Object.keys(res.data).map(obj => {\r\n                            return res.data[obj].artworkFamily\r\n                        })\r\n                        newState.artworkFamilyList = familyList\r\n                        resolve()\r\n                    })\r\n            })    \r\n\r\n            let Categories = new Promise ((resolve, rej) => {\r\n                FamilyList.then(res => {\r\n                    axios.get('/api/categories')\r\n                        .then(res => {\r\n\r\n                                let categoryNames = Object.values(res.data).map(obj => obj.category)\r\n                                let categoryObj = {}\r\n                                categoryNames.forEach(categoryName => {\r\n                                    const currentObj = res.data.find(item => item.category === categoryName)\r\n                                    return categoryObj = {...categoryObj, [categoryName]: Object.keys(currentObj.subcategory)}\r\n                                })\r\n\r\n                            newState.categoriesData = res.data\r\n                            newState.categoriesOptionList = {}\r\n                            newState.categoriesOptionList.data = categoryObj\r\n\r\n                            newState.artworkFamilyList.forEach(familyName => {\r\n                                this.familySetupMethods.getRelatedArtwork(familyName, newState).then(res => {\r\n                                    newState.relatedArtwork[familyName] = res\r\n                                }\r\n                                )\r\n                            })\r\n                            resolve()\r\n                        })\r\n                        .catch(err => {\r\n                        })\r\n                })\r\n            })\r\n                \r\n            let ArtworkInfo = new Promise((resolve, rej) => {\r\n                console.log(\"artwork info gather runs\")\r\n                this.familySetupMethods.getArtworkInfo()\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        newState.artworkInfoData = res\r\n                        newState.artworkOnDisplay = res\r\n                        resolve()\r\n                    })\r\n            }) \r\n\r\n            let ServerFiles = new Promise((resolve, rej) => {\r\n                axios.get('/fetchImages')\r\n                    .then(res => {\r\n                        const serverFileDir = res.data.map(name => {\r\n                            return name.replace(\"-thumbnail\", \"\")\r\n                        })\r\n                        newState.serverFileDir = serverFileDir\r\n                        // newState.serverFileDir = res.data; \r\n                        resolve()\r\n                    })\r\n            }) \r\n\r\n            // let RenderAllFiles = this.familySetupMethods.renderAllFiles(this.state.familySetupData.seeAlso)\r\n\r\n            Promise.all([Categories, ArtworkInfo, Themes, ServerFiles])\r\n                .then(res => {\r\n                    newState.showModal = false\r\n                    this.setState(newState)\r\n                })\r\n                .catch(err => {console.log(err); document.location.reload(true)})\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <Context.Provider value={ {\r\n            state: this.state, \r\n            \r\n            categoryMethods: this.categoryMethods,\r\n            onCheck: this.categoryMethods.onCheck, \r\n\r\n            fileDataMethods: this.fileDataMethods,\r\n            removeFile: this.fileDataMethods.removeFile,\r\n            uploadFile: this.fileDataMethods.uploadFile, \r\n            addFileToState: this.fileDataMethods.addFileToState,\r\n            onDragEnd: this.fileDataMethods.onDragEnd,\r\n\r\n            createFamilySetup: this.familySetupMethods.createFamilySetup,\r\n            getFamilySetup: this.familySetupMethods.getFamilySetup,\r\n            useFamilySetup: this.familySetupMethods.useFamilySetup,\r\n            familySetupMethods: this.familySetupMethods,\r\n\r\n            readImageDir: this.readImageDir,\r\n            changeFileName: this.changeFileName,\r\n            onChange: this.onChange,\r\n            verify: this.verify,\r\n            addNew: this.addNew,\r\n            deleteTheme: this.deleteTheme,\r\n            staticState: this.staticState,\r\n            inputFamilyDescription: this.inputFamilyDescription\r\n\r\n            } }>\r\n        {this.props.children}\r\n\r\n        {/* <BootstrapModal \r\n            showModal={this.state.showModal}\r\n            message={this.state.modalMessage}\r\n            onClose={() => {this.setState({showModal: false})}}\r\n            confirm={this.state.confirm || false}\r\n            confirmedAction={() => {\r\n            this.state.confirmedAction()\r\n                .then(res => {\r\n                this.setState({\r\n                    confirm: res.confirm,\r\n                    modalMessage: res.modalMessage\r\n                })\r\n                })\r\n                .catch(err => {\r\n                this.setState({\r\n                    confirm: err.confirm,\r\n                    modalMessage: err.modalMessage\r\n                })\r\n                })\r\n            }}\r\n        >\r\n            {this.state.progress ?\r\n            <ProgressBar now={this.state.progress ? this.state.progress : 100} /> :\r\n            null\r\n            }\r\n        </BootstrapModal> */}\r\n\r\n        </Context.Provider>\r\n    )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import '../css/components/navigationInfo.css';\r\n// import '../css/components/imageInfo.css';\r\n\r\nconst Categories = (props) => {\r\n\r\n    const target = props.fileName ? \r\n                props.context.state.fileData.files[props.fileName] :\r\n                props.context.state.familySetupdata\r\n\r\n    const deletePromise = (recordToDelete) => {\r\n        return new Promise((resolve, reject) => {\r\n            const categoryName = recordToDelete.category\r\n            const subcategory = recordToDelete.subcategory\r\n            const listitem = recordToDelete.listitem\r\n\r\n            const category = props.context.state.categoriesData.find(obj => obj.category === categoryName)\r\n            \r\n            let newCategoryObject = null\r\n\r\n            if(subcategory){\r\n                const currentSubcategory = category.subcategory[subcategory]\r\n                newCategoryObject = {\r\n                    ...category, \r\n                    subcategory: {...category.subcategory, \r\n                    [subcategory]: currentSubcategory\r\n                    }\r\n                }\r\n                if(listitem){\r\n                    newCategoryObject.subcategory[subcategory] = currentSubcategory.filter(listItem => listItem !== listitem)\r\n                }\r\n                else{\r\n                    delete newCategoryObject.subcategory[subcategory]\r\n                }\r\n            }\r\n            props.context.categoryMethods.deleteCategory(categoryName, newCategoryObject, recordToDelete)\r\n                .then(res => {\r\n                    res.modalMessage = res.modalMessage\r\n                    res.confirm = false\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    err.modalMessage = \"Action failed\"\r\n                    err.confirm = false\r\n                    reject(err)\r\n                })\r\n        })\r\n    }\r\n\r\n    const makeCategories = () => {\r\n        \r\n        let result = props.context.state.categoriesData.map(obj => {\r\n\r\n            let subcategories = null;\r\n\r\n            if(obj.subcategory){\r\n                let allSubcategories = Object.keys(obj.subcategory)\r\n                subcategories = allSubcategories\r\n                .map(subcategory => {\r\n    \r\n                    let listItems = obj.subcategory[subcategory].map((listitem, index) => {\r\n                        return (\r\n                            <li key={`${listitem}${index}}`} \r\n                            className={\r\n                            `list--listitem list-group-item themes-list\r\n                            ${props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category, subcategory, listitem) ? \"themes-list--selected\" : null}`}>\r\n                                {props.allowDelete ?                                 \r\n                                    <div\r\n                                        className={\"themes-list-delete\"}\r\n                                        key={`categories-delete-${obj.category}-${subcategory}-${listitem}`}\r\n                                        onClick={() => {\r\n                                            props.modalInvoke({\r\n                                                    requireActionConfirm: true,\r\n                                                    confirmedAction: () => deletePromise({category: obj.category, subcategory, listitem}),\r\n                                                    modalMessage: <span>Delete list item <strong>{listitem}</strong> from <strong>{subcategory}</strong> subcategory in <strong>{obj.category}</strong> category?</span>\r\n                                                }, \r\n                                                )\r\n\r\n                                        }}\r\n                                    >\r\n                                        <img alt=\"delete icon\" src=\"/icons/close-round-line.png\" />\r\n                                    </div> : \r\n                                    null\r\n                                }\r\n\r\n                                <label htmlFor={`filters-${obj.category}-${subcategory}-${listitem}`}>{listitem}</label>  \r\n                                <input \r\n                                id={`filters-${obj.category}-${subcategory}-${listitem}`}\r\n                                className=\"navigation-input listitem\" \r\n                                type=\"checkbox\" \r\n                                value={listitem} \r\n                                // id={listitem} \r\n                                onChange={(e) => props.context.onCheck(e, props.fileName)} \r\n                                checked={props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category, subcategory, listitem)}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    })\r\n                    \r\n                    return(\r\n                    <ul key={subcategory} id={subcategory} className=\"list--subcategory list-group list-group-item\">\r\n                        <div className={props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category, subcategory) ? \"themes-list--selected themes-list \" : \"themes-list \"}>\r\n                            {props.allowDelete ?                             \r\n                                <div\r\n                                    className={\"themes-list-delete\"}\r\n                                    key={`categories-delete-${obj.category}-${subcategory}`}\r\n                                    onClick={() => {\r\n\r\n                                        props.modalInvoke({\r\n                                            requireActionConfirm: true,\r\n                                            confirmedAction: () => deletePromise({category: obj.category, subcategory}),\r\n                                            modalMessage: <span>Delete <strong>{subcategory}</strong> subcategory from <strong>{obj.category}</strong> category?</span>\r\n                                        }, \r\n                                        )\r\n                                    }}\r\n                                >\r\n                                    <img alt=\"delete icon\" src=\"/icons/close-round-line.png\" />\r\n                                </div> : \r\n                                null\r\n                            }\r\n\r\n                            <label htmlFor={`filters-${obj.category}-${subcategory}`}>{subcategory}</label>\r\n                            <input \r\n                            id={`filters-${obj.category}-${subcategory}`}\r\n                            className=\"navigation-input subcategory\" \r\n                            type=\"checkbox\" \r\n                            value={subcategory} \r\n                            onChange={(e) => props.context.onCheck(e, props.fileName)} \r\n                            checked={props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category, subcategory)}\r\n                            />\r\n                        </div>\r\n                        {listItems}\r\n                     </ul>)\r\n                })\r\n            }\r\n            return (\r\n            <div key={obj.category} className=\"list-group\">\r\n                <ul id={obj.category} className=\"list--category\"> \r\n                    <div className={props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category) ? \"themes-list--selected themes-list\" : \"themes-list\"}>\r\n                        {props.allowDelete ?                         \r\n                            <div\r\n                                className={\"themes-list-delete\"}\r\n                                key={`categories-delete-${obj.category}`}\r\n                                onClick={() => {\r\n                                    console.log(\"CLICKED DELETE CATEGORY\")\r\n                                    props.modalInvoke({\r\n                                        requireActionConfirm: true,\r\n                                        confirmedAction: () => deletePromise({category: obj.category}),\r\n                                        modalMessage: <span>Delete <strong>{obj.category}</strong> category?</span>\r\n                                    }, \r\n                                    )\r\n                                }}\r\n                            >\r\n                                <img alt=\"delete icon\" src=\"/icons/close-round-line.png\" />\r\n                            </div> : \r\n                            null\r\n                        }\r\n                        \r\n                        <label htmlFor={`filters-${obj.category}`}>{obj.category}</label>\r\n                        <input \r\n                            id={`filters-${obj.category}`}\r\n                            className=\"navigation-input category\" \r\n                            type=\"checkbox\" \r\n                            value={obj.category} \r\n                            onChange={(e) => props.context.onCheck(e, props.fileName)} \r\n                            checked={props.context.categoryMethods.autoCheckCategories(props.fileName, obj.category)}\r\n                        /> \r\n                    </div>\r\n                    {subcategories}\r\n                </ul>\r\n            </div>\r\n            )\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    const checkOptionList = (nest) => {\r\n        if(props.context.state.categoriesOptionList){\r\n            if(props.context.state.categoriesOptionList.DOM){\r\n                return props.context.state.categoriesOptionList.DOM[nest]\r\n            }\r\n            else{ return null}\r\n        }\r\n        else{return null}\r\n    }\r\n\r\n        return(\r\n            <div className=\"list--container\">\r\n                {makeCategories()}\r\n\r\n                {props.addNew ? \r\n                    <div className=\"categories--addNew_container\" >\r\n                        <h5 className=\"navigation--addNew_title\">add new category</h5>\r\n                        <div className=\"navigation--addNew\">\r\n                            <input \r\n                                className=\"categories-input\"\r\n                                type=\"text\" \r\n                                list=\"datalist-add-categories\"\r\n                                name=\"add-category\" \r\n                                id=\"add-category\" \r\n                                placeholder=\"category\"\r\n                                onFocus={props.context.categoryMethods.getCategoryNames}\r\n                            />\r\n                            <datalist id=\"datalist-add-categories\">\r\n                                {checkOptionList(\"categories\")}\r\n                            </datalist>\r\n\r\n                            <input \r\n                                className=\"categories-input\"\r\n                                type=\"text\" \r\n                                list=\"datalist-add-subcategories\"\r\n                                name=\"add-subcategory\" \r\n                                id=\"add-subcategory\" \r\n                                placeholder=\"subcategory\"\r\n                                onFocus={props.context.categoryMethods.getSubcategoryNames}\r\n                            />\r\n\r\n                            <datalist id=\"datalist-add-subcategories\">\r\n                                \r\n                                {checkOptionList(\"subCategories\")}\r\n                            </datalist>\r\n\r\n                            <input \r\n                                className=\"categories-input\"\r\n                                type=\"text\" \r\n                                name=\"add-listitem\" \r\n                                id=\"add-listitem\" \r\n                                placeholder=\"listitem\"\r\n                            />\r\n                            <Button\r\n                                className=\"custom-button\"\r\n                                variant=\"success\" \r\n                                size=\"sm\"\r\n                                onClick={ () => {\r\n                                    console.log(\"SUBMIT CATEGORIES UPDATE\")\r\n                                    props.modalInvoke(null, props.context.categoryMethods.updateCategory()) \r\n                                }\r\n                                    // props.context.categoryMethods.updateCategory\r\n                                }\r\n                            >\r\n                                SUBMIT\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            \r\n            </div>\r\n            )\r\n  }\r\n\r\n  export default Categories\r\n","import React from 'react'\r\n\r\nconst DisplayTriggerList = (props) => {\r\n\r\n    const isChecked = (title, file, item) => {\r\n\r\n        if(props.familySetup){\r\n\r\n        }\r\n\r\n        if(title === \"category\"){\r\n            return file.displayTriggers ? file.displayTriggers[title].includes(item) : false\r\n        }\r\n        if(title === \"subcategory\"){\r\n            return file.displayTriggers ? file.displayTriggers[title].includes(item) : false\r\n        }\r\n        if(title === \"listitems\"){\r\n            return file.displayTriggers ? file.displayTriggers[title].includes(item) : false\r\n        }\r\n        if(title === \"themes\"){\r\n            if(file.displayTriggers && file.displayTriggers[title])\r\n            return file.displayTriggers ? file.displayTriggers[title].includes(item) : false\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    const createList = (title, data, fileName, familySetup) => {\r\n        if(!data){return}\r\n        if(data.length <= 0){return}\r\n        let list = data.map(item => {\r\n            if(item === \"\" || item === \" \"){return}\r\n            return <li key={`trigger-${title}-${item}`} className={`themes-list ${isChecked(props.title, props.file, item) ? \"themes-list--selected\" : \"\"}`}>\r\n                        <label htmlFor={`displayTriggers-${title}-${item}`}>{item}</label>\r\n                        <input \r\n                            id={`displayTriggers-${title}-${item}`}\r\n                            type=\"checkbox\"\r\n                            onChange={() => {}}\r\n                            checked={isChecked(props.title, props.file, item)}\r\n                            onChange={() => props.onChange(item, title, fileName, familySetup)}\r\n                        />\r\n                    </li>\r\n        })\r\n        return list\r\n    }\r\n\r\n    return(\r\n        <div className=\"displayTrigger-wrapper\">\r\n            <p className=\"displayTrigger-title\">{props.title}</p>\r\n            <ul>\r\n                {createList(props.title, props.data, props.file.fileName, props.familySetup)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTriggerList","import React from 'react'\r\nimport DisplayTriggerList from './DisplayTriggerList'\r\n\r\nconst DisplayTriggers = (props) => {\r\n\r\n    const getSubcategories = (file) => {\r\n        let categories = Object.keys(file.category)\r\n        let subcategories = []\r\n        categories.forEach(category => {\r\n            subcategories = [...subcategories, ...Object.keys(file.category[category])]\r\n        })\r\n        return subcategories\r\n    }\r\n    const getListitems = (file) => {\r\n        const categories = Object.keys(file.category)\r\n        let listItems = []\r\n        categories.forEach(category => {\r\n            let subcategories = Object.keys(file.category[category])\r\n            subcategories.forEach(sub => {\r\n                if(!file.category[category][sub].length > 0){return}\r\n                listItems = [...listItems, ...file.category[category][sub]]\r\n            })\r\n        })\r\n        return listItems\r\n    }\r\n    const getYearLocation = (file) => {\r\n        let array = []\r\n        if(file.year){array = [...array, file.year]}\r\n        if(file.location){array = [...array, file.location]}\r\n        return array\r\n    }\r\n    \r\n    return(\r\n        <div className=\"imageInfo--box\">\r\n            <div className=\"displayTrigger-container\">\r\n                <p className=\"displayTrigger-title\">Display triggers</p>\r\n                <DisplayTriggerList \r\n                    title={'category'}\r\n                    // data={props.file.displayTriggers[\"category\"]}\r\n                    data={Object.keys(props.file.category)}\r\n                    file={props.file}\r\n                    familySetup={props.familySetup}\r\n                    onChange={props.context.fileDataMethods.onChangeDisplayTriggers}\r\n                />\r\n                <DisplayTriggerList \r\n                    title={'subcategory'}\r\n                    // data={props.file.displayTriggers[\"subcategory\"]}\r\n                    data={getSubcategories(props.file)}\r\n                    file={props.file}\r\n                    familySetup={props.familySetup}\r\n                    onChange={props.context.fileDataMethods.onChangeDisplayTriggers}\r\n                />\r\n                <DisplayTriggerList \r\n                    title={'listitems'}\r\n                    // data={props.file.displayTriggers[\"listitems\"]}\r\n                    data={getListitems(props.file)}\r\n                    file={props.file}\r\n                    familySetup={props.familySetup}\r\n                    onChange={props.context.fileDataMethods.onChangeDisplayTriggers}\r\n                />\r\n                <DisplayTriggerList \r\n                    title={'themes'}\r\n                    data={props.file.themes}\r\n                    file={props.file}\r\n                    familySetup={props.familySetup}\r\n                    onChange={props.context.fileDataMethods.onChangeDisplayTriggers}\r\n                />\r\n                <div className=\"displayTrigger-wrapper\">\r\n                    <p className=\"displayTrigger-title\">Year/Location</p>\r\n                    <ul>\r\n                        {\r\n                            props.file.year ?\r\n                            <li key={`trigger-year`} className={`themes-list ${props.file.displayTriggers && props.file.displayTriggers[\"year\"] === props.file.year ? \"themes-list--selected\" : \"\"}`}>\r\n                                <span>{props.file.year}</span>\r\n                                <input \r\n                                    type=\"checkbox\"\r\n                                    checked={props.file.displayTriggers && props.file.displayTriggers[\"year\"] === props.file.year || false}\r\n                                    onChange={() => props.context.fileDataMethods.onChangeDisplayTriggers(props.file.year, \"year\", props.file.fileName, props.familySetup)}\r\n                                />\r\n                            </li>\r\n                            : null\r\n                        }\r\n                        {\r\n                            props.file.location ?\r\n                            <li key={`trigger-location`} className={`themes-list ${props.file.displayTriggers && props.file.displayTriggers[\"location\"] === props.file.location ? \"themes-list--selected\" : \"\"}`}>\r\n                                <span>{props.file.location}</span>\r\n                                <input \r\n                                    type=\"checkbox\"\r\n                                    checked={props.file.displayTriggers && props.file.displayTriggers[\"location\"] === props.file.location || false}\r\n                                    onChange={() => props.context.fileDataMethods.onChangeDisplayTriggers(props.file.location, \"location\", props.file.fileName, props.familySetup)}\r\n                                />\r\n                            </li>\r\n                            : null\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTriggers","import React from 'react'\r\n\r\nconst YearLocation = (props) => {\r\n    return(\r\n        <div className=\"imageInfo--box\" style={{display: \"block\"}}>\r\n            <div className=\"yearLocation-wrapper\">\r\n                <label \r\n                className={\"yearLocation-label\"}\r\n                htmlFor={\"filters-location\"}\r\n                >location:</label>\r\n                    <input \r\n                    className={\"yearLocation-input\"}\r\n                    id={\"filters-location\"}\r\n                    type=\"text\" \r\n                    value={props.location ? props.location : \"\" }\r\n                    onChange={(e) => {\r\n                        props.context.onChange(e, \"location\", props.fileName)\r\n                    }} \r\n                    />\r\n            </div>\r\n            <div className=\"yearLocation-wrapper\">\r\n                <label \r\n                className={\"yearLocation-label\"}\r\n                htmlFor={\"filters-year\"}\r\n                >year:</label>\r\n                    <input \r\n                    className={\"yearLocation-input\"}\r\n                    id={\"filters-year\"}\r\n                    type=\"number\" \r\n                    value={props.year ? props.year : \"\" }\r\n                    onChange={(e) => {\r\n                        props.context.onChange(e, \"year\", props.fileName)\r\n                    }} \r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YearLocation","import React from 'react';\r\nimport { Context } from '../../Provider';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nclass AddNew extends React.Component{\r\n\r\nstatic contextType = Context;\r\n\r\nconstructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        setShow: false,\r\n        show: false,\r\n        saveButtonText: \"Save Changes\",\r\n        spinnerDisplay: \"d-none\",\r\n        saveButtonDisable: false\r\n    }\r\n    this.handleClose = () => this.setState({\r\n        setShow: false, \r\n        show: false,\r\n        saveButtonText: \"Save Changes\",\r\n        spinnerDisplay: \"d-none\",\r\n        saveButtonDisable: false\r\n    });\r\n\r\n    this.handleShow = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            setShow: true, \r\n            show: true,\r\n            modalMessage: <span>Add <em>{document.getElementById(`add-${this.props.stateKey}-item`).value}</em> to <em>{this.props.stateKey}</em>?</span>\r\n        })\r\n    };\r\n    this.changeButtonText = (message) => {\r\n        this.setState({\r\n            spinnerDisplay: \"d-none\", \r\n            saveButtonText: \"Done\", \r\n            saveButtonDisable: true,\r\n            modalMessage: message\r\n            \r\n        })\r\n    };\r\n    this.verify = () => {\r\n        const result = this.context.verify()\r\n        if(result.verified){\r\n          return true\r\n        }\r\n        else{\r\n          this.setState({...result})\r\n          return false\r\n        }\r\n      }\r\n}\r\n\r\n\r\nrender(){\r\n    return(\r\n        <Context.Consumer>\r\n        {()=>{\r\n            if(!this.props.addNew){\r\n                return null\r\n            }\r\n            return(\r\n                <div className=\"addNew-container\">\r\n                    <form \r\n                    id={`formFor-${this.props.stateKey}`}\r\n                    action={this.props.router}\r\n                    onSubmit={this.handleShow}\r\n                    className=\"addNew-form\"\r\n                    >\r\n                            <label htmlFor={`add-${this.props.stateKey}-item`} \r\n                            // className=\"subtitle\"\r\n                            >{this.props.addNewTitle ? this.props.addNewTitle : `Add new ${this.props.stateKey}`}:</label>\r\n                            <div>\r\n                                <input \r\n                                    className=\"addNew-input\"\r\n                                    type=\"text\" \r\n                                    id={`add-${this.props.stateKey}-item`} \r\n                                />\r\n                                <Button \r\n                                variant=\"success\" size=\"sm\"\r\n                                type=\"submit\" \r\n                                form={`formFor-${this.props.stateKey}`}\r\n                                className=\"button-extend addNew-button\"\r\n                                > \r\n                                SUBMIT\r\n                                </Button>\r\n                            </div>\r\n                    </form>\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>Add to {this.props.stateKey}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {this.state.modalMessage}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button\r\n                        style={{transition: \"0.2s all\"}}\r\n                        disabled={this.state.saveButtonDisable}\r\n                        variant=\"primary\"\r\n                        onClick={ (e) => {\r\n                            // if(!this.verify({addNew: true})){\r\n                            //     return\r\n                            // }\r\n                            this.setState({\r\n                                saveButtonText: \"\",\r\n                                spinnerDisplay: \"d-block\",\r\n                            })\r\n                            this.context.addNew(\r\n                                e,\r\n                                `add-${this.props.stateKey}-item`,\r\n                                this.props.router,\r\n                                this.props.requestKey,\r\n                                this.props.stateKey,\r\n                                this.changeButtonText\r\n                            )\r\n                            .then(res => {\r\n                                this.setState({\r\n                                    modalMessage: \"Success.\",\r\n                                    saveButtonText: \"Done\",\r\n                                    spinnerDisplay: \"d-none\",\r\n                                    saveButtonDisable: true\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                this.setState({\r\n                                    modalMessage: \"Action Failed.\",\r\n                                    saveButtonText: \"Done\",\r\n                                    spinnerDisplay: \"d-none\",\r\n                                    saveButtonDisable: true\r\n                                })\r\n                            })\r\n                        }\r\n                        }\r\n                        >\r\n                        {this.state.saveButtonText}\r\n                        <Spinner \r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            borderWidth: \"2px\"\r\n                        }}\r\n                        animation=\"border\" \r\n                        variant=\"purple\" \r\n                        className={this.state.spinnerDisplay}\r\n                        />\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n            }\r\n        }\r\n        </Context.Consumer>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddNew;","import React from 'react';\r\nimport AddNew from './AddNew';\r\n\r\nexport default class DropDownList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          category: {}\r\n        }\r\n      }\r\n\r\ndeletePromise = (string, theme) => {\r\n    return new Promise((resolve, reject) => {\r\n        if(string !== \"themes\"){\r\n            reject()\r\n        }\r\n        else{\r\n            console.log(\"initiate context.deleteTheme\")\r\n            this.props.context.deleteTheme(theme)\r\n                .then(res => resolve())\r\n                .catch(err => reject())\r\n        }\r\n    })\r\n}      \r\n\r\n/**\r\n *@param {array} array source data for list\r\n *@param {string} string used for ids/names \r\n *@param {state} object main App state context or redux\r\n *@param {fileName} string targets a particular file record in state\r\n */\r\n    createDropDownList = (array, string, state, fileName) => {\r\n        let statePath = state.familySetupData\r\n\r\n        if(fileName){\r\n            statePath = state.fileData.files[fileName]\r\n        }\r\n\r\n        const highlighter = (string, listItem) => {\r\n            if(this.props.uncontrolled){\r\n                return\r\n            }\r\n            if(this.props.highlighted){\r\n                let highlighted = null\r\n                if(this.props.highlighted[string] && this.props.highlighted[string].includes(listItem)){\r\n                    highlighted = true\r\n                }\r\n                else{\r\n                    highlighted = false\r\n                }\r\n                if(highlighted){\r\n                }\r\n                return highlighted\r\n            }\r\n\r\n            if(string === \"artworkFamily\"){\r\n            }\r\n            if(!statePath[string]){\r\n                return false\r\n            }\r\n            if(statePath[string]){\r\n                if(typeof statePath[string] === 'string'){\r\n                    return statePath[string] === listItem\r\n                }\r\n                else if( Array.isArray(statePath[string]) ){\r\n                        return statePath[string].includes(listItem)\r\n                    }\r\n            }\r\n            else return false\r\n        }\r\n\r\n        // array = array.map(item => item.toUpperCase())\r\n\r\n        let lettersArray = []\r\n        array.forEach(item => {\r\n            if(!lettersArray.includes(item[0].toUpperCase())){\r\n                lettersArray = [...lettersArray, item[0].toUpperCase()]\r\n            }\r\n        })\r\n\r\n        let sortedByLetter = {}\r\n\r\n        lettersArray.sort().forEach(letter => {\r\n            if(Object.keys(lettersArray).includes(letter)){\r\n                sortedByLetter[letter] = []\r\n            }\r\n            sortedByLetter[letter] = array.filter(item => {\r\n                return item[0].toUpperCase() === letter.toUpperCase()\r\n            })\r\n        })\r\n        let listItem = (listItem) => {\r\n            return (\r\n                <li \r\n                className={`themes-list ${highlighter(string, listItem) ? 'themes-list--selected' : null}`} \r\n                key={`${string}-${listItem}`}\r\n                >\r\n\r\n                        {this.props.allowDelete ?                         \r\n                            <div\r\n                                className={\"themes-list-delete\"}\r\n                                key={`dropdown-${string}-delete-${listItem}`}\r\n                                onClick={() => {\r\n                                    this.props.modalInvoke({\r\n                                        requireActionConfirm: true,\r\n                                        confirmedAction: () => {\r\n                                            return new Promise((resolve, reject) => {\r\n                                                this.deletePromise(string, listItem)\r\n                                                    .then(res => resolve({confirm: false, modalMessage: \"Theme deleted.\"}))\r\n                                                    .catch(err => reject({confirm: false, modalMessage: \"Theme delete failed.\"}))\r\n                                            })\r\n                                        },\r\n                                        modalMessage: <span>Delete <strong>{listItem}</strong> {string}?</span>\r\n                                    }, \r\n                                    )\r\n                                }}\r\n                            >\r\n                                <img alt=\"delete icon\" src=\"/icons/close-round-line.png\" />\r\n                            </div> : \r\n                            null\r\n                        }   \r\n\r\n                    <label htmlFor={`${string}-${listItem}-${this.props.fileName || this.props.parent}`} className=\"themes-span\">{listItem}</label>\r\n\r\n                    {this.props.uncontrolled ?   \r\n                        <input \r\n                            id={`${string}-${listItem}-${this.props.fileName || this.props.parent}`}\r\n                            className=\"themes-checkbox\" \r\n                            type={ !this.props.checkbox ? \"radio\" : \"checkbox\"}\r\n                            // checked={highlighter(string, listItem)}\r\n                            value={listItem}\r\n                            name={string}\r\n                            onChange={(e) => {\r\n                                // e.target.parentNode.classList.toggle(\"themes-list--selected\")\r\n                                // this.props.onChange(e.target.value, e.target.checked, string)\r\n                                this.props.onChange(e.target.value, string, fileName)\r\n                                return\r\n                            }}\r\n                        />\r\n\r\n                        :\r\n\r\n                        <input \r\n                            id={`${string}-${listItem}-${this.props.fileName || this.props.parent}`}\r\n                            className=\"themes-checkbox\" \r\n                            type={ !this.props.checkbox ? \"radio\" : \"checkbox\"}\r\n                            value={listItem}\r\n                            name={string}\r\n                            checked={highlighter(string, listItem)}\r\n                            onChange={(e) => {\r\n                                this.props.onChange(e.target.value, string, fileName)\r\n                                return\r\n                            }}\r\n                        />   \r\n                    }\r\n\r\n                </li>\r\n            )\r\n        }\r\n\r\n        const listsByLetter = () => {\r\n            let finalList = Object.keys(sortedByLetter).map(letter => {\r\n                return <div \r\n                            key={`dropdown-${string}-${letter}`}\r\n                            className=\"dropdown-container\"\r\n                        >\r\n                        <p className=\"dropdown-headline\">{letter.toUpperCase()}</p>\r\n                        <ul>\r\n                            {sortedByLetter[letter].sort().map(item => {\r\n                            return listItem(item)\r\n                            })}\r\n                        </ul>\r\n                       </div>\r\n            })\r\n            return finalList\r\n        }\r\n\r\n        return listsByLetter()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"grid-wrapper\">\r\n                {this.createDropDownList(this.props.array, this.props.string, this.props.state, this.props.fileName)}\r\n                <AddNew \r\n                    addNew={this.props.addNew}\r\n                    addNewTitle={this.props.addNewTitle}\r\n                    router={this.props.router}\r\n                    stateKey={this.props.addNewTarget}\r\n                    requestKey={this.props.requestKey}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DropDownList from '../../DropDownList'\r\n\r\nconst Themes = (props) => {\r\n    return(\r\n        <DropDownList \r\n        title={\"Select Family Themes\"}\r\n        context={props.context}\r\n        state={props.context.state}\r\n        array={props.dataArray}\r\n        onChange={props.onChange}\r\n        isChecked={props.isChecked}\r\n        checkbox\r\n        fileName={props.fileName}\r\n        string={\"themes\"}\r\n        id=\"Themes-list\"\r\n        \r\n        router={'/api/themes/update'}\r\n        addNewTarget={'themesData'}\r\n        addNew={props.addNew}\r\n        addNewTitle=\"Add new Theme\"\r\n        requestKey={\"list\"}\r\n\r\n        allowDelete={props.allowDelete}\r\n        modalInvoke={props.modalInvoke}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Themes ","import React from 'react'\r\nimport Categories from './subcomponents/Categories'\r\nimport DisplayTriggers from './subcomponents/DisplayTriggers/DisplayTriggers'\r\nimport YearLocation from './subcomponents/YearLocation'\r\nimport Themes from './subcomponents/Themes'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\n\r\nconst Filters = (props) => {\r\n    const data = props.fileName ? props.context.state.fileData.files[props.fileName] : props.context.state.familySetupData\r\n    const onChange = props.fileName ? props.context.fileDataMethods.onChange : props.context.familySetupMethods.onChange\r\n\r\n    return(\r\n        <div className=\"Tabs-container\">\r\n            <Tabs defaultActiveKey=\"categories\" transition={false} id=\"noanim-tab-example\">\r\n                <Tab eventKey=\"categories\" title=\"Categories\">\r\n                    <Categories \r\n                        context={props.context}\r\n                        fileName={data.fileName ? data.fileName : null}\r\n                        modalInvoke={props.modalInvoke}\r\n                        allowDelete={props.allowCategoriesDelete}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"displayTriggers\" title=\"Display Triggers\">\r\n                    <DisplayTriggers \r\n                        file={data}\r\n                        context={props.context}\r\n                        familySetup={data.fileName ? false : true}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"themes\" title=\"Themes\">\r\n                    <Themes \r\n                        context={props.context}\r\n                        dataArray={props.context.state.themesData}\r\n                        onChange={onChange}\r\n                        fileName={data.fileName ? data.fileName : null}\r\n                        modalInvoke={props.modalInvoke}\r\n                        allowDelete={props.allowThemesDelete}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"yearAndLocation\" title=\"Year and Location\">\r\n                    <YearLocation \r\n                        year={data.year}\r\n                        location={data.location}\r\n                        context={props.context}\r\n                        fileName={data.fileName ? data.fileName : null}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters","import React, { Fragment } from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\n\r\nconst FamilyDescription = (props) => {\r\n    const target = !props.fileName ?\r\n    props.context.state.familySetupData :\r\n    props.context.state.fileData.files[props.fileName]\r\n    return(\r\n        <div className=\"imageInfo--box familyDescription\"  style={{display: \"block\"}}>\r\n        <div>\r\n            <p>Family description:</p> \r\n            <p className=\"subtitle\">this description will appear on each item in the artwork family</p>\r\n        </div>\r\n        <textarea\r\n            id=\"input_familyDescription\"\r\n            value={target.familyDescription || \"\"}\r\n            onChange={\r\n                (e) => {\r\n                    const inputvalue = e.target.value\r\n                    props.context.inputFamilyDescription(inputvalue)\r\n                }\r\n            }\r\n            style={{width: \"100%\"}}\r\n        ></textarea>\r\n        <div style={{border: \"1px solid \"}}>\r\n            <p>preview</p>\r\n            <div style={{border: \"1px solid black\"}}>\r\n                {\r\n                    target.familyDescription ? \r\n                        target.familyDescription ? <div>{ ReactHtmlParser(target.familyDescription)}</div> : \"\"\r\n                    : \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FamilyDescription","import React from 'react';\r\n\r\nconst ArtworkInfo = (props) => {\r\n    return(\r\n            <div>\r\n                <div className=\"imageInfo--box\">\r\n                    <div>\r\n                    <p>Add Artwork title:</p> \r\n                    <p className=\"subtitle\">(different from family name):</p>\r\n                    </div>\r\n                    <input \r\n                    value={props.file.artworkTitle || \"\"}\r\n                    type=\"text\" \r\n                    onChange={(e) => props.context.onChange(e, 'artworkTitle', props.file.fileName)} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"imageInfo--box\">\r\n                <span>display on main page:</span>\r\n                <form className=\"artworkinfo--form\">\r\n                    <div className=\"container-radio\">\r\n                        <label htmlFor=\"mainDisplayIndex_yes\">yes</label>\r\n                        <input \r\n                        type=\"radio\" \r\n                        // defaultChecked \r\n                        checked={props.state.fileData.files[props.file.fileName].displayMain}\r\n                        name=\"mainDisplayIndex\" \r\n                        id=\"mainDisplayIndex__yes\" \r\n                        value=\"yes\" \r\n                        onChange={(e)=>{props.onChange(e, \"displayMain\", props.file.fileName)}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"container-radio\">\r\n                        <label htmlFor=\"mainDisplayIndex_no\">no</label>\r\n                        <input \r\n                        checked={!props.state.fileData.files[props.file.fileName].displayMain}\r\n                        type=\"radio\" \r\n                        name=\"mainDisplayIndex\" \r\n                        id=\"mainDisplayIndex__no\" \r\n                        value=\"no\" \r\n                        onChange={(e)=>{props.onChange(e, \"displayMain\", props.file.fileName)}}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                \r\n                </div>\r\n\r\n                <div className=\"imageInfo--box\"></div>\r\n\r\n                {/* DESCRIPTION */}\r\n                <div className=\"imageInfo--box\"  style={{display: \"block\"}}>\r\n                    <div>\r\n                        <p>Artwork description:</p> \r\n                        <p className=\"subtitle\">this is describes particulars of a work in a series or exhibit in a show</p>\r\n                    </div>\r\n                    <textarea\r\n                        value={props.file.artworkDescription || \"\"}\r\n                    onChange={\r\n                        (e) => props.context.onChange(e, \"artworkDescription\", props.file.fileName)\r\n                    }\r\n                    style={{width: \"100%\"}}\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n    )\r\n  }\r\n\r\n  export default ArtworkInfo","import React from 'react';\r\n\r\nexport default class FilePreview extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    fileContainer = (fileType, file) => {\r\n\r\n        //files in server dont have 'preview' property, and files in state dont have filePath\r\n        const previewSource = file.filePath ? file.mobilePath : file.preview\r\n\r\n        if(fileType.match('image')){\r\n            return <img className=\"ImagesPreview--image\" alt={file.fileName} src={`/${previewSource}`} />\r\n          \r\n        }\r\n        if(fileType.match('video')){\r\n            return(\r\n                <video \r\n                className=\"ImagesPreview--image\" \r\n                controls\r\n                >\r\n                    <source src={previewSource} type={fileType} />\r\n                    Your browser does not support the video tag.\r\n                </video> \r\n            )\r\n        }\r\n        if(fileType.match('audio')){\r\n            return(\r\n                <audio \r\n                className=\"ImagesPreview--image\" \r\n                controls\r\n                >\r\n                    <source src={previewSource} type={fileType} />\r\n                    Your browser does not support the audio tag.\r\n                </audio> \r\n            )\r\n        }\r\n        if(fileType.match(\"application/pdf\")){\r\n            return(\r\n                    <iframe src={previewSource} style={{width: \"100%\"}}></iframe>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.props.noWrapper){\r\n            return this.fileContainer(this.props.file.fileType, this.props.file)\r\n        }\r\n        else{\r\n            return(\r\n            <div className=\"ImagesPreview--imageContainer\">\r\n                {this.fileContainer(this.props.file.fileType, this.props.file)}\r\n                {/* <input\r\n                type=\"text\" \r\n                className=\"ImagesPreview--fileName\"\r\n                placeholder={this.props.file.fileName}\r\n                >\r\n                </input> */}\r\n            </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport FilePreview from '../FilePreview'\r\n\r\nconst ImageBox = (props) => {\r\n    const highlighter = (fileName) => {\r\n        return props.directory ? props.directory.includes(fileName) : false\r\n    }\r\n    return(\r\n        <div \r\n        // className=\"imageBox\" \r\n        className={`imageBox__wrapper ${props.customClass ? props.customClass : \"\"} ${highlighter(props.file.fileName)? 'themes-list--selected' : 'notSelected'}`}>\r\n        <FilePreview \r\n            file={props.file}\r\n        >\r\n        </FilePreview>\r\n        <div className=\"imageBox__text\">\r\n            <div className=\"\">\r\n                <p className=\"title\">File Name:</p> \r\n                <p>{props.file.fileName}</p>\r\n            </div>\r\n\r\n            <div>\r\n                <p className=\"title\">Artwork Family:</p> \r\n                <p>{props.file.artworkFamily}</p>\r\n            </div>\r\n            {props.children}    \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageBox","import React, { Fragment } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport FilePreview from '../../FilePreview'\r\nimport ImageBox from '../../ImageBox/ImageBox'\r\n\r\nconst DnDListDraggable = (props) => {\r\n    if(!props.file){\r\n        return null\r\n    }\r\n    return(\r\n        <Draggable\r\n        draggableId={props.file.fileName} \r\n        index={props.index}\r\n        >\r\n        {(provided)=>{\r\n            return(\r\n                <div className=\"draggable-container\"\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                >  \r\n\r\n                        <div\r\n                            {...provided.dragHandleProps}\r\n                            onMouseDown={(e)=>{\r\n                                const dragHandle = e.target\r\n                                if(!e.target.classList.contains('mouseDown')){\r\n                                    e.target.classList.add('mouseDown')\r\n                                }\r\n                                provided.dragHandleProps.onMouseDown(e)\r\n\r\n                                document.addEventListener('mouseup', () => {dragHandle.classList.remove('mouseDown')})\r\n                                }\r\n                            }\r\n                        >\r\n                            <div className=\"image-index-box\">\r\n                                <FilePreview \r\n                                    file={props.file}\r\n                                />\r\n                                <div className=\"draggable--index\">\r\n                                    <div>\r\n                                        { props.relatedArtwork.column.fileIds.indexOf(props.file.fileName) }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        \r\n                            \r\n                        {/* <div className=\"button-container\">\r\n                                <div \r\n                                // className=\"draggable--dragHandle custom-button\"\r\n                                // id={`draghandle--${props.index}`}\r\n                                {...provided.dragHandleProps}\r\n                                onMouseDown={(e)=>{\r\n                                    const dragHandle = e.target\r\n                                    if(!e.target.classList.contains('mouseDown')){\r\n                                        e.target.classList.add('mouseDown')\r\n                                    }\r\n                                    provided.dragHandleProps.onMouseDown(e)\r\n\r\n                                    document.addEventListener('mouseup', () => {dragHandle.classList.remove('mouseDown')})\r\n                                    }\r\n                                }\r\n                                >\r\n                                    DRAG\r\n                                </div>   \r\n                        </div> */}\r\n\r\n                \r\n                </div>\r\n            )\r\n        }}\r\n    </Draggable>\r\n    )\r\n}\r\n\r\nexport default DnDListDraggable","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport FamilyListDraggable from './FamilyListDraggable';\r\n\r\nconst DndListDroppable = (props) => {\r\n\r\n    return(\r\n            <Droppable \r\n            droppableId={`${props.artworkFamily}-relatedArtworks`}\r\n            >\r\n            {provided =>{\r\n                let orderData = props.column.fileIds \r\n                // ? props.column.fileIds : Object.keys(props.files)\r\n                            return(\r\n                                <div \r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className=\"DnDfilesList\"\r\n                                >\r\n                                    {orderData.map((fileId, index) => {\r\n                                        return (\r\n\r\n                                        <FamilyListDraggable\r\n                                            key={`${fileId}-in-${props.column.id}-${index}-familyList`} \r\n                                            file={props.files[fileId]} \r\n                                            columnId={props.column.id}\r\n                                            index={index}\r\n                                            relatedArtwork={props}\r\n                                            >\r\n                                        </FamilyListDraggable>\r\n                                        )\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )\r\n                        }}\r\n            </Droppable>\r\n        )\r\n}\r\n\r\nexport default DndListDroppable","import React from 'react';\r\nimport { Context } from '../../../Provider';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport FamilyListDroppable from './subcomponents/FamilyListDroppable'\r\n\r\nexport default class ArrangeFamilyIndexes extends React.Component{\r\n    static contextType = Context;\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = null\r\n    }\r\n\r\n    createDroppable = () => {\r\n        return(\r\n            <FamilyListDroppable \r\n            key={this.props.data.column.id}\r\n            column={this.props.data.column}\r\n            files={this.props.data.files}\r\n            columnIndex={0}\r\n            fileName={this.props.file.fileName}\r\n            artworkFamily={this.props.file.artworkFamily}\r\n            >\r\n            </FamilyListDroppable>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.props.data){\r\n            return(\r\n                <DragDropContext \r\n                    onDragEnd={this.context.fileDataMethods.onDragEndFamilyList}>\r\n                    {this.props.data ? this.createDroppable() : null}\r\n                </DragDropContext>  \r\n            )\r\n\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport ImageBox from '../ImageBox/ImageBox'\r\n\r\nconst SeeAlso = (props) => {\r\n\r\n    const highlighter = (fileName) => {\r\n        return props.directory ? props.directory.includes(fileName) : false\r\n    }\r\n\r\n    return(\r\n            <ImageBox\r\n                file={props.file}\r\n                directory={props.directory}\r\n            >\r\n                <div style={{border: \"1px solid grey\", padding: \"2px\"}}>\r\n                    <p style={{fontSize: \"10px\"}}>use as See Also recommendation</p>\r\n                    <form style={{display:\"flex\", justifyContent:\"space-evenly\"}}>\r\n                        <div className=\"container-radio\">\r\n                            <input type=\"radio\" \r\n                            name=\"useAsSeeAlso\" \r\n                            id={`${props.file.fileName}-useAsSeeAlso__radio-yes`} \r\n                            value=\"yes\" \r\n                            onChange={(e) => {\r\n\r\n                                props.onChange(props.file.fileName, props.parent)\r\n                                // props.onChange(e, \"seeAlso\", props.file.fileName)\r\n                            }}\r\n                            checked={highlighter(props.file.fileName)}\r\n                            />\r\n                            <label \r\n                            htmlFor=\"useAsSeeAlso_yes\"\r\n                            id=\"useAsSeeAlso_yes\"\r\n                            >yes</label>\r\n                        </div>\r\n                        <div className=\"container-radio\">\r\n                            <input type=\"radio\" \r\n                            name=\"useAsSeeAlso\" \r\n                            id={`${props.file.fileName}-useAsSeeAlso__radio-no`} \r\n                            value=\"no\" \r\n                            onChange={(e) => {\r\n                                props.onChange(props.file.fileName, props.parent)\r\n                                // props.onChange(e, \"seeAlso\", props.file.fileName)\r\n                            }}\r\n                            checked={!highlighter(props.file.fileName)}\r\n                            />\r\n                            <label htmlFor=\"useAsSeeAlso_no\">no</label>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </ImageBox>\r\n    )\r\n}\r\n\r\nexport default SeeAlso","import React from 'react'\r\nimport DropDownList from '../../DropDownList'\r\n\r\nconst SelectFamily = (props) => {\r\n    return(\r\n        <DropDownList \r\n            title={'Select Artwork Family'}\r\n            parent={props.parent}\r\n            state={props.context.state}\r\n            array={props.context.state.artworkFamilyList}\r\n            onChange={props.onChange || props.context.getFamilySetup}\r\n            uncontrolled={props.uncontrolled}\r\n            checkbox={!props.radio ? true : false}\r\n            fileName={props.fileName}\r\n            string={\"artworkFamily\"}\r\n            id=\"List-of-artwork-families\"\r\n            highlighted={props.highlighted}\r\n\r\n            router={'/api/familySetup/create'}\r\n            addNewTarget={'artworkFamilyList'}\r\n            addNew={props.addNew}\r\n            addNewTitle=\"Add new Artwork Family name\"\r\n            requestKey={\"artworkFamily\"}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SelectFamily","import React from 'react'\r\nimport {Accordion as BootstrapAccordion, Card, Button} from 'react-bootstrap'\r\n\r\nconst Accordion = (props) => {\r\n    return(\r\n        <BootstrapAccordion>\r\n            <Card>\r\n                <Card.Header>\r\n                <BootstrapAccordion.Toggle \r\n                    style={{fontWeight: \"600\"}}\r\n                    as={Button} \r\n                    variant=\"link\" \r\n                    eventKey=\"0\" \r\n                    className={props.className}\r\n                >\r\n                    {props.title}\r\n                </BootstrapAccordion.Toggle>\r\n                </Card.Header>\r\n                <BootstrapAccordion.Collapse id={props.collapseId} eventKey=\"0\">\r\n                <Card.Body>\r\n                    {props.children}\r\n                </Card.Body>\r\n                </BootstrapAccordion.Collapse>\r\n            </Card>\r\n        </BootstrapAccordion>  \r\n    )\r\n}\r\n\r\nexport default Accordion","import React, { Fragment } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport SeeAlso from './SeeAlso'\r\nimport SelectFamily from '../FamilyInfo/subcomponents/SelectFamily'\r\nimport Accordion from '../Accordion'\r\n\r\nexport default class SeeAlsoContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            highlighted: {artworkFamily: []},\r\n            fileList: this.props.initialData,\r\n            allFiles: this.props.initialData\r\n        }\r\n    }\r\n\r\n    renderContainer = (data) => {\r\n        const fileNames = Object.keys(data).filter(fileName => fileName !== this.props.parent.fileName)\r\n        const list = fileNames.map(fileName => {\r\n            return <SeeAlso \r\n                        key={`seeAlso-${fileName}`}\r\n                        file={data[fileName]}\r\n                        directory={this.props.directory}\r\n                        onChange={this.props.context.fileDataMethods.updateSeeAlso}\r\n                        parent={this.props.parent.fileName}\r\n                        // onChange={this.props.context.onChange}\r\n                    />\r\n        })\r\n    return <div className=\"admin-seeAlso-container grid-wrapper\">{list}</div>\r\n    }\r\n\r\n    filterByFamily = (value, checked, string) => {\r\n        console.log(\"filter family runs\")\r\n        let newState = {...this.state}\r\n\r\n            //REMOVE\r\n        if(!checked){\r\n            const data = this.state.fileList\r\n            const list = Object.keys(this.state.fileList)\r\n            let newList = {}\r\n            let newHighlighted = []\r\n            list.forEach(objName => {\r\n                const currentObj = data[objName]\r\n                if(currentObj.artworkFamily !== value){\r\n                    newList = {...newList, [objName]: currentObj}\r\n                    // newHighlighted = [...newHighlighted, objName]\r\n                }\r\n            })\r\n            newState.fileList = newList\r\n            // newState.highlighted[string] = newHighlighted\r\n            newHighlighted = list.filter(fileName => {\r\n                return data[fileName].artworkFamily !== value\r\n            })\r\n            console.log(\"newState.highlighted[string]\")\r\n            console.log(newHighlighted)\r\n            return this.setState(newState)\r\n            // return this.setState({fileList: newList, highlighted: {...this.state.highlighted,\r\n            //     [string]: newHighlighted\r\n            // }})\r\n        }\r\n\r\n            //ADD\r\n        else{\r\n            let newList = {...this.state.fileList}\r\n            if(Object.keys(this.state.fileList).length === Object.keys(this.state.allFiles).length){\r\n                newList = {}\r\n            }\r\n            const data = this.state.allFiles\r\n            const list = Object.keys(this.state.allFiles)\r\n            if(!newState.highlighted[string]){\r\n                newState.highlighted[string] = []\r\n            }\r\n            let newHighlighted = newState.highlighted[string]\r\n            list.forEach(objName => {\r\n                if(data[objName].artworkFamily === value){\r\n                    const obj = data[objName]\r\n                    newList = {...newList, [objName]: obj}\r\n                    newHighlighted = [...newHighlighted, objName]\r\n                }\r\n            })\r\n            newState.fileList = newList\r\n            newState.highlighted[string] = newHighlighted\r\n            console.log(newState.highlighted)\r\n            return this.setState(newState)\r\n        }\r\n    }\r\n\r\n    reloadAll = () => {\r\n        this.setState({fileList: this.state.allFiles})\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState({fileList: this.props.initialData, allFiles: this.props.initialData})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <Accordion\r\n                    title={\"filter by family\"}\r\n                >\r\n                    <SelectFamily \r\n                        context={this.props.context}\r\n                        onChange={this.filterByFamily}\r\n                        checkbox\r\n                        // uncontrolled\r\n                        highlighted={this.state.highlighted}\r\n                    />\r\n                    <Button \r\n                        onClick={() => {\r\n                            this.reloadAll()\r\n                        }}\r\n                    >\r\n                        reload all\r\n                    </Button>\r\n                </Accordion>\r\n\r\n                {this.renderContainer(this.state.fileList)}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport FamilyDescription from './subcomponents/FamilyDescription'\r\nimport SelectFamily from './subcomponents/SelectFamily'\r\nimport Accordion from '../Accordion'\r\n\r\nconst EditFamilyInfo = (props) => {\r\n    return(\r\n        <div className=\"themeSelector\">\r\n            <Accordion title=\"Select Artwork Family\">\r\n                <SelectFamily \r\n                    context={props.context}\r\n                    addNew={props.addNew}\r\n                    parent={\"EditFamilyInfo\"}\r\n                    fileName={props.fileName}\r\n                    uncontrolled={props.unconctrolled}\r\n                    radio\r\n                />\r\n            </Accordion>\r\n            <FamilyDescription \r\n                context={props.context}\r\n                fileName={props.fileName}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFamilyInfo","import React from 'react'\r\nimport ArtworkInfo from '../ArtworkInfo/ArtworkInfo'\r\nimport Filters from '../Filters/Filters'\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport BootstrapModal from '../BootstrapModal'\r\nimport { Button } from 'react-bootstrap' \r\nimport ArrangeFamilyIndexes from '../ArrangeIndexes/ArrangeFamilyIndexes'\r\nimport SeeAlsoContainer from '../SeeAlso/SeeAlsoContainer'\r\nimport SelectFamily from '../FamilyInfo/subcomponents/SelectFamily'\r\nimport ImageBox from '../ImageBox/ImageBox'\r\n\r\nexport default class EditArtwork extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          submitButtons: null,\r\n          showModal: null,\r\n          modalMessage: null\r\n        }\r\n      }\r\n\r\n      render(){\r\n          return (\r\n              <div key={`FileInfo_${this.props.file.fileName}`} className=\"FamilyList--detail\">\r\n  \r\n                  <ImageBox\r\n                      file={this.props.file}\r\n                  >\r\n                  </ImageBox>\r\n  \r\n                  <div className=\"FamilyList--detail__info\">\r\n\r\n                  <Tabs defaultActiveKey=\"artworkInfo\" transition={false} id=\"uploadFile-details\">\r\n                    <Tab eventKey=\"artworkFamily\" title=\"Select Artwork Family\">\r\n                        <SelectFamily \r\n                            context={this.props.context}\r\n                            fileName={this.props.file.fileName}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"artworkInfo\" title=\"Artwork Info\">\r\n                        <ArtworkInfo \r\n                            file={this.props.file}\r\n                            fileName={this.props.file.fileName}\r\n                            onChange={this.props.context.onChange}\r\n                            state={this.props.context.state}\r\n                            context={this.props.context}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"filters\" title=\"Filters\">\r\n                        <Filters \r\n                            context={this.props.context}\r\n                            fileName={this.props.file.fileName}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"arrangeIndexes\" title=\"Arrange image indexes\">\r\n                        <ArrangeFamilyIndexes \r\n                            data={this.props.context.state.relatedArtwork[this.props.file.artworkFamily]}\r\n                            file={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"seeAlso\" title=\"Select See Also recommendations\">\r\n                        <SeeAlsoContainer \r\n                            directory={this.props.context.state.fileData.files[this.props.file.fileName].seeAlso}\r\n                            initialData={this.props.context.state.artworkInfoData}\r\n                            context={this.props.context}\r\n                            parent={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                  </Tabs>\r\n  \r\n                  <div className=\"FamilyList--submit-delete-container\">  \r\n                      <Button\r\n                          variant=\"danger\"\r\n                          className=\"custom-button\"\r\n                          onClick={ () => this.props.context.fileDataMethods.removeFile(this.props.file.fileName, this.props.artworkFamily)}\r\n                      >\r\n                          Remove\r\n                      </Button>   \r\n                      <Button\r\n                          variant=\"success\"\r\n                          className=\"custom-button\"\r\n                          onClick={() => {\r\n                              const verification = this.props.context.verify()\r\n                              if(!verification.verified){\r\n                                  return this.setState({showModal: true, modalMessage: verification.modalMessage})\r\n                              }\r\n                              this.setState({\r\n                                  showModal: true,\r\n                                  modalMessage: \"loading...\"\r\n                              })\r\n                              const postRes = this.props.context.fileDataMethods.postArtworkInfo(this.props.file)\r\n                              postRes\r\n                              .then( res => {\r\n                                  this.setState({\r\n                                      modalMessage: res\r\n                                  })\r\n                              })\r\n                              .catch(err => {\r\n                                  this.setState({\r\n                                      modalMessage: err\r\n                                  })\r\n                              })\r\n                          }\r\n                          }\r\n                      >\r\n                          Submit to server\r\n                      </Button>\r\n  \r\n                  </div>\r\n  \r\n                      <BootstrapModal \r\n                          showModal={this.state.showModal}\r\n                          message={this.state.modalMessage}\r\n                          onClose={() => {this.setState({showModal: false})}}\r\n                      />\r\n  \r\n                  </div>    \r\n  \r\n              </div>\r\n          )\r\n      }\r\n}\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap' \r\n\r\nconst EditFileButtons = (props) => {\r\n    return (\r\n        <div className=\"EditDetailContainer--button-wrapper\">\r\n            <Link to={`/admin/edit/${props.file.fileName}`}>\r\n                <Button\r\n                    onClick={(e) => {\r\n                        props.context.fileDataMethods.serverFileToState(props.file)\r\n                            .then(res => console.log(res))\r\n                            .catch(rej => console.log(rej))\r\n                    }}\r\n                >\r\n                    Edit\r\n                </Button>\r\n            </Link>\r\n            <Button\r\n                    className=\"delete-button\"\r\n                    onClick={() => {\r\n                            props.onModalClick(props.file.fileName)\r\n                    }}\r\n                >\r\n                    Delete\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFileButtons","import React, { Fragment } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport BootstrapModal from '../BootstrapModal';\r\nimport ImageBox from '../ImageBox/ImageBox';\r\nimport EditFileButtons from '../ImageBox/optionalComponents/EditFileButtons'\r\nimport FilePreview from '../FilePreview'\r\nimport SelectFamily from '../FamilyInfo/subcomponents/SelectFamily'\r\nimport Accordion from '../Accordion';\r\nimport SeeAlso from './SeeAlso'\r\n\r\nexport default class SeeAlsoPicker extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            modalMessage: null,\r\n            modalConfirm: true,\r\n            fileList: this.props.context.state.artworkInfoData,\r\n            allFiles: this.props.context.state.artworkInfoData\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({showModal: false, modalConfirm: true})\r\n    }\r\n\r\n    verify = () => {\r\n        const result = this.props.context.verify()\r\n        console.log(\"result\")\r\n        console.log(result)\r\n        if(result.verified){\r\n          return true\r\n        }\r\n        else{\r\n          this.setState({...result})\r\n          return false\r\n        }\r\n      }\r\n\r\n    EditDetail = (file) => {\r\n        return <SeeAlso \r\n                    key={`seeAlso-${file.fileName}`}\r\n                    file={file}\r\n                    directory={this.props.directory}\r\n                    onChange={this.props.context.fileDataMethods.updateSeeAlso}\r\n                    parent={this.props.parent.fileName}\r\n                    // onChange={this.props.context.onChange}\r\n                />\r\n    }\r\n\r\n    filterByFamily = (value) => {\r\n        let newRenderList = {}\r\n        const data = this.state.allFiles\r\n        const list = Object.keys(this.state.allFiles)\r\n        list.forEach(objName => {\r\n            if(data[objName].artworkFamily === value){\r\n                const obj = data[objName]\r\n                newRenderList = {...newRenderList, [objName]: obj}\r\n            }\r\n        })\r\n        this.setState({fileList: newRenderList}, () => {console.log('filter done'); console.log(this.state)})\r\n    }\r\n\r\n    reloadAll = () => {\r\n        this.setState({fileList: this.state.allFiles})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({fileList: this.props.context.state.artworkInfoData})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div \r\n                id={'familyContainer-seeAlso'}\r\n                className={\"EditDetailContainer\"}\r\n                >\r\n                    <div className=\"familyPicker\">\r\n                        <button\r\n                            // size=\"sm\"\r\n                            // variant=\"primary\"\r\n                            className={\"btn-sm btn-primary familyPicker-reload\"}\r\n                            onClick={this.reloadAll}\r\n                        >\r\n                            reload file list\r\n                        </button>\r\n                        <Accordion\r\n                            title={\"filter by family\"}\r\n                        >\r\n                            <SelectFamily \r\n                                context={this.props.context}\r\n                                onChange={this.filterByFamily}\r\n                            />\r\n                        </Accordion>\r\n                    </div>\r\n\r\n\r\n                    <div \r\n                    className={\"grid-wrapper\"}\r\n                    // style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}\r\n                    >\r\n                        {\r\n                            Object.keys(this.state.fileList).map(fileName => {\r\n                                return this.EditDetail(this.props.context.state.artworkInfoData[fileName])\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport ArtworkInfo from '../ArtworkInfo/ArtworkInfo'\r\nimport BootstrapModal from '../BootstrapModal'\r\nimport Filters from '../Filters/Filters'\r\nimport EditFamilyInfo from '../FamilyInfo/EditFamilyInfo';\r\n\r\nimport ImageBox from '../ImageBox/ImageBox';\r\nimport ArrangeFamilyIndexes from '../ArrangeIndexes/ArrangeFamilyIndexes';\r\nimport SeeAlsoPicker from '../SeeAlso/SeeAlsoPicker';\r\n\r\n/**\r\n * @props file \r\n * @props state\r\n * @props controls\r\n * @props familyDropDown \r\n * @props themesDropDown\r\n * @props seeAlso {                    \r\n *  state: this.context.state,\r\n    context: this.context,\r\n    initialData: this.context.state.artworkInfoData,\r\n    onChange: this.context.fileDataMethods.onChange, \r\n        }\r\n */\r\nexport default class NewSingleFile extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            submitButtons: null,\r\n            showModal: null,\r\n            modalMessage: null\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({showModal: false})\r\n    }\r\n    verify = () => {\r\n        const result = this.props.context.verify()\r\n        if(result.verified){\r\n          return true\r\n        }\r\n        else{\r\n          this.setState({...result})\r\n          return false\r\n        }\r\n      }\r\n    render(){\r\n        // if(!this.props.file){\r\n        //     return null\r\n        // }\r\n        return(\r\n        <div className=\"FileInfo-container SingleFile-container\">\r\n            <div className=\"FileInfo-preview\">\r\n                <ImageBox \r\n                    customClass={\"FileInfo-imageBox\"}\r\n                    file={this.props.file}\r\n                />\r\n                <div className=\"FamilyList--submit-delete-container\">  \r\n                    <Button\r\n                        variant=\"danger\"\r\n                        className=\"custom-button\"\r\n                        onClick={ () => this.props.context.fileDataMethods.removeFile(this.props.file.fileName, this.props.artworkFamily)}\r\n                    >\r\n                        Remove\r\n                    </Button>   \r\n                    <Button\r\n                        variant=\"success\"\r\n                        className=\"custom-button\"\r\n                        onClick={() => {\r\n                            const verification = this.props.context.verify()\r\n                            if(!verification.verified){\r\n                                return this.setState({showModal: true, modalMessage: verification.modalMessage})\r\n                            }\r\n                            this.setState({\r\n                                showModal: true,\r\n                                modalMessage: \"loading...\"\r\n                            })\r\n                            const postRes = this.props.context.fileDataMethods.postArtworkInfo(this.props.file)\r\n                            postRes\r\n                            .then( res => {\r\n                                this.setState({\r\n                                    modalMessage: res\r\n                                })\r\n                            })\r\n                            .catch(err => {\r\n                                this.setState({\r\n                                    modalMessage: err\r\n                                })\r\n                            })\r\n                        }\r\n                        }\r\n                    >\r\n                        Submit to server\r\n                    </Button>\r\n                    </div>    \r\n            </div>\r\n\r\n            <div className=\"Tabs-container\">\r\n                <Tabs defaultActiveKey=\"artworkInfo\" transition={false} id={`${this.props.file.fileName}-fileUpdate`}>\r\n                    <Tab eventKey=\"artworkInfo\" title=\"Edit Artwork Info\">\r\n                        <ArtworkInfo \r\n                            file={this.props.file}\r\n                            fileName={this.props.file.fileName}\r\n                            onChange={this.props.context.fileDataMethods.onChange}\r\n                            state={this.props.context.state}\r\n                            context={this.props.context}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"familyInfo\" title=\"Edit Artwork Family Info\">\r\n                    <h3>{this.props.file.fileName}</h3>\r\n                        <EditFamilyInfo \r\n                            context={this.props.context}\r\n                            fileName={this.props.file.fileName}\r\n                            uncontrolled\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"filters\" title=\"Filters\">\r\n                        <Filters \r\n                        context={this.props.context}\r\n                        fileName={this.props.file.fileName}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"indexes\" title=\"Arrange indexes\">\r\n                        <ArrangeFamilyIndexes \r\n                            data={this.props.context.state.relatedArtwork[this.props.file.artworkFamily]}\r\n                            file={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"seeAlso\" title=\"See Alsos\">\r\n                        <SeeAlsoPicker \r\n                            context={this.props.context}\r\n                            directory={this.props.context.state.fileData.files[this.props.file.fileName].seeAlso}\r\n                            initialData={this.props.context.state.artworkInfoData}\r\n                            parent={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n\r\n            <BootstrapModal \r\n                showModal={this.state.showModal}\r\n                message={this.state.modalMessage}\r\n                onClose={() => {this.setState({showModal: false})}}\r\n            />\r\n    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport BootstrapModal from '../BootstrapModal'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport EditArtwork from '../EditArtwork/EditArtwork'\r\nimport NewSingleFile from './NewSingleFile'\r\n\r\n\r\n//this component returns a div with a family name and FilePreviews of each child in the family\r\nexport default class FamilyList extends React.Component{\r\n// const FamilyList = (props) => {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false, \r\n            modalMessage: null,\r\n            progressBar: 0\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({showModal: false})\r\n    }\r\n    /**\r\n     * \r\n     * @param {*} data = takes an array of files data\r\n     */\r\n    renderList = (files) => {\r\n        let list = files.map(file => {\r\n            return (\r\n                // <EditArtwork \r\n                //     key={`EditArtwork-${file.fileName}`}\r\n                //     context={this.props.context}\r\n                //     file={file}\r\n                // />\r\n                <NewSingleFile \r\n                    key={`EditArtwork-${file.fileName}`}\r\n                    context={this.props.context}\r\n                    file={file}\r\n                />\r\n            )\r\n        }); \r\n\r\n        return list\r\n    }\r\n\r\n    postAll = (familyName) => {\r\n        const fileData = this.props.context.state.fileData\r\n        const allNewFiles = fileData.column.fileIds\r\n        const allInFamily = allNewFiles.filter(fileName => {\r\n            return fileData.files[fileName].artworkFamily === familyName\r\n        })\r\n\r\n        return new Promise((resolve, rej) => {\r\n            const promiseLength = allInFamily.length\r\n            let progress = 0\r\n            allInFamily.forEach(fileName => {\r\n                this.setState({modalMessage: `sending to ${this.props.familyName}`})\r\n                const fileRecord = fileData.files[fileName]\r\n                this.props.context.fileDataMethods.postArtworkInfo(fileRecord)\r\n                    .then(res => {\r\n                        progress += 1\r\n                        let progressBar = Math.round(progress * 100 / promiseLength)\r\n                        this.setState({progressBar: progressBar}, console.log(this.state))\r\n                        if(progress === promiseLength){\r\n                            resolve(\"operation complete\")\r\n                        }\r\n                    })\r\n                    .catch(err => rej(err))\r\n            })\r\n        }) \r\n    }\r\n \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"FamilyList--main\">\r\n                <div className=\"FamilyList--familyName\">\r\n                    <div className=\"FamilyList--familyName__text\">Family name: {this.props.familyName ? this.props.familyName : \"none\"}</div>\r\n                    {/* <h5 className=\"FamilyList--familyName__text\">Family name: {this.props.familyName ? this.props.familyName : \"none\"}</h5> */}\r\n                </div>\r\n                {this.renderList(this.props.files, this.props)}\r\n                {/* <div style={{display: \"flex\", justifyContent: \"center\", padding: \"5px 0\"}}>  \r\n                <Button\r\n                            variant=\"success\"\r\n                            className=\"custom-button\"\r\n                            onClick={() => {\r\n                                const verification = this.props.context.verify()\r\n                                if(!verification.verified){\r\n                                    return this.setState({showModal: true, modalMessage: verification.modalMessage})\r\n                                }\r\n                                this.setState({showModal: true})\r\n                                this.postAll(this.props.familyName)\r\n                                    .then(res => {\r\n                                        this.setState({modalMessage: res})\r\n                                    })\r\n                                    .catch(rej => this.setState({modalMessage: rej}))\r\n                            }}\r\n                        >\r\n                            Submit ALL to server\r\n                </Button>\r\n                </div> */}\r\n                <BootstrapModal \r\n                    showModal={this.state.showModal}\r\n                    message={this.state.modalMessage}\r\n                    onClose={() => {this.setState({showModal: false})}}\r\n                >\r\n                    {this.state.progressBar ? \r\n                        <ProgressBar now={this.state.progressBar} /> :\r\n                        null\r\n                    }\r\n                </BootstrapModal>\r\n            </div>\r\n        ) \r\n    }\r\n\r\n}\r\n\r\n// export default FamilyList","import React, { Fragment } from 'react';\r\nimport FamilyList from './FamilyList'\r\nimport { Context } from '../../../Provider';\r\n\r\n\r\nexport default class MainContainer extends React.Component{\r\n\r\n    static contextType = Context;\r\n    \r\n    filesData = () => Object.keys(this.props.data.files).map(objName => {\r\n        return this.props.data.files[objName]\r\n    })\r\n    \r\n    /**\r\n     * @returns returns an object with \r\n     * #1: familyNames: an Array of FamilyNames of uploaded files \r\n     * #2: fileByFamily: an Object that's a collection of arrays sorted by artworkFamily\r\n     */\r\n    sortByFamily = () => {\r\n\r\n        let fileByFamily = {}\r\n        let familyNames = []\r\n\r\n            this.filesData().forEach(file => {\r\n            if(!file.artworkFamily){\r\n                if(!fileByFamily.none){\r\n                    fileByFamily.none = []\r\n                }\r\n                return fileByFamily.none = [...fileByFamily.none, file]\r\n            }\r\n            if(!fileByFamily[file.artworkFamily]){\r\n                fileByFamily[file.artworkFamily] = []\r\n            }\r\n            fileByFamily[file.artworkFamily] = [...fileByFamily[file.artworkFamily], file]\r\n        })\r\n\r\n        familyNames = Object.keys(fileByFamily)\r\n\r\n        return {fileByFamily, familyNames}\r\n    }\r\n\r\n    renderNames = (data) => {\r\n        if(!data){\r\n            return\r\n        }\r\n\r\n        const sortedData = this.sortByFamily()\r\n\r\n        let list = this.sortByFamily().familyNames.map(familyName => {\r\n            return (\r\n                <FamilyList \r\n                    key={`familyList-${familyName}`}\r\n                    familyName={familyName}\r\n                    context={this.context}\r\n                    files={sortedData.fileByFamily[familyName]}\r\n                />\r\n            ) \r\n        })\r\n        return list\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Context.Consumer>\r\n                {() => {\r\n                    return(\r\n                        <Fragment key={'main_container'}>\r\n                            {this.renderNames(this.props.data.files)}\r\n                        </Fragment>\r\n                    )\r\n                }}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SubmitFamilyInfo = (props) => {\r\n\r\n    const currentFamily = props.context.state.familySetupData.artworkFamily\r\n    const recordedFamilyNames = props.context.state.artworkFamilyList\r\n\r\n    const submitNew = () => {\r\n        return (\r\n            <div \r\n            >\r\n            <span>record new family setup:</span>\r\n                <Button\r\n                    variant=\"success\" \r\n                    size=\"sm\"\r\n                    onClick={() => props.submitAction()}\r\n            >\r\n            SUBMIT\r\n            </Button>\r\n            </div>     \r\n        )\r\n    }\r\n    const submitUpdate = () => {\r\n        return (\r\n            <div \r\n            >\r\n                <span>Update family setup:</span>\r\n                <Button\r\n                    variant=\"primary\" \r\n                    size=\"sm\"\r\n                    onClick={() => props.submitAction()}\r\n                >\r\n                SUBMIT\r\n                </Button>\r\n            </div>     \r\n        )\r\n    }\r\n\r\n    const noFamilyName = () => {\r\n        return(\r\n            <div \r\n            >\r\n                <span>Add new Artwork Family name to continue.</span>\r\n            </div>\r\n        )\r\n    }\r\n    if(recordedFamilyNames.includes(currentFamily)){\r\n        return submitUpdate()\r\n    }\r\n    else if(!currentFamily){\r\n        return noFamilyName()\r\n    }\r\n    else{\r\n        return submitNew()\r\n    }\r\n}\r\n\r\nexport default SubmitFamilyInfo ","import React from 'react'\r\nimport axios from 'axios'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst UpdateAllArtworkInfo = (props) => {\r\n\r\n    const getSubcategories = (file) => {\r\n        let categories = Object.keys(file.category)\r\n        let subcategories = []\r\n        categories.forEach(category => {\r\n            subcategories = [...subcategories, ...Object.keys(file.category[category])]\r\n        })\r\n        return subcategories\r\n    }\r\n    const getListitems = (file) => {\r\n        const categories = Object.keys(file.category)\r\n        let listItems = []\r\n        categories.forEach(category => {\r\n            let subcategories = Object.keys(file.category[category])\r\n            subcategories.forEach(sub => {\r\n                if(!file.category[category][sub].length > 0){return}\r\n                listItems = [...listItems, ...file.category[category][sub]]\r\n            })\r\n        })\r\n        return listItems\r\n    }\r\n\r\n    const commenceUpdate = () => {\r\n        // const allDocuments = props.context.state.artworkInfoData\r\n        \r\n        const allDocuments = axios.get('/api/artworkInfo')\r\n        \r\n        allDocuments.then(res => {\r\n            const allDocumentNames = Object.keys(res.data)\r\n            // const allFamNames = res.data.map(obj => obj.artworkFamily)\r\n            \r\n            let progressCount = 0\r\n            let updateLength = allDocumentNames.length\r\n            console.log(\"allFams\")\r\n            console.log(res.data)\r\n            console.log(\"allFamNames\")\r\n            console.log(allDocumentNames)\r\n            console.log(\"updateLength\")\r\n            console.log(updateLength)\r\n\r\n            res.data.forEach(artwork => {\r\n                let fileData = artwork\r\n                const fileName = artwork.fileName\r\n                const nameRoot = fileName.slice(0, fileName.indexOf(\".\"))\r\n                const fileExtension = fileName.slice(fileName.indexOf(\".\"), fileName.length)\r\n    \r\n                    // let displayTriggers = {category: [], subcategory: [], listitems: [], themes: [], year: \"\", location: \"\"}\r\n                    // displayTriggers.category = Object.keys(fileData.category)\r\n                    // displayTriggers.subcategory = getSubcategories(fileData)\r\n                    // displayTriggers.listitems = getListitems(fileData)\r\n                    // displayTriggers.themes = fileData.themes\r\n                    // displayTriggers.year = fileData.year\r\n                    // displayTriggers.location = fileData.location\r\n                    // fileData.displayTriggers = displayTriggers\r\n\r\n                fileData.thumbnailPath = `uploads/thumbnails/${nameRoot}-thumbnail${fileExtension}`\r\n                fileData.mobilePath = `uploads/mobile/${nameRoot}-mob${fileExtension}`\r\n                fileData.desktopPath = `uploads/desktop/${nameRoot}-desktop${fileExtension}`\r\n    \r\n                console.log(fileData)\r\n                console.log(\"********************************************\")\r\n    \r\n                // progressCount += 1\r\n                // console.log(`${progressCount} / ${updateLength}`)\r\n                // if(progressCount === updateLength){\r\n                //     console.log('files updated')\r\n                // }\r\n    \r\n                axios.put(`/api/artworkInfo/update/${artwork.fileName}`, fileData)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    progressCount += 1\r\n                    console.log(`${progressCount} / ${updateLength}`)\r\n                    if(progressCount === updateLength){\r\n                        console.log('files updated')\r\n                    }\r\n                })\r\n                })\r\n            })\r\n        }\r\n    \r\n    return(\r\n        <Button\r\n            onClick={() => {\r\n                commenceUpdate()\r\n            }}\r\n        >\r\n            Update all Artworks\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default UpdateAllArtworkInfo","import React, { Component, Fragment } from 'react';\r\nimport { Context } from '../Provider';\r\nimport { ProgressBar } from 'react-bootstrap'\r\n\r\nimport BootstrapModal from './components/BootstrapModal'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport Filters from './components/Filters/Filters'\r\nimport FamilyDescription from './components/FamilyInfo/subcomponents/FamilyDescription'\r\nimport AddNew from './components/AddNew'\r\n\r\nimport MainContainer from './components/FileUpload/MainContainer';\r\nimport SubmitFamilyInfo from './components/FamilyInfo/subcomponents/SubmitFamilyInfo';\r\nimport Themes from './components/Filters/subcomponents/Themes';\r\nimport Categories from './components/Filters/subcomponents/Categories';\r\nimport UpdateAllArtworkInfo from './oldComponents/UpdateAllArtworkInfo';\r\n\r\nexport default class Create extends Component{\r\n\r\n  static contextType = Context;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      submitButtons: null,\r\n      confirmedAction: null\r\n    }\r\n  }\r\n\r\nmodalInvoke = (options, callbackPromise) => {\r\n      let newState = {...this.state}\r\n      newState = {\r\n        ...newState,         \r\n        showModal: true,\r\n        modalMessage: \"...loading...\"\r\n      }\r\n      if(options && options.requireActionConfirm){\r\n        newState.confirm = true\r\n      }\r\n      else{\r\n        newState.confirm = false\r\n      }\r\n\r\n      this.setState(newState, () => {\r\n          let action = null\r\n          if(!options || !options.requireActionConfirm){\r\n            callbackPromise\r\n            .then(res => {\r\n              this.setState({\r\n                modalMessage: res.modalMessage\r\n              })\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                modalMessage: err.modalMessage\r\n              })\r\n            })\r\n          }\r\n          else{\r\n                this.setState({\r\n                  confirmedAction: options.confirmedAction,\r\n                  modalMessage: options.modalMessage,\r\n                })\r\n          }\r\n\r\n        })\r\n}\r\n\r\nsubmitButtons = () => {\r\n  const currentFamily = this.context.state.familySetupData.artworkFamily\r\n  const recordedFamilyNames = this.context.state.artworkFamilyList\r\n\r\n  const submitAction = () => {\r\n\r\n    const verification = this.context.verify()\r\n\r\n    if(!verification.verified){\r\n      const refuseAction = () => {\r\n        this.setState({\r\n          showModal: true,\r\n          modalMessage: verification.message\r\n        })\r\n      }\r\n      return refuseAction\r\n    }\r\n\r\n    if(recordedFamilyNames.includes(currentFamily)){\r\n      const submitUpdate = () => {\r\n        this.setState({\r\n          showModal: true,\r\n          modalMessage: \"...loading...\"\r\n          }, () => {\r\n\r\n            this.context.familySetupMethods.updateFamilySetup(this.context.state.familySetupData.artworkFamily)\r\n              .then(res => {\r\n                this.setState({\r\n                  modalMessage: res\r\n                })\r\n              })\r\n              .catch(err => {\r\n                this.setState({\r\n                  modalMessage: err\r\n                })\r\n              })\r\n        })\r\n      }\r\n      return submitUpdate\r\n    }\r\n\r\n    else{\r\n      const submitNew = () => {\r\n        this.setState({\r\n          showModal: true,\r\n          modalMessage: \"...loading...\"\r\n          }, () => {\r\n              this.context.familySetupMethods.createFamilySetup()\r\n                .then(res => {\r\n                  this.setState({\r\n                    modalMessage: res\r\n                  })\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    modalMessage: err\r\n                  })\r\n                })\r\n          })\r\n      }\r\n      return submitNew\r\n    }\r\n  }\r\n  return(\r\n    <SubmitFamilyInfo \r\n      context={this.context}\r\n      submitAction={submitAction()}\r\n    />\r\n  )\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.setState({submitButtons: this.submitButtons()})\r\n}\r\n\r\n  render(){\r\n      return(\r\n        <Context.Consumer>\r\n          {() => {\r\n            return(\r\n              <Fragment>\r\n                  <div className=\"Tabs-container\">\r\n                    <Tabs defaultActiveKey=\"upload\" transition={false} id=\"noanim-tab-example\">\r\n                      <Tab eventKey=\"upload\" title=\"Upload new files\">\r\n                        <div className=\"FileUpload-container\">\r\n                            <div className=\"imageInfo--box\">\r\n                              <div>\r\n                                <p>Upload file(-s):</p> \r\n                                <input \r\n                                id=\"uploadFileInput\" \r\n                                type=\"file\" \r\n                                multiple \r\n                                onChange={(e) => {\r\n                                  const event = e\r\n                                  this.context.addFileToState(event)\r\n                                  .then(res => this.setState({\r\n                                    modalMessage: res\r\n                                  }))\r\n                                  .catch(err => {\r\n                                    this.setState({\r\n                                      modalMessage: err\r\n                                    })\r\n                                  })\r\n\r\n                                  this.setState({\r\n                                    showModal: true,\r\n                                    modalMessage: \"uploading File(-s)\"\r\n                                  }, () => {\r\n                                    \r\n                                  })\r\n                                  \r\n                                  }} />\r\n                                <p className=\"subtitle\">The name of uploaded file cannot contain spaces or any special characters except for \"-\"</p>\r\n                              </div>\r\n                            </div>\r\n\r\n                              <MainContainer\r\n                              data={this.context.state.fileData}\r\n                              />\r\n                            \r\n                        </div>\r\n                      </Tab>\r\n                      <Tab eventKey=\"create_family\" title=\"Create a new Family\">\r\n\r\n                            <div className=\"Tabs-container\">\r\n                              <Tabs eventKey=\"create_family\" transition={false} title=\"Create a new Family\">\r\n                                <Tab eventKey=\"editFamilyInfo\" title=\"Family Basics\">\r\n                                    <div className={\"create-createFamily\"}>\r\n                                    <div style={{backgroundColor: \"#e4e4e4\", padding: \"7px\", width: \"100%\"}}>\r\n                                      {this.submitButtons()}  \r\n                                    </div>\r\n                                        <AddNew \r\n                                          addNew\r\n                                          router={'/api/familySetup/create'}\r\n                                          stateKey={'artworkFamilyList'}\r\n                                          requestKey={\"artworkFamily\"}\r\n                                          addNewTitle=\"Add new Artwork Family name\"\r\n                                        />\r\n\r\n                                        <FamilyDescription \r\n                                          context={this.context}\r\n                                        />\r\n                                    </div>\r\n                                </Tab>\r\n                                <Tab eventKey=\"filters\" title=\"Filters\">\r\n                                  <Filters \r\n                                      context={this.context}\r\n                                      modalInvoke={this.modalInvoke}\r\n                                  />\r\n                                </Tab>\r\n                              </Tabs>\r\n                            </div>\r\n                      </Tab>\r\n                      <Tab eventKey=\"new_theme\" title=\"Create data filters\">\r\n                      <div className=\"Tabs-container\">\r\n                        <Tabs>\r\n                          <Tab eventKey=\"new_theme\" title=\"New Themes\">\r\n                            <Themes \r\n                            context={this.context}\r\n                            dataArray={this.context.state.themesData}\r\n                            onChange={this.context.familySetupMethods.onChange}\r\n                            modalInvoke={this.modalInvoke}\r\n                            addNew\r\n                          />\r\n                          </Tab>\r\n                          <Tab eventKey=\"new_category\" title=\"New Categories\">\r\n                            <Categories \r\n                            context={this.context}\r\n                            modalInvoke={this.modalInvoke}\r\n                            addNew\r\n                            />\r\n                          </Tab>\r\n                        </Tabs>\r\n                      </div>\r\n                      </Tab>\r\n                      <Tab eventKey=\"record_state\" title=\"Write state\">\r\n                        <button onClick={() => {\r\n                          this.context.staticState()\r\n                        }}>\r\n                          WRITE NEW STAIC STATE\r\n                        </button>\r\n                        <UpdateAllArtworkInfo />\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </div>\r\n                  <BootstrapModal \r\n                  showModal={this.state.showModal || this.context.state.showModal}\r\n                  message={this.state.modalMessage}\r\n                  onClose={() => {this.setState({showModal: false})}}\r\n                  confirm={this.state.confirm || false}\r\n                  confirmedAction={() => {\r\n                    this.state.confirmedAction()\r\n                      .then(res => {\r\n                        this.setState({\r\n                          confirm: res.confirm,\r\n                          modalMessage: res.modalMessage\r\n                        })\r\n                      })\r\n                      .catch(err => {\r\n                        this.setState({\r\n                          confirm: err.confirm,\r\n                          modalMessage: err.modalMessage\r\n                        })\r\n                      })\r\n                  }}\r\n                >\r\n                  {this.state.progress ?\r\n                    <ProgressBar now={this.state.progress ? this.state.progress : 100} /> :\r\n                    null\r\n                  }\r\n              </BootstrapModal>\r\n              </Fragment>\r\n            )\r\n          }}\r\n        </Context.Consumer>\r\n      )\r\n  }\r\n}","import React, { Fragment } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport BootstrapModal from '../BootstrapModal';\r\nimport ImageBox from '../ImageBox/ImageBox';\r\nimport EditFileButtons from '../ImageBox/optionalComponents/EditFileButtons'\r\nimport FilePreview from '../FilePreview'\r\nimport SelectFamily from '../FamilyInfo/subcomponents/SelectFamily'\r\nimport Accordion from '../Accordion';\r\n\r\nexport default class FileUpdate extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            modalMessage: null,\r\n            modalConfirm: true,\r\n            fileList: this.props.state.artworkInfoData,\r\n            allFiles: this.props.state.artworkInfoData\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({showModal: false, modalConfirm: true})\r\n    }\r\n\r\n    verify = () => {\r\n        const result = this.props.context.verify()\r\n        console.log(\"result\")\r\n        console.log(result)\r\n        if(result.verified){\r\n          return true\r\n        }\r\n        else{\r\n          this.setState({...result})\r\n          return false\r\n        }\r\n      }\r\n\r\n    onModalClick = (fileName) => {\r\n        if(!this.verify()){\r\n            this.setState({modalConfirm: false})\r\n            return\r\n        }\r\n        let newState = {...this.state}\r\n        newState.fileToDelete = this.props.context.state.artworkInfoData[fileName]\r\n        newState.showModal = true\r\n        newState.modalMessage = <span>Delete <em>{fileName}</em>?</span>\r\n        this.setState(newState)\r\n    }\r\n\r\n    EditDetail = (file) => {\r\n        if(!file){return}\r\n        return(\r\n                <ImageBox\r\n                    file={file}\r\n                    key={`${file.fileName}-detail`}\r\n                >\r\n                    <EditFileButtons \r\n                        file={file}\r\n                        context={this.props.context}\r\n                        onModalClose={this.onClose}\r\n                        onModalClick={this.onModalClick}\r\n                    />\r\n                </ImageBox>\r\n        )\r\n    }\r\n\r\n    filterByFamily = (value) => {\r\n        let newRenderList = {}\r\n        const data = this.state.allFiles\r\n        const list = Object.keys(this.state.allFiles)\r\n        list.forEach(objName => {\r\n            if(data[objName].artworkFamily === value){\r\n                const obj = data[objName]\r\n                newRenderList = {...newRenderList, [objName]: obj}\r\n            }\r\n        })\r\n        this.setState({fileList: newRenderList}, () => {console.log('filter done'); console.log(this.state)})\r\n    }\r\n\r\n    reloadAll = () => {\r\n        this.setState({fileList: this.state.allFiles})\r\n    }\r\n\r\n    deletePromise = (fileName, artworkFamily) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.context.fileDataMethods.deleteDBrecord(fileName, artworkFamily)\r\n                .then(res => {resolve({\r\n                        modalMessage: res,\r\n                        modalConfirm: false\r\n                    })\r\n                })\r\n                .catch(err => {reject({\r\n                        modalMessage: err,\r\n                        modalConfirm: false\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({fileList: this.props.state.artworkInfoData})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div \r\n                id={'familyContainer'}\r\n                className={\"EditDetailContainer\"}\r\n                >\r\n                    <div className=\"familyPicker\">\r\n                        <button\r\n                            // size=\"sm\"\r\n                            // variant=\"primary\"\r\n                            className={\"btn-sm btn-primary familyPicker-reload\"}\r\n                            onClick={this.reloadAll}\r\n                        >\r\n                            reload file list\r\n                        </button>\r\n                        <Accordion\r\n                            title={\"filter by family\"}\r\n                        >\r\n                            <SelectFamily \r\n                                context={this.props.context}\r\n                                onChange={this.filterByFamily}\r\n                                uncontrolled\r\n                                radio\r\n                            />\r\n                        </Accordion>\r\n                    </div>\r\n\r\n\r\n                    <div \r\n                    className={\"grid-wrapper\"}\r\n                    // style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\"}}\r\n                    >\r\n                        {\r\n                            Object.keys(this.state.fileList).map(fileName => {\r\n                                return this.EditDetail(this.props.state.artworkInfoData[fileName])\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {this.state.showModal ?                     \r\n                        <BootstrapModal \r\n                            confirm={this.state.modalConfirm}\r\n                            showModal={this.state.showModal}\r\n                            onClose={this.onClose}\r\n                            confirmedAction={() => this.deletePromise(this.state.fileToDelete.fileName, this.state.fileToDelete.artworkFamily)}\r\n                        >\r\n                            <div>\r\n                                <p>{this.state.modalMessage}</p>\r\n                                {this.state.fileToDelete ? \r\n                                    <FilePreview \r\n                                        file={this.state.fileToDelete}\r\n                                    /> :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </BootstrapModal> :\r\n                        null\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport ArtworkInfo from '../ArtworkInfo/ArtworkInfo'\r\nimport BootstrapModal from '../BootstrapModal'\r\nimport Filters from '../Filters/Filters'\r\nimport EditFamilyInfo from '../FamilyInfo/EditFamilyInfo';\r\n\r\nimport ImageBox from '../ImageBox/ImageBox';\r\nimport ArrangeFamilyIndexes from '../ArrangeIndexes/ArrangeFamilyIndexes';\r\nimport SeeAlsoPicker from '../SeeAlso/SeeAlsoPicker';\r\n\r\n/**\r\n * @props file \r\n * @props state\r\n * @props controls\r\n * @props familyDropDown \r\n * @props themesDropDown\r\n * @props seeAlso {                    \r\n *  state: this.context.state,\r\n    context: this.context,\r\n    initialData: this.context.state.artworkInfoData,\r\n    onChange: this.context.fileDataMethods.onChange, \r\n        }\r\n */\r\nexport default class FileInfo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {showModal: false, modalMessage: null}\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({showModal: false})\r\n    }\r\n    verify = () => {\r\n        const result = this.props.context.verify()\r\n        if(result.verified){\r\n          return true\r\n        }\r\n        else{\r\n          this.setState({...result})\r\n          return false\r\n        }\r\n      }\r\n    render(){\r\n        // if(!this.props.file){\r\n        //     return null\r\n        // }\r\n        return(\r\n        <div className=\"FileInfo-container\">\r\n            <div className=\"FileInfo-preview\">\r\n                <ImageBox \r\n                    customClass={\"serverFileUpdate-imageBox\"}\r\n                    file={this.props.file}\r\n                />\r\n                <div className=\"FamilyList--submit-delete-container\">  \r\n                        <Button\r\n                            variant=\"success\"\r\n                            className=\"custom-button\"\r\n                            onClick={() => {\r\n                                if(!this.verify()){\r\n                                    return\r\n                                }\r\n                                this.setState({showModal: true, modalMessage: \"loading...\"})\r\n                                //*************** */\r\n                                const postRes = this.props.context.fileDataMethods.updateArtworkInfo(this.props.context.state.fileData.files[this.props.file.fileName])\r\n                                postRes\r\n                                    .then( res => {\r\n                                    this.setState({modalMessage: res})\r\n                                    })\r\n                                    .catch(err => {\r\n                                        this.setState({modalMessage: err})\r\n                                    })\r\n                            }\r\n                            }\r\n                        >\r\n                            Submit to server\r\n                        </Button>\r\n                        <Link to={`/admin/edit`}>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                className=\"custom-button\"\r\n                                onClick={ () => this.props.context.removeFile(this.props.file.fileName)}\r\n                            >\r\n                                Cancel\r\n                            </Button>   \r\n                        </Link>\r\n                        <Button\r\n                                variant=\"primary\"\r\n                                className=\"custom-button\"\r\n                                onClick={ () => this.props.context.fileDataMethods.relateSeeAlso(this.props.file)}\r\n                            >\r\n                                Check see also\r\n                            </Button>   \r\n                        <BootstrapModal \r\n                            showModal={this.state.showModal}\r\n                            message={this.state.modalMessage}\r\n                            onClose={this.onClose}\r\n                        />\r\n                    </div>    \r\n            </div>\r\n\r\n            <div className=\"Tabs-container\">\r\n                <Tabs defaultActiveKey=\"artworkInfo\" transition={false} id={`${this.props.file.fileName}-fileUpdate`}>\r\n                    <Tab eventKey=\"artworkInfo\" title=\"Edit Artwork Info\">\r\n                        <ArtworkInfo \r\n                            file={this.props.file}\r\n                            fileName={this.props.file.fileName}\r\n                            onChange={this.props.context.fileDataMethods.onChange}\r\n                            state={this.props.context.state}\r\n                            context={this.props.context}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"familyInfo\" title=\"Edit Artwork Family Info\">\r\n                        <EditFamilyInfo \r\n                        context={this.props.context}\r\n                        fileName={this.props.file.fileName}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"filters\" title=\"Filters\">\r\n                        <Filters \r\n                        context={this.props.context}\r\n                        fileName={this.props.file.fileName}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"indexes\" title=\"Arrange indexes\">\r\n                        <ArrangeFamilyIndexes \r\n                            data={this.props.context.state.relatedArtwork[this.props.file.artworkFamily]}\r\n                            file={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                    <Tab eventKey=\"seeAlso\" title=\"See Alsos\">\r\n                        <SeeAlsoPicker \r\n                            context={this.props.context}\r\n                            directory={this.props.context.state.fileData.files[this.props.file.fileName].seeAlso}\r\n                            initialData={this.props.context.state.artworkInfoData}\r\n                            parent={this.props.file}\r\n                        />\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Context } from '../Provider';\r\n\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport EditDetailContainer from './components/EditPage/EditDetailContainer';\r\nimport ServerFileUpdate from './components/EditPage/ServerFileUpdate';\r\nimport Accordion from './components/Accordion';\r\nimport BootstrapModal from './components/BootstrapModal';\r\nimport Filters from './components/Filters/Filters';\r\nimport EditFamilyInfo from './components/FamilyInfo/EditFamilyInfo'\r\nimport SubmitFamilyInfo from './components/FamilyInfo/subcomponents/SubmitFamilyInfo'\r\nimport Themes from './components/Filters/subcomponents/Themes'\r\nimport Categories from './components/Filters/subcomponents/Categories'\r\n\r\nexport default class Edit extends Component{\r\n    static contextType = Context;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        submitButtons: null,\r\n        confirmedAction: null\r\n      }\r\n    }\r\n  \r\n\r\n    //returns an array from a names collection\r\n    filesData = (dataObj) => Object.keys(dataObj).map(objName => {\r\n        return dataObj[objName]\r\n    })\r\n\r\n    sortByFamily = () => {\r\n\r\n        let fileByFamily = {}\r\n        let familyNames = []\r\n            this.filesData(this.context.state.artworkInfoData).forEach(file => {\r\n            if(!file.artworkFamily){\r\n                if(!fileByFamily.none){\r\n                    fileByFamily.none = []\r\n                }\r\n                return fileByFamily.none = [...fileByFamily.none, file]\r\n            }\r\n            if(!fileByFamily[file.artworkFamily]){\r\n                fileByFamily[file.artworkFamily] = []\r\n            }\r\n            fileByFamily[file.artworkFamily] = [...fileByFamily[file.artworkFamily], file]\r\n        })\r\n\r\n        familyNames = Object.keys(fileByFamily)\r\n\r\n        return {fileByFamily, familyNames}\r\n    }\r\n\r\n    submitButtons = () => {\r\n        const currentFamily = this.context.state.familySetupData.artworkFamily\r\n        const recordedFamilyNames = this.context.state.artworkFamilyList\r\n      \r\n        const submitAction = () => {\r\n      \r\n          const verification = this.context.verify()\r\n      \r\n          if(!verification.verified){\r\n            const refuseAction = () => {\r\n              this.setState({\r\n                showModal: true,\r\n                modalMessage: verification.message\r\n              })\r\n            }\r\n            return refuseAction\r\n          }\r\n      \r\n          if(recordedFamilyNames.includes(currentFamily)){\r\n            const submitUpdate = () => {\r\n              this.setState({\r\n                showModal: true,\r\n                modalMessage: \"...loading...\"\r\n                }, () => {\r\n      \r\n                  this.context.familySetupMethods.updateFamilySetup(this.context.state.familySetupData.artworkFamily)\r\n                    .then(res => {\r\n                      this.setState({\r\n                        modalMessage: res\r\n                      })\r\n                    })\r\n                    .catch(err => {\r\n                      this.setState({\r\n                        modalMessage: err\r\n                      })\r\n                    })\r\n              })\r\n            }\r\n            return submitUpdate\r\n          }\r\n      \r\n          else{\r\n            const submitNew = () => {\r\n              this.setState({\r\n                showModal: true,\r\n                modalMessage: \"...loading...\"\r\n                }, () => {\r\n                    this.context.familySetupMethods.createFamilySetup()\r\n                      .then(res => {\r\n                        this.setState({\r\n                          modalMessage: res\r\n                        })\r\n                      })\r\n                      .catch(err => {\r\n                        this.setState({\r\n                          modalMessage: err\r\n                        })\r\n                      })\r\n                })\r\n            }\r\n            return submitNew\r\n          }\r\n        }\r\n        return(\r\n          <SubmitFamilyInfo \r\n            context={this.context}\r\n            submitAction={submitAction()}\r\n          />\r\n        )\r\n    }\r\n\r\n    modalInvoke = (options, callbackPromise) => {\r\n      let newState = {...this.state}\r\n      newState = {\r\n        ...newState,         \r\n        showModal: true,\r\n        modalMessage: \"...loading...\"\r\n      }\r\n      if(options && options.requireActionConfirm){\r\n        newState.confirm = true\r\n      }\r\n      else{\r\n        newState.confirm = false\r\n      }\r\n\r\n      this.setState(newState, () => {\r\n          let action = null\r\n          if(!options || !options.requireActionConfirm){\r\n            // callbackPromise\r\n            options.confirmedAction\r\n            .then(res => {\r\n              this.setState({\r\n                modalMessage: res.modalMessage\r\n              })\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                modalMessage: err.modalMessage\r\n              })\r\n            })\r\n          }\r\n          else{\r\n                this.setState({\r\n                  confirmedAction: options.confirmedAction,\r\n                  modalMessage: options.modalMessage,\r\n                })\r\n          }\r\n\r\n        })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n                <Context.Consumer>\r\n                {\r\n                    () => {\r\n                        return(\r\n                                <Switch>\r\n                                    <Route exact path=\"/admin/edit\">\r\n                                        {/* <h3>Edit</h3> */}\r\n                                          <div className=\"Tabs-container\">\r\n                                            <Tabs defaultActiveKey=\"editArtwork\" transition={false} id=\"edit-artwork-family\">\r\n                                            <div style={{backgroundColor: \"#e4e4e4\", padding: \"7px\"}}>\r\n                                                {this.submitButtons()}  \r\n                                                <div>\r\n                                                    current Artwork Family:\r\n                                                    <strong>{this.context.state.familySetupData.artworkFamily}</strong>\r\n                                                </div>\r\n                                                </div>\r\n                                                <Tab eventKey=\"editArtwork\" title=\"Edit by Artwork\">\r\n                                                    <EditDetailContainer \r\n                                                        context={this.context}\r\n                                                        state={this.context.state}\r\n                                                        familySetupMethods={this.context.familySetupMethods}\r\n                                                    />\r\n                                                </Tab>\r\n                                                <Tab eventKey=\"editFamily\" title=\"Edit Artwork Families\">\r\n                                                    {this.submitButtons()} \r\n                                                    <EditFamilyInfo \r\n                                                        context={this.context}\r\n                                                    />\r\n                                                    <Filters \r\n                                                        context={this.context}\r\n                                                    /> \r\n                                                </Tab>\r\n                                                <Tab eventKey=\"new_theme\" title=\"Delete data filters\">\r\n                                                  <div className=\"Tabs-container\">\r\n                                                    <Tabs>\r\n                                                      <Tab eventKey=\"delete_theme\" title=\"Delete Themes\">\r\n                                                        <Themes \r\n                                                        context={this.context}\r\n                                                        dataArray={this.context.state.themesData}\r\n                                                        onChange={this.context.familySetupMethods.onChange}\r\n                                                        modalInvoke={this.modalInvoke}\r\n                                                        allowDelete\r\n                                                      />\r\n                                                      </Tab>\r\n                                                      <Tab eventKey=\"delete_category\" title=\"Delete Categories\">\r\n                                                        <Categories \r\n                                                        context={this.context}\r\n                                                        modalInvoke={this.modalInvoke}\r\n                                                        allowDelete\r\n                                                        />\r\n                                                      </Tab>\r\n                                                    </Tabs>\r\n                                                  </div>\r\n                                                </Tab>\r\n                                            </Tabs>\r\n                                          </div>\r\n                                          <BootstrapModal \r\n                                              showModal={this.state.showModal || this.context.state.showModal}\r\n                                              message={this.state.modalMessage}\r\n                                              onClose={() => {this.setState({showModal: false})}}\r\n                                              confirm={this.state.confirm || false}\r\n                                              confirmedAction={() => {\r\n                                                this.state.confirmedAction()\r\n                                                  .then(res => {\r\n                                                    this.setState({\r\n                                                      confirm: res.confirm,\r\n                                                      modalMessage: res.modalMessage\r\n                                                    })\r\n                                                  })\r\n                                                  .catch(err => {\r\n                                                    this.setState({\r\n                                                      confirm: err.confirm,\r\n                                                      modalMessage: err.modalMessage\r\n                                                    })\r\n                                                  })\r\n                                              }}\r\n                                            >\r\n                                          </BootstrapModal>\r\n\r\n                                    </Route>\r\n                                    <Route \r\n                                        path=\"/admin/edit/:fileName\"\r\n                                        render={(props) => \r\n                                            {return <ServerFileUpdate \r\n                                                    // relatedArtwork={this.context.state.relatedArtwork[familyName]}\r\n                                                    context={this.context}\r\n                                                    familyName={this.context.state.artworkInfoData[props.match.params.fileName].artworkFamily}\r\n                                                    file={this.context.state.fileData.files[props.match.params.fileName]}\r\n                                                    files={this.sortByFamily().fileByFamily[this.context.state.artworkInfoData[props.match.params.fileName].artworkFamily]}\r\n                                                    relatedArtwork={this.context.state.relatedArtwork[this.context.state.artworkInfoData[props.match.params.fileName].artworkFamily]}\r\n\r\n                                                    removeFile={this.context.fileDataMethods.removeFile}\r\n\r\n                                                />\r\n                                            }\r\n                                        }\r\n                                    /> \r\n                                    {/* <BootstrapModal \r\n                                        showModal={this.context.state.showModal}\r\n                                        message=\"updating database\"\r\n                                        onClose={this.context.onClose}\r\n                                    /> */}\r\n                                </Switch>\r\n                        )\r\n                    }\r\n                }\r\n                </Context.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Delete = (props) => {\r\n    return(\r\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n                axios.get('/api/artworkInfo')\r\n                    .then(res => {\r\n                        console.log(res.data)\r\n                        let ids = res.data.map(obj => obj.fileName)\r\n                        const idsSet = new Set(ids)\r\n                        console.log(idsSet)\r\n                        idsSet.forEach(id => {\r\n                            axios.delete(`/api/artworkInfo/delete/${id}`)\r\n                                .then(res => console.log(res))\r\n                        })\r\n                        \r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }}\r\n            >\r\n                Delete all DB records\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Delete","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Provider } from '../Provider';\r\nimport { BrowserRouter,  Link } from 'react-router-dom';\r\nimport Create from './Create';\r\nimport Edit from './Edit'\r\nimport Delete from './oldComponents/Delete'\r\nimport {PrivateRoute} from '../PrivateRoute'\r\n\r\nimport auth from '../Auth'\r\n\r\nimport '../../css/main.css'\r\n\r\nexport default class Admin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        console.log(\"auth in Admin\")\r\n        console.log(auth)\r\n        return(    \r\n            <BrowserRouter>\r\n                <Provider>\r\n                    <div className=\"admin-container\">\r\n    \r\n                        <nav className={\"admin-nav\"}>\r\n                            <div className={\"admin-level\"}>{!auth.guest ? \"ADMIN\" : \"Guest\"}</div>\r\n                            <ul className={\"admin-nav-list\"}>\r\n                                <li>\r\n                                    <Link to=\"/admin/create\">\r\n                                        <Button>\r\n                                            Create \r\n                                        </Button>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/admin/edit\">\r\n                                        <Button>\r\n                                            Edit\r\n                                        </Button>\r\n                                    </Link>\r\n                                </li>\r\n                                {!auth.guest ? <li>\r\n                                            <Link to=\"/admin/delete\">\r\n                                                <Button variant=\"danger\">\r\n                                                    Delete \r\n                                                </Button>\r\n                                            </Link>\r\n                                        </li> :\r\n                                        null\r\n                                }\r\n                                <li>\r\n                                    <Button \r\n                                        variant=\"success\"\r\n                                        onClick={() => {\r\n                                            this.props.history.push('/')\r\n                                        }}\r\n                                    >\r\n                                        Home\r\n                                    </Button>\r\n                                </li>\r\n                                <li>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        auth.logout( () => {\r\n                                            this.props.history.push('/admin/login')\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    Log OUT\r\n                                </Button>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                        <div className=\"admin-content\">                            \r\n                            <PrivateRoute path=\"/admin/create\" component={Create} guest={auth.guest}/>\r\n                            <PrivateRoute path=\"/admin/edit\" component={Edit} guest={auth.guest}/>\r\n                            <PrivateRoute path=\"/admin/delete\" component={Delete} guest={auth.guest} />\r\n                        </div>\r\n                    </div>\r\n                </Provider>\r\n            </BrowserRouter>\r\n          )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport auth from './Auth'\r\nimport axios from 'axios'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst Login = (props) => {\r\n        const wrongInput = \"#ffd4d4\"\r\n        let userBgColor = null\r\n        let passwordBgColor = null\r\n\r\n        return(\r\n            <div className=\"Login-container\">\r\n                <form id=\"logIn\" className=\"Login-form\">\r\n                    <label htmlFor=\"uname\">Username</label>\r\n                    <input className=\"Login-input\" onSubmit={e => e.preventDefault()} style={{backgroundColor: userBgColor}} type=\"text\" placeholder=\"Enter Username\" name=\"uname\" id=\"uname\" required />\r\n\r\n                    <label htmlFor=\"psw\">Password</label>\r\n                    <input className=\"Login-input\" onSubmit={e => e.preventDefault()} style={{backgroundColor: passwordBgColor}} type=\"password\" placeholder=\"Enter Password\" name=\"psw\" id=\"psw\" required />\r\n\r\n                    <Button\r\n                        className=\"Login-button\"\r\n                        form=\"logIn\"\r\n                        type=\"submit\"\r\n                        value=\"submit\"\r\n                        onClick={\r\n                            (e) => {\r\n                                e.preventDefault()\r\n                                const username = document.getElementById(\"uname\").value\r\n                                const password = document.getElementById(\"psw\").value\r\n                                console.log(username, password)\r\n                                axios.get(`/api/users/${username}`)\r\n                                    .then(res => {\r\n                                        if(res.data.password && res.data.password === password){\r\n                                            if(res.data.username === \"guest\"){\r\n                                            // if(username === \"guest\"){\r\n                                                console.log(\"LOGGED IN AS GUEST\")\r\n                                                auth.login( () => props.history.push('/admin/create'), {guest: true})\r\n                                            }\r\n                                            else{\r\n                                                console.log(\"LOGGED IN AS ------------------ADMIN\")\r\n                                                auth.login( () => props.history.push('/admin/create'), {guest: false})\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            if(!res.data.username){\r\n                                                console.log(\"res.data.username !== username\")\r\n                                                userBgColor = wrongInput\r\n                                            }\r\n                                            passwordBgColor = wrongInput\r\n                                            document.getElementById(\"uname\").value = \"\"\r\n                                            document.getElementById(\"psw\").value = \"\"\r\n                                        }\r\n                                    })\r\n                            }\r\n                        }\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\nexport default Login","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch, } from 'react-router-dom';\r\nimport {PrivateRoute} from './components/PrivateRoute'\r\n\r\nimport FrontEndContext from './components/FrontEnd/FrontEndContext'\r\n\r\nimport Create from './components/Admin/Create';\r\nimport Admin from './components/Admin/Admin'\r\nimport Edit from './components/Admin/Edit'\r\nimport Delete from './components/Admin/oldComponents/Delete'\r\nimport Login from './components/Login'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import './css/main.css';\r\n\r\nexport default class App extends Component{\r\n\r\n  render(){\r\n    return(\r\n        <BrowserRouter>\r\n              <div className=\"app-container\" >\r\n\r\n              <Switch>\r\n                <Route  path=\"/\" exact component={FrontEndContext} />\r\n                {/* <Route  path=\"/\" exact component={FrontEndIndex} /> */}\r\n                <Route  path=\"/admin/login\" exact component={Login} />\r\n                <PrivateRoute  path=\"/admin\"  component={Admin} />\r\n                <PrivateRoute  path=\"/admin/create\" component={Create} />\r\n                <PrivateRoute  path=\"/admin/edit\" component={Edit} />\r\n                <PrivateRoute  path=\"/admin/delete\" component={Delete} />\r\n                <Route to=\"/*\" exact component={FrontEndContext} />\r\n              </Switch>\r\n\r\n              </div>\r\n        </BrowserRouter>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}